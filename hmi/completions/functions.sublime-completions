{
	"scope": "source.s840d_hmi & meta.method meta.block - meta.operand.attribute - meta.softkey.attribute - comment - string",
	"completions": [
		{
			"trigger": "ABS(VAL)\tabsolute value",
			"contents": "ABS(${1:VAL})"
		},
		{
			"trigger": "CALC_ACOS(VAL)\tarcus cosinus",
			"contents": "CALC_ACOS(${1:VAL})"
		},
		{
			"trigger": "CALC_ASIN(VAL)\tarcus sinus",
			"contents": "CALC_ASIN(${1:VAL})"
		},
		{
			"trigger": "CALC_CEIL(VAL)\tround up",
			"contents": "CALC_CEIL(${1:VAL})"
		},
		{
			"trigger": "CALC_FLOOR(VAL)\tround down",
			"contents": "CALC_FLOOR(${1:VAL})"
		},
		{
			"trigger": "CALC_LOG10(VAL)\tlog base 10",
			"contents": "CALC_LOG10(${1:VAL})"
		},
		{
			"trigger": "CALC_MAX(VAL1,VAL2)\tlog base 10",
			"contents": "CALC_MAX(${1:VAL1},${2:VAL2})"
		},
		{
			"trigger": "CALC_MIN(VAL1,VAL2)\tlog base 10",
			"contents": "CALC_MIN(${1:VAL1},${2:VAL2})"
		},
		{
			"trigger": "CALC_POW(VAL,EXP)\tlog base 10",
			"contents": "CALC_POW(${1:VAL},${2:EXP})"
		},
		{
			"trigger": "CALL(SUB)\texists program",
			"contents": "CALL(\"${1:SUB}\")"
		},
		{
			"trigger": "CLEAR_BACKGROUND\tdelete lines",
			"contents": "CLEAR_BACKGROUND"
		},
		{
			"trigger": "COS(VAL)\tcosinus",
			"contents": "COS(${1:VAL})"
		},
		{
			"trigger": "CP(SRC,DST,ERR)\tcopy program",
			"contents": "CP(\"${1:SRC}\",\"${2:DST}\",${3:ERR})"
		},
		{
			"trigger": "CVAR(VAL)\tcheck variable",
			"contents": "CVAR(${1:VAL})"
		},
		{
			"trigger": "DEBUG(TXT)\tprint to easyscreen_log.txt",
			"contents": "DEBUG(${1:TXT})"
		},
		{
			"trigger": "DLGL(TEXT)\tdialog message",
			"contents": "DLGL(\"${1:message}\")"
		},
		{
			"trigger": "DP(PATH,ERR)\tdelete program",
			"contents": "DP(\"${1:PATH}\",${3:ERR})"
		},
		{
			"trigger": "ELLIPSE(x,y,w,h,f1,f2,s)\tdraw ellipse",
			"contents": "ELLIPSE(${1:x},${2:y},${3:w},${4:h},${5:f1},${6:f2},${7:s})"
		},
		{
			"trigger": "EP(PATH)\texists program",
			"contents": "EP(\"${1:PATH}\")"
		},
		{
			"trigger": "EVAL(VAL)\tevaluate",
			"contents": "EVAL(${1:VAL})"
		},
		{
			"trigger": "EXIT\texit dialog",
			"contents": "EXIT"
		},
		{
			"trigger": "EXITLS\texit menu",
			"contents": "EXITLS"
		},
		{
			"trigger": "FORMAT(FORMAT,VAR,...)\tcreate formatted string",
			"contents": "FORMAT(\"${1:FORMAT}\",${2:VAR}${2:,${3:...}})"
		},
		{
			"trigger": "GC(OUTPUT,DST,COMMENTS,APPEND)\tgenerate code",
			"contents": "GC(\"${1:OUTPUT}\",\"${2:DST}\",${3:TRUE},${4:FALSE})"
		},
		{
			"trigger": "H_SEPARATOR(y,w,f,s)\tdraw horizontal separator",
			"contents": "H_SEPARATOR(${1:Y},${2:w},${3:f},${4:s})"
		},
		{
			"trigger": "INSTR(STR,WHAT)\tsearch WHAT in STR",
			"contents": "INSTR(${1:STR},${2:WHAT})"
		},
		{
			"trigger": "ISNUM(VAL)\tis numeric",
			"contents": "ISNUM(${1:VAL})"
		},
		{
			"trigger": "ISSTR(VAL)\tis string",
			"contents": "ISSTR(${1:VAL})"
		},
		{
			"trigger": "LA(NAME[,FILE])\tload array",
			"contents": "LA(\"${1:NAME}\"${2:,\"${3:FILE.COM}\"})"
		},
		{
			"trigger": "LB(NAME[,FILE])\tload block",
			"contents": "LB(\"${1:NAME}\"${2:,\"${3:FILE.COM}\"})"
		},
		{
			"trigger": "LEFT(STR,LEN)",
			"contents": "LEFT(${1:STR},${2:LEN})"
		},
		{
			"trigger": "LEN(STR)\tstring length",
			"contents": "LEN(${1:STR})"
		},
		{
			"trigger": "LG(NAME[,VAR[,FILE]])\tload grid",
			"contents": "LG(\"${1:NAME}\"${2:,\"${3:VAR}\"}${4:,\"${5:FILE.COM}\"})"
		},
		{
			"trigger": "LINE(x1,y1,x2,y2,f,s)\tdraw line",
			"contents": "LINE(${1:x1},${2:y1},${3:x2},${4:y2},${5:f},${6:s})"
		},
		{
			"trigger": "LISTADDITEM(VAR,VAL,CAPTION)\tadd list item",
			"contents": "LISTADDITEM(\"${1:VAR}\",${2:VAL}${3:,\"${4:CAPTION}\"})"
		},
		{
			"trigger": "LISTCLEAR(VAR)\tcount list items",
			"contents": "LISTCLEAR(\"${1:VAR}\")"
		},
		{
			"trigger": "LISTCOUNT(VAR)\tcount list items",
			"contents": "LISTCOUNT(\"${1:VAR}\")"
		},
		{
			"trigger": "LISTDELETEITEM(VAR,POS)\tremove list item",
			"contents": "LISTDELETEITEM(\"${1:VAR}\",${2:POS})"
		},
		{
			"trigger": "LISTINSERTITEM(VAR,POS,VAL,CAPTION)\tinsert list item",
			"contents": "LISTINSERTITEM(\"${1:VAR}\",${2:POS},${3:VAL}${4:,\"${5:CAPTION}\"})"
		},
		{
			"trigger": "LM(NAME)\tload mask",
			"contents": "LM(\"${1:NAME}\")"
		},
		{
			"trigger": "LM(NAME,,CHILD)\tload mask",
			"contents": "LM(\"${1:NAME}\"${2:,,${3:TRUE}})"
		},
		{
			"trigger": "LM(NAME,FILE)\tload mask",
			"contents": "LM(\"${1:NAME}\"${2:,\"${3:FILE.COM}\"})"
		},
		{
			"trigger": "LM(NAME,FILE,CHILD)\tload mask",
			"contents": "LM(\"${1:NAME}\",${2:\"${3:FILE.COM}\"}${4:,${5:TRUE}})"
		},
		{
			"trigger": "LM(NAME,FILE,CHILD,VAR)\tload mask",
			"contents": "LM(\"${1:NAME}\",${2:\"${3:FILE.COM}\"},${4:TRUE}${6:,${7:REG[0]}})"
		},
		{
			"trigger": "LS(NAME)\tload softkeys",
			"contents": "LS(\"${1:NAME}\")"
		},
		{
			"trigger": "LS(NAME,,MERGE)\tload softkeys",
			"contents": "LS(\"${1:NAME}\",,${2:TRUE})"
		},
		{
			"trigger": "LS(NAME,FILE)\tload softkeys",
			"contents": "LS(\"${1:NAME}\",\"${2:FILE}\")"
		},
		{
			"trigger": "LS(NAME,FILE,MERGE)\tload softkeys",
			"contents": "LS(\"${1:NAME}\",\"${2:FILE}\",${3:TRUE})"
		},
		{
			"trigger": "MIDS(STR,START,LEN)",
			"contents": "MIDS(${1:STR},${2:START},${3:LEN})"
		},
		{
			"trigger": "MP(SRC,DST,ERR)\tmove program",
			"contents": "MP(\"${1:SRC}\",\"${2:DST}\",${3:ERR})"
		},
		{
			"trigger": "MRDOP(SERVO,VARS,REG_IDX)\tread multiple drive parameters",
			"contents": "MRDOP(\"${1:SERVO_3:13:2}\",\"${2:10*23}\",${3:REG_IDX})"
		},
		{
			"trigger": "MRNP(\"VAR1*VAR2*...\",REG)\tmultiread from NC/PLC",
			"contents": "MRNP(\"${1:VAR1}*${2:VAR2}\",${3:0})"
		},
		{
			"trigger": "PI_SERVICE()\tselect pi service",
			"contents": "PI_SERVICE($0)"
		},
		{
			"trigger": "PI_START()\tstart pi service",
			"contents": "PI_START($0)"
		},
		{
			"trigger": "RDFILE(PATH,SECTION,KEY)\tread value from ini-file",
			"contents": "RDFILE(${1:PATH},\"${2:SECTION}\",\"${3:KEY}\")"
		},
		{
			"trigger": "RDLINEFILE(PATH,LINE_NO)\tread value from file",
			"contents": "RDLINEFILE(${1:PATH},${2:LINE_NO})"
		},
		{
			"trigger": "RDOP(SERVO,VAR,VAL)\tread drive parameter",
			"contents": "RDOP(\"${1:SERVO_3:13:2}\",\"${2:10}\")"
		},
		{
			"trigger": "RECT(x,y,w,h,f1,f2,s)\tdraw rectangle",
			"contents": "RECT(${1:x},${2:y},${3:w},${4:h},${5:f1},${6:f2},${7:s})"
		},
		{
			"trigger": "REPLACE(STR,WHAT,REPL)\treplace WHAT by REPL in STR",
			"contents": "REPLACE(${1:STR},${2:WHAT},${3:REPL})"
		},
		{
			"trigger": "RESIZE_VAR_IO(VAR,X,Y,W,H)\tresize intput/output control",
			"contents": "RESIZE_VAR_IO(${1:VAR},${2:X},${3:Y},${4:W},${5:H})"
		},
		{
			"trigger": "RESIZE_VAR_TXT(VAR,X,Y,W,H)\tresize intput/output control",
			"contents": "RESIZE_VAR_TXT(${1:VAR},${2:X},${3:Y},${4:W},${5:H})"
		},
		{
			"trigger": "RETURN\texit method",
			"contents": "RETURN"
		},
		{
			"trigger": "RIGHT(STR,LEN)\treturn LEN chars from right",
			"contents": "RIGHT(${1:STR},${2:LEN})"
		},
		{
			"trigger": "RNP(VAR)\tread from NC/PLC",
			"contents": "RNP(\"${1:VAR}\")"
		},
		{
			"trigger": "ROUND(VAL,DEC)\tround value",
			"contents": "ROUND(${1:VAL},${1:0})"
		},
		{
			"trigger": "SDEG(VAL)\tsdeg",
			"contents": "SDEG(${1:VAL})"
		},
		{
			"trigger": "SIN(VAL)\tsinus",
			"contents": "SIN(${1:VAL})"
		},
		{
			"trigger": "SP(PATH,ERR)\tselect program",
			"contents": "SP(\"${1:PATH}\",${3:ERR})"
		},
		{
			"trigger": "SQRT(VAL)\tsquare root",
			"contents": "SQRT(${1:VAL})"
		},
		{
			"trigger": "SRAD(VAL)\tsrad",
			"contents": "SRAD(${1:VAL})"
		},
		{
			"trigger": "STAN(VAL)\tstan",
			"contents": "STAN(${1:VAL})"
		},
		{
			"trigger": "START_TIMER(\"SUB\",INTERVAL)\tstart cyclic call of SUB",
			"contents": "START_TIMER(\"${1:SUB}\",${2:INTERVAL})"
		},
		{
			"trigger": "STOP_TIMER(\"SUB\")\tstop cyclic call of SUB",
			"contents": "STOP_TIMER(\"${1:SUB}\")"
		},
		{
			"trigger": "STRCMP(STR1,STR2)\tcompare strings",
			"contents": "STRCMP(${1:STR1},${2:STR2})"
		},
		{
			"trigger": "STRINSERT(STR,INSERT,POS)\tinsert into string",
			"contents": "STRINSERT(${1:STR},${2:INSERT},${2:POS})"
		},
		{
			"trigger": "STRREMOVE(STR,POS,COUNT)\tremove from string",
			"contents": "STRREMOVE(${1:STR},${2:POS},${2:COUNT})"
		},
		{
			"trigger": "TAN(VAL)\ttangens",
			"contents": "TAN(${1:VAL})"
		},
		{
			"trigger": "TRIMLEFT(STR)\tremove leading whitespace",
			"contents": "TRIMLEFT(${1:STR})"
		},
		{
			"trigger": "TRIMRIGHT(STR)\tremove trailing whitespace",
			"contents": "TRIMRIGHT(${1:STR})"
		},
		{
			"trigger": "V_SEPARATOR(x,w,f,s)\tdraw vertical separator",
			"contents": "V_SEPARATOR(${1:x},${2:w},${3:f},${4:s})"
		},
		{
			"trigger": "WDOP(SERVO,VAR,VAL)\twrite drive parameter",
			"contents": "WDOP(\"${1:SERVO_3:13:2}\",\"${2:10}\",${3:VAL})"
		},
		{
			"trigger": "WNP(VAR,VAL)\twrite to NC/PLC",
			"contents": "WNP(\"${1:VAR}\",${2:VAL})"
		},
		{
			"trigger": "WRFILE(PATH,SECTION,KEY)\twrite value to ini-file",
			"contents": "WRFILE(${1:PATH},\"${2:SECTION}\",\"${3:KEY}\")"
		},
		{
			"trigger": "WRLINEFILE(TXT,PATH)\twrite value to file",
			"contents": "WRLINEFILE(${1:TXT},${2:PATH})"
		}
	]
}
