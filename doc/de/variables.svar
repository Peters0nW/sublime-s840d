<?xml version="1.0" encoding="utf-8"?>
<info svar="840Dsl_sysvar_lists_man_0517_de-DE">

<parameter type="INT" dim="1">
<name>$AC_MARKER</name>
<brief>Anwender-Feldvariable vom Typ Integer</brief>
<description>Die Feldvariable $AC_MARKER[n] dient zum Speichern von anwendungsbezogenen Integer-Rechenergebnissen. Abhängig von $MC_MM_BUFFERED_AC_MARKER wird die Variable im DRAM oder im SRAM gespeichert. Die Feldelemente der nicht gepufferten Variable (DRAM) werden bei Reset auf 0 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_SYSTEM_MARKER</name>
<brief>System-Feldvariable vom Typ Integer</brief>
<description>Die Feldvariable $AC_SYSTEM_MARKER[n] dient zum Speichern von anwendungsbezogenen Integer-Rechenergebnissen. Die Variable ist reserviert für SIEMENS-Applikationen. Abhängig von $MC_MM_BUFFERED_AC_MARKER wird die Variable im DRAM oder im SRAM gespeichert. Die Feldelemente der nicht gepufferten Variable (DRAM) werden bei Reset auf 0 gesetzt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_PARAM</name>
<brief>Anwender-Feldvariable vom Typ Real</brief>
<description>Die Feldvariable $AC_PARAM[n] dient zum Speichern von anwendungsbezogenen Real-Rechenergebnissen. Abhängig von $MC_MM_BUFFERED_AC_PARAM wird die Variable im DRAM oder im SRAM gespeichert. Die Feldelemente der nicht gepufferten Variable (DRAM) werden bei Reset auf 0 gesetzt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_SYSTEM_PARAM</name>
<brief>System-Feldvariable vom Typ Real</brief>
<description>Die Feldvariable $AC_SYSTEM_PARAM[n] dient zum Speichern von anwendungsbezogenen Real-Rechenergebnissen. Die Variable ist reserviert für SIEMENS-Applikationen. Abhängig von $MC_MM_BUFFERED_AC_PARAM wird die Variable im DRAM oder im SRAM gespeichert. Die Feldelemente der nicht gepufferten Variable (DRAM) werden bei Reset auf 0 gesetzt.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_UBFR</name>
<brief>1. Basisframe im Kanal in der Datenhaltung</brief>
<description>Die Variable $P_UBFR dient zur Programmierung des 1. Basisframe im Kanal in der Datenhaltung. Das entsprechende Datenhaltungsframe kann über G500, G54 .. G599 aktiviert werden. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden. $P_UBFR entspricht $P_CHBFR[0].

Anwendung:
$P_UBFR = ctrans(x,10) : crot(z,45)
$P_UBFR[y,tr] = 5
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_SETFRAME</name>
<brief>Aktives Systemframes für Istwertsetzen</brief>
<description>Die Variable $P_SETFRAME dient zur Programmierung des aktiven Systemframes für Istwertsetzen und Ankratzen.

Bei Reset ist die Aktivierung des Systemframes abhängig von folgenden Maschinendaten:
Bit0 in $MC_RESET_MODE_MASK
Bit0 in $MC_CHSFRAME_RESET_MASK
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_EXTFRAME</name>
<brief>Aktives Systemframes externes Frame</brief>
<description>Die Variable $P_EXTFRAME dient zur Programmierung des aktiven Systemframes für die externe Nullpunktverschiebung.

Bei Reset ist die Aktivierung des Systemframes abhängig von folgenden Maschinendaten:
Bit0 in $MC_RESET_MODE_MASK
Bit1 in $MC_CHSFRAME_RESET_MASK
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_PARTFRAME</name>
<brief>Aktives Systemframe für Werkzeugträger</brief>
<description>Die Variable $P_PARTFRAME ermittelt das aktive Systemframe für TCARR und PAROT.

Bei Reset ist die Aktivierung des Systemframes abhängig von folgenden Maschinendaten:
Bit0 in $MC_RESET_MODE_MASK
$MC_GCODE_RESET_MODE[51]
$MC_GCODE_RESET_VALUES[51]
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_TOOLFRAME</name>
<brief>Aktives Systemframe für TOROT</brief>
<description>Die Variable $P_TOOLFRAME ermittelt das aktive Systemframe für TOROT und TOFRAME.

Bei Reset ist die Aktivierung des Systemframes abhängig von folgenden Maschinendaten:
Bit0 in $MC_RESET_MODE_MASK
$MC_GCODE_RESET_MODE[52]
$MC_GCODE_RESET_VALUES[52]
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_WPFRAME</name>
<brief>Aktives Systemframe für das Werkstück</brief>
<description>Die Variable $P_WPFRAME dient zur Programmierung des aktiven Systemframes für Werkstückbezugspunkte.

Bei Reset ist die Aktivierung des Systemframes abhängig von folgenden Maschinendaten:
Bit0 in $MC_RESET_MODE_MASK
Bit4 in $MC_CHSFRAME_RESET_MASK
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CYCFRAME</name>
<brief>Aktives Systemframe für Zyklen</brief>
<description>Die Variable $P_CYCFRAME dient zur Programmierung des aktiven Systemframes für Zyklen.

Bei Reset ist die Aktivierung des Systemframes abhängig von folgenden Maschinendaten:
Bit0 in $MC_RESET_MODE_MASK
Bit5 in $MC_CHSFRAME_RESET_MASK
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_TRAFRAME</name>
<brief>Aktives Systemframe für Transformationen</brief>
<description>Die Variable $P_TRAFRAME dient zur Programmierung des aktiven Systemframes für Transformationen. Dieses Systemframe wird bei Transformationsanwahl von TRANSMIT und TRACYL mit folgender Projektierung beschrieben:
$MN_FRAME_GEOAX_CHANGE_MODE = 1 oder 2
$MC_TRANSMIT_ROT_AX_FRAME_1 = 2
$MC_TRANSMIT_ROT_AX_FRAME_2 = 2
$MC_TRACYL_ROT_AX_FRAME_1 = 2
$MC_TRACYL_ROT_AX_FRAME_2 = 2
</description>
</parameter>

<parameter type="FRAME" dim="1">
<name>$P_CHBFRAME</name>
<brief>Aktives Basisframe im Kanal</brief>
<description>Die Feldvariable $P_CHBFRAME[n] dient zur Programmierung des n-ten aktiven Basisframes im Kanal.

Bei Reset ist die Aktivierung des Basisframes abhängig von folgenden Maschinendaten:
Bit0 und Bit14 in $MC_RESET_MODE_MASK
$MC_CHBFRAME_RESET_MASK
</description>
</parameter>

<parameter type="FRAME" dim="1">
<name>$P_NCBFRAME</name>
<brief>Aktives globales Basisframe</brief>
<description>Die Feldvariable $P_NCBFRAME[n] dient zur Programmierung des n-ten aktiven globalen Basisframes.

Bei Reset ist die Aktivierung des Basisframes abhängig von folgenden Maschinendaten:
Bit0 und Bit14 in $MC_RESET_MODE_MASK
$MN_NCBFRAME_RESET_MASK
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_ACTBFRAME</name>
<brief>Aktives Gesamt-Basisframe</brief>
<description>Die Variable $P_ACTBFRAME ermittelt das aktive verkettete Gesamt-Basisframe. Dieses Frame setzt sich aus der Verkettung aller gültigen (siehe $P_NCBFRMASK) globalen Basisframes und aller gültigen (siehe $P_CHBFRMASK) Basisframes im Kanal zusammen. Das Gesamt-Basisframe wird immer neu berechnet, wenn ein Basisframe aktiviert wird.

Bei Reset ist die Aktivierung der Basisframes abhängig von folgenden Maschinendaten:
Bit0 und Bit14 in $MC_RESET_MODE_MASK
$MN_NCBFRAME_RESET_MASK
$MC_CHBFRAME_RESET_MASK
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_BFRAME</name>
<brief>1. aktives Basisframe im Kanal</brief>
<description>Die Variable $P_BFRAME dient zur Programmierung des 1. aktiven Basisframe im Kanal. Die Variable entspricht $P_CHBFRAME[0].

Bei Reset ist die Aktivierung des Basisframes abhängig von folgenden Maschinendaten:
Bit0 und Bit14 in $MC_RESET_MODE_MASK
$MC_CHBFRAME_RESET_MASK
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_IFRAME</name>
<brief>Aktives einstellbares Frame</brief>
<description>Die Variable $P_IFRAME dient zur Programmierung des aktiven einstellbaren Frames. Ein einstellbares Datenhaltungsframe $P_UIFR[n] wird durch die Ausführung von G500, G54 bis G599 zum aktiven einstellbaren Frame.

Bei Reset ist die Aktivierung des einstellbaren Frames abhängig von folgenden Maschinendaten:
Bit0 in $MC_RESET_MODE_MASK
$MC_GCODE_RESET_MODE[7]
$MC_GCODE_RESET_VALUES[7]
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_PFRAME</name>
<brief>Programmierbarer Frame</brief>
<description>Die Variable $P_PFRAME dient zur Programmierung des aktiven programmierbaren Frames.

Das programmierbare Frame bleibt mit folgender Projektierung bei Reset erhalten:
$MC_PFRAME_RESET_MODE = 1
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_ACTFRAME</name>
<brief>Aktives Gesamtframe</brief>
<description>Die Variable $P_ACTFRAME ermittelt das aktive verkettete Gesamtframe. Das aktive Gesamtframe ergibt sich nach folgender Formel:
$P_ACTFRAME = $P_PARTFRAME : $P_SETFRAME : $P_EXTFRAME : $P_ISO1FRAME : $P_ISO2FRAME : $P_ISO3FRAME : $P_ACTBFRAME : $P_IFRAME : $P_GFRAME : $P_TOOLFRAME : $P_WPFRAME : $P_TRAFRAME : $P_PFRAME : $P_ISO4FRAME : $P_CYCFRAME
Bei jeder Aktivierung eines Frames der Framekette und bei Reset wird das Gesamtframes neu berechnet.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_UIFRNUM</name>
<brief>Nummer des aktiven einstellbaren Frames</brief>
<description>Die Variable $P_UIFRNUM ermittelt die Nummer des aktiven einstellbaren Frames. Ein einstellbares Datenhaltungsframe $P_UIFR[n] wird durch die Ausführung von G500, G54 bis G599 zum aktiven einstellbaren Frame.

G500: $P_UIFRNUM = 0
G54:  $P_UIFRNUM = 1
G599: $P_UIFRNUM = 99

Bei Reset ist die Aktivierung des einstellbaren Frames abhängig von folgenden Maschinendaten:
Bit0 in $MC_RESET_MODE_MASK
$MC_GCODE_RESET_MODE[7]
$MC_GCODE_RESET_VALUES[7]
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_NCBFRMASK</name>
<brief>Globale Basisframe-Maske</brief>
<description>Die Variable $P_NCBFRMASK dient zur Festlegung der NCU-globalen Basisframes, die in die Berechnung des Gesamt-Basisframes $P_ACTBFRAME mit einbezogen werden. Die Variable ist als Bitmaske ausgelegt, in der die globalen Basisframes ausgewählt werden können. Bei Reset wird die Maske mit $MN_NCBFRAME_RESET_MASK überschrieben.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_CHBFRMASK</name>
<brief>Basisframe-Maske im Kanal</brief>
<description>Die Variable $P_CHBFRMASK dient zur Festlegung der kanalspezifischen Basisframes, die in die Berechnung des Gesamt-Basisframes $P_ACTBFRAME mit einbezogen werden. Die Variable ist als Bitmaske ausgelegt, in der die Basisframes ausgewählt werden können. Bei Reset wird die Maske mit $MC_CHBFRAME_RESET_MASK überschrieben.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_CHSFRMASK</name>
<brief>Systemframe-Maske</brief>
<description>Die Variable $P_CHSFRMASK dient zur Festlegung der kanalspezifischen Systemframes, die in die Berechnung des Gesamt-Frames $P_ACTFRAME mit einbezogen werden. Die Variable ist als Bitmaske ausgelegt, in der die Systemframes ausgewählt werden können. Bei Reset wird die Maske mit $MC_CHSFRAME_RESET_MASK überschrieben.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_AD</name>
<brief>Aktive Werkzeugkorrekturen</brief>
<description>$P_AD[n]
Aktive Werkzeugkorrekturen
n: Parameternummer 1 - 36
n = 1-25  $TC_DP1 bis $TC_DP25
n = 26    $TC_DPCE  CuttingeEdge-Nummer der Schneide (Funktion: Eindeutige D-Nummer)
n = 27    $TC_DPH   H-Nummer der Schneide (Funktion: ISO-Mode)
n = 28    $TC_DPV   Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 29    $TC_DPV3  Komponente 1 der Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 30    $TC_DPV4  Komponente 2 der Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 31    $TC_DPV5  Komponente 3 der Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 32    $TC_DPVN3 Normalen Vektor-Komponente 1 (Funktion: WZ-Orientierung)
n = 33    $TC_DPVN4 Normalen Vektor-Komponente 2 (Funktion: WZ-Orientierung)
n = 34    $TC_DPVN5 Normalen Vektor-Komponente 3 (Funktion: WZ-Orientierung)
n = 35    $TC_DPNT  Anzahl der Zähne der Schneide
n = 36    $TC_DPROT Grunddrehwinkel der Schneide
Gehört ein Korrekturparameter zu einer Funktion, die nicht aktiv ist, kommt ein Alarm.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_ADT</name>
<brief>Aktive Werkzeugkorrekturen transformiert</brief>
<description>$P_ADT[n]
Aktive Werkzeugkorrekturen transformiert
n: Parameternummer 1 - 36
n = 1-25  $TC_DP1 bis $TC_DP25
n = 26    $TC_DPCE  CuttingeEdge-Nummer der Schneide (Funktion: Eindeutige D-Nummer)
n = 27    $TC_DPH   H-Nummer der Schneide (Funktion: ISO-Mode)
n = 28    $TC_DPV   Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 29    $TC_DPV3  Komponente 1 der Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 30    $TC_DPV4  Komponente 2 der Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 31    $TC_DPV5  Komponente 3 der Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 32    $TC_DPVN3 Normalen Vektor-Komponente 1 (Funktion: WZ-Orientierung)
n = 33    $TC_DPVN4 Normalen Vektor-Komponente 2 (Funktion: WZ-Orientierung)
n = 34    $TC_DPVN5 Normalen Vektor-Komponente 3 (Funktion: WZ-Orientierung)
n = 35    $TC_DPNT  Anzahl der Zähne der Schneide
n = 36    $TC_DPROT Grunddrehwinkel der Schneide
Gehört ein Korrekturparameter zu einer Funktion, die nicht aktiv ist, kommt ein Alarm.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_DLNO</name>
<brief>aktive Summenkorrekturnummer</brief>
<description>aktive Summenkorrekturnummer DL=0 - DL='max.'; 'max'= Wert von $MN_MM_MAX_SUMCORR_PER_CUTTEDGE
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_TOOL</name>
<brief>aktive Werkzeugschneide</brief>
<description>aktive Werkzeugschneide D0 - D'max.'; 'max'= Wert von $MN_MM_MAX_CUTTING_EDGE_NO
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_TOOLNO</name>
<brief>aktive Werkzeugnummer</brief>
<description>aktive Werkzeugnummer T0 - T32000; mit aktiver Funktion 'flache D-Nummer' kann T 8-stellig sein
Der Befehl sollte allgemein bei aktiver Magazinverwaltung nicht verwendet werden.
Bei aktiver Magazinverwaltung sollte statt dessen GETEXET verwendet werden.
(Nur für den Fall, dass gilt $MC_CUTTING_EDGE_DEFAULT=-1, oder &gt; 0 ist die Programmierung immer sicher.
Für $MC_CUTTING_EDGE_DEFAULT=0, oder =-2 kann die falsche T-Nummer ermittelt werden.
Falls die Programmierung nach einer Programmierung D &gt; 0 erfolgt, ist sie ebenfalls stets sicher.

Achtung: speziell für $MC_CUTTING_EDGE_DEFAULT=-2 können $P_TOOLNO (die T-Nr. des aktiven WZs mit dem die momentan aktive D-Korrektur berechnet wurde) und GETEXET (das gewechselte WZ) verschiedene T-Nummern liefern.

-&gt;siehe auch $P_MTHSDC und die Dokumentation zum Thema mehrere WZ-Halter/Spindeln.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_TOOLP</name>
<brief>zuletzt programmierte Werkzeugnummer</brief>
<description>zuletzt programmierte Werkzeugnummer T0 - T32000 (bei Betrieb ohne Magazinverwaltung).
Der Befehl kann bei aktiver Magazinverwaltung nicht verwendet werden.
Bei aktiver Magazinverwaltung muss statt dessen GETSELT verwendet werden.
Falls die Funktion 'Alarmverzögerung von T nach M06' aktiv ist, dann ist bei fehlerhaft programmierter vorausgehender T-Adresse die Ergebnis-T-Nummer = -1.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_TOOLL</name>
<brief>aktive Werkzeuggesamtlänge</brief>
<description>$P_TOOLL[n]
aktive Werkzeuggesamtlänge
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_TOOLO</name>
<brief>Aktive Werkzeugorientierung</brief>
<description>$P_TOOLO[n]
Aktive Werkzeugorientierung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOLO_ACT</name>
<brief>Aktive Sollorientierung</brief>
<description>$AC_TOOLO_ACT[n]
Aktive Sollorientierung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOLO_END</name>
<brief>Endorientierung des aktiven Satzes</brief>
<description>$AC_TOOLO_END[n]
Endorientierung des aktiven Satzes
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_TOOLO_DIFF</name>
<brief>Restwinkel der Orientierung im aktiven Satz</brief>
<description>Restwinkel der Werkzeugorientierung im aktiven Satz
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VC_TOOLO</name>
<brief>Istorientierung</brief>
<description>$VC_TOOLO[n]
Istorientierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$VC_TOOLO_DIFF</name>
<brief>Winkel zwischen Soll- und Istorientierung</brief>
<description>Winkel zwischen Soll- und Istorientierung
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$VC_TOOLO_STAT</name>
<brief>Status des Berechnung der Istorientierung</brief>
<description>Status der Berechnung der Istorientierung
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_TC</name>
<brief>aktiver Werkzeugträger</brief>
<description>aktiver Werkzeugträger
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC</name>
<brief>Aktiver Werkzeugträger</brief>
<description>Aktiver Werkzeugträger
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_TCNUM</name>
<brief>Zahl verfügbarer Werkzeugträger im Kanal</brief>
<description>Zahl der verfügbaren Werkzeugträger im Kanal
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_TCANG</name>
<brief>Aktiver Winkel einer Werkzeugträgerachse</brief>
<description>$P_TCANG[n]
Aktiver Winkel einer Werkzeugträgerachse
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_TCDIFF</name>
<brief>Winkeldifferenz bei Hirthverzahnung</brief>
<description>$P_TCDIFF[n]
Differenz zwischen berechnetem und verwendetem Winkel einer Werkzeugträgerachse bei Rasterung (Hirth-Verzahnung) des Winkels
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_TCSOL</name>
<brief>Lösungsanzahl für Werkzeugträger</brief>
<description>Zahl der Lösungen bei Bestimmung der Drehachswinkel eines orientierbaren Werkzeugträgers aus einem Frame.
Bei 0 bis 2 Lösungen wird der entsprechende Wert zurückgegeben.
Bei unendlich vielen Lösungen ist der Rückgabewert 3.
Werden die Winkel vorgeben (TCOABS) ist die Lösungsanzahl immer 1.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_TCSTAT</name>
<brief>Status eines orientierbaren Werkzeugträgers</brief>
<description>Gibt den Status eines orientierbaren Werkzeugträgers an.

Die Variable ist bit-codiert mit folgenden Bedeutungen:
0x1        Die erste Drehachse ist vorhanden
0x2        Die zweite Drehachse ist vorhanden
0x4        Die für die Berechnung verwendeten Winkel stammen aus einer Orientierung in Framerichtung
0x8        Die für die Berechnung verwendeten Winkel wurden absolut vorgegeben
0x10       Der Polachswinkel ist bei der Orientierung in Framerichtung unbestimmt
0x1000     Nur das Werkzeug ist drehbar (Kinematiktyp T)
0x2000     Nur das Werkstück ist drehbar (Kinematiktyp P)
0x4000     Werkzeug und Werkstück sind drehbar (Kinematiktyp M)
Die hier nicht genannten Bits sind derzeit nicht belegt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_TOOLR</name>
<brief>Aktiver Werkzeugradius</brief>
<description>aktiver Werkzeugradius (gesamt)
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_TOOLND</name>
<brief>Anzahl der Schneiden des Werkzeugs T</brief>
<description>$P_TOOLND[t]
Anzahl der Schneiden von WZ t
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$P_TOOLEXIST</name>
<brief>Tool mit T-Nr. t existiert</brief>
<description>$P_TOOLEXIST[t]
Existiert das WZ mit der T-Nr. t
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_D</name>
<brief>programmierte D-Nummer ( ISO2.1-Mode )</brief>
<description>Die D-Nummer ist die Werkzeugkorrekturnummer im ISO-Mode2.1 ( Milling ). Ist keine Werkzeugkorrektur aktiv wird 0 ausgegeben.
Die Werkzeugkorrektur kann mit D oder H angewählt werden. In dieser Variable steht aber immer nur der D-Wert.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_H</name>
<brief>programmierte H-Nummer ( ISO2.1 Milling )</brief>
<description>Die H-Nummer ist die Werkzeugkorrekturnummer im ISO-Mode2.1 ( Milling ). Ist keine Werkzeugkorrektur aktiv wird 0 ausgegeben.
Die Werkzeugkorrektur kann mit D oder H angewählt werden. In dieser Variable steht aber immer nur der H-Wert.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_TOOLMN</name>
<brief>Magazin-Nummer des Werkzeugs</brief>
<description>$A_TOOLMN[t]
Magazin-Nummer von Werkzeugs t
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_TOOLMLN</name>
<brief>Magazinplatz-Nummer des Werkzeugs</brief>
<description>$A_TOOLMLN[t]
Magazinplatz-Nummer von Werkzeugs t
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_MYMN</name>
<brief>Nummer des Eigentümermagazins des Werkzeugs</brief>
<description>$A_MYMN[t]
Nummer des Eigentümermagazins des Werkzeugs mit der T-Nr. t.
(Ein Magazin wird dann zum Eigentümermagazin, wenn das Werkzeug auf einen Platz
der Magazinplatzart 1 ($TC_MPP1=1) beladen wird.)
Ergebniswert =  0 = WZ ist nicht beladen (falls $A_TOOLMN &gt; 0, dann Handwerkzeug).
Ergebniswert = -1 = WZ-Verwaltung ist nicht aktiv Ergebniswert = -2 = WZ mit der T-Nr. t existiert nicht.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_MYMLN</name>
<brief>Nummer des Eigentümermagazinplatzes des Werkzeugs</brief>
<description>$A_MYMLN[t]
Nummer des Eigentümermagazinplatzes des Werkzeugs mit der T-Nr. t.
(Ein Magazinplatz wird dann zum , wenn das Werkzeug auf einen Platz
der Magazinplatzart 1 ($TC_MPP1=1) beladen wird.)
Ergebniswert =  0 = WZ ist nicht beladen (falls $A_TOOLMLN &gt; 0, dann Handwerkzeug).
Ergebniswert = -1 = WZ-Verwaltung ist nicht aktiv Ergebniswert = -2 = WZ mit der T-Nr. t existiert nicht.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$A_MONIFACT</name>
<brief>Faktor für Standzeitüberwachung</brief>
<description>Faktor für Standzeitüberwachung
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_TOOLNG</name>
<brief>Anzahl definierter WZ-Gruppen</brief>
<description>Anzahl definierter WZ-Gruppen, die dem Kanal zugeordnet sind.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_TOOLNT</name>
<brief>Anzahl definierter Werkzeuge</brief>
<description>Anzahl definierter Werkzeuge, die dem Kanal zugeordnet sind.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_TOOLT</name>
<brief>Werkzeugnummer</brief>
<description>$P_TOOLT[i]
i-te Werkzeugnummer T
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$P_TOOLD</name>
<brief>D-Nr. des Werkzeugs T</brief>
<description>$P_TOOLD[t,i]
i-te D-Nr des Werkzeugs mit der T-Nr. t; i=1,2...
ist t der Wert eines nicht definierten WZs, so wird -2 zurückgeben
ist i ein Wert außerhalb des erlaubten Bereichs, so wird 0 zurückgegeben
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_USEKT</name>
<brief>Maske zur Werkzeugauswahl</brief>
<description>$P_USEKT (= USE Kind of Tool)
Ist ein bitcodierter Wert.
Alle Werkzeuge, deren Parameter $TC_TP11 eines der Bits von $P_USEKT gesetzt hat, stehen den folgenden Werkzeugwechseln zu Verfügung. Der Wert Null ist inhaltsgleich mit 'alle Bits sind gesetzt'
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$P_TOOLNDL</name>
<brief>Anzahl der DL-Korrekturen</brief>
<description>$P_TOOLNDL[t,d]
Anzahl der DL-Korrekturen der D-Korrektur gegeben durch T-Nr. t und D-Nr. d
&gt;0  Anzahl der DL-Korrekturen
 0  keine DL-Korrektur für diese D-Korrektur
-1  Summenkorrekturfunktion nicht aktiv
-2  t ist der Wert eines nicht definierten Werkzeugs
-3  d ist der Wert einer nicht definierten D-Korrektur
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_MAGN</name>
<brief>Anzahl definierter Magazine</brief>
<description>Anzahl definierter Magazine, die dem Kanal zugeordnet sind.
&gt;0  erfolgreicher Lesezugriff
 0  keine Magazine definiert
-1  WZMG ist nicht aktiv
BTSS-Baustein= TM
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_MAG</name>
<brief>Magazinnummer</brief>
<description>$P_MAG[i]
i-te Magazinnummer
&gt;0  erfolgreicher Lesezugriff
 0  i ist außerhalb des erlaubten Bereichs
-1  WZMG ist nicht aktiv
BTSS-Baustein= TM
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$P_MAGNDIS</name>
<brief>Anzahl der Magazine, die mit dem internen Magazin verbundenen sind</brief>
<description>$P_MAGNDIS[n, m]
Anzahl der Magazine, die mit dem Platz m des internen Magazins n verbunden sind.
&gt;0  erfolgreicher Lesezugriff
 0  kein Magazin ist mit dem Zwischenspeicherplatz verbunden
-1  WZMG ist nicht aktiv
-2  n ist nicht die Nummer eines internen Magazins
-3  m ist nicht die Nummer eines internen Magazinplatzes
BTSS-Baustein TPM
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$P_MAGDISS</name>
<brief>Nummer des Magazins, das mit dem Zwischenspeicher verbunden ist</brief>
<description>$P_MAGDISS[l, i]
Nummer des i-ten Magazins, das mit dem Platz l des Zwischenspeichermagazins verbunden ist.
&gt;0  erfolgreicher Lesezugriff
 0  i ist außerhalb des erlaubten Bereichs
-1  WZMG ist nicht aktiv
-2  m ist nicht die Nummer eines Zwischenspeicherplatzes
-3  kein Zwischenspeichermagazin definiert
BTSS-Baustein TPM
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$P_MAGDISL</name>
<brief>Nummer des Magazins, das mit dem Belademagazin verbunden ist</brief>
<description>$P_MAGDISL[l, i]
Nummer des i-ten Magazins, das mit dem Platz l des Belademagazins verbunden ist.
&gt;0  erfolgreicher Lesezugriff
0   i ist außerhalb des erlaubten Bereichs
-1  WZMG ist nicht aktiv
-2  m ist nicht die Nummer eines Belademagazinplatzes
-3  kein Belademagazin definiert
BTSS-Baustein TPM
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_MAGNS</name>
<brief>Anzahl der Spindelplätze / WZ-Halterplätze im Zwischenspeicher</brief>
<description>Anzahl der Spindelplätze / WZ-Halterplätze im Zwischenspeicher, der dem Kanal zugeordnet ist.
&gt;0  erfolgreicher Lesezugriff
 0  keine Spindelplätze definiert
-1  WZMG ist nicht aktiv
-3  kein Zwischenspeichermagazin definiert
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_MAGS</name>
<brief>Nummer der Spindel / des WZ-Halters im Zwischenspeicher</brief>
<description>$P_MAGS[n]
n-te Nummer der Spindel / des WZ-Halters im Zwischenspeicher
&gt;0  erfolgreicher Lesezugriff
 0  n ist außerhalb des erlaubten Bereichs
-1  WZMG ist nicht aktiv
-3  kein Zwischenspeichermagazin definiert
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_MAGNREL</name>
<brief>Anzahl der zugeordneten Zwischenspeicher</brief>
<description>$P_MAGNREL[n]
Anzahl der der Spindelnummer / WZ-Halternummer n zugeordneten Zwischenspeicher
&gt;0  erfolgreicher Lesezugriff
 0  Spindelplatz hat keinen Zwischenspeicherplatz zugeordnet
-1  WZMG ist nicht aktiv
-2  n ist nicht die Nummer eines Spindelplatzes
-3  kein Zwischenspeichermagazin definiert
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$P_MAGREL</name>
<brief>Zwischenspeichernummer</brief>
<description>P_MAGREL[n, m]
m-te Zwischenspeichernummer der n-ten Spindelnummer / WZ-Halternummer
&gt;0  erfolgreicher Lesezugriff
 0  m ist außerhalb des erlaubten Bereichs
-1  WZMG ist nicht aktiv
-2  n ist nicht die Nummer eines Spindelplatzes
-3  kein Zwischenspeichermagazin definiert
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_MAGNH</name>
<brief>Anzahl definierter Magazinplatztyp-Hierarchien</brief>
<description>Höchste definierte Magazinplatztyp-Hierarchie, die dem Kanal zugeordnet sind.
Eine Magazinplatztyp-Hierarchie ist definiert, wenn mindestens ein Eintrag in der Hierarchie &lt;&gt; "9999" ist.
Es werden dabei nicht definierte Hierarchien mitgezählt, wenn noch eine definierte Hierarchie folgt.
&gt;0  erfolgreicher Lesezugriff
 0  es sind keine Platztyp-Hierarchien definiert
-1  WZMG ist nicht aktiv
BTSS-Baustein= TT
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_MAGNHLT</name>
<brief>Anzahl der definierten Platztypen</brief>
<description>$P_MAGNHLT[n]
höchster Index eines definierten Platztypen in der n-ten definierten Hierarchie
&gt;0  erfolgreicher Lesezugriff
 0  Die Hierarchie n ist nicht definiert. (alle Einträge = 9999)
-1  WZMG ist nicht aktiv
-2  n ist außerhalb des definierten Bereichs (1 &lt; n &lt;= $P_MAGNH)
Für n&lt;1 bzw. n&gt;MD18078 $MN_MM_MAX_NUM_OF_HIERARCHIES kommt der Alarm 10720
BTSS-Baustein= TT
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$P_MAGHLT</name>
<brief>Platztyp der Hierarchie</brief>
<description>P_MAGHLT[n, m] m-ter Platztyp der Hierarchie n; n = 1 ... $P_MAGNH; m = 1 ... $P_MAGNHLT
&gt;= 0  erfolgreicher Lesezugriff
9999  Platztyp in der Hierarchiestufe m von Hierarchie n ist nicht definiert.
-1    WZMG ist nicht aktiv
-2    n ist außerhalb des definierten Bereichs (1 &lt; n &lt;= $P_MAGNH)
-3    m ist außerhalb des definierten Bereichs ( 1 &lt; m &lt;= $P_MAGNHLT[n])
Für n&lt;1 bzw. n&gt;MD18078 $MN_MM_MAX_NUM_OF_HIERARCHIES kommt der Alarm 10720
Für m&lt;1 bzw. n&gt;MD18079 $MN_MM_MAX_HIERARCHY_ENTRIES kommt der Alarm 10730
BTSS-Baustein= TT
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_MAGNA</name>
<brief>Anzahl definierter Adapter</brief>
<description>Anzahl definierter Adapter, die dem Kanal zugeordnet sind.
&gt;0 erfolgreicher Lesezugriff
 0 keine Adapter definiert
-1 Funktion 'Adapter' bzw. WZMG ist nicht aktiv
BTSS-Baustein= AD
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_MAGA</name>
<brief>Adapternummer</brief>
<description>$P_MAGA[i]
i-te Adapternummer
&gt;0 erfolgreicher Lesezugriff
 0 i ist außerhalb des erlaubten Bereichs
-1 Funktion 'Adapter' bzw. WZMG ist nicht aktiv
BTSS-Baustein= AD
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_MTHSDC</name>
<brief>Masterspindel/-Toolholder f. WZ-Korrektur</brief>
<description>Master-WZ-Halternummer bzw. Masterspindelnummer bzgl. derer das aktive Werkzeug für die nächste D-Korrekturanwahl bestimmt wird.
&gt;0 erfolgreicher Lesezugriff
 0 Kein Master-WZ-Halter bzw. keine Masterspindel verfügbar.
Die nächste D-Korrektur arbeitet mit T0.
-1 WZMG nicht verfügbar.
Wenn als BTSS-Variable gelesen, gilt dies für den Zustand im aktuellen Hauptlauf-Satz
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_MONMIN</name>
<brief>Verhältnis von Werkzeugüberwachungsistwert zu Sollwert</brief>
<description>Verhältnis von Werkzeugüberwachungsistwert zu Sollwert.
Schwelle für die Werkzeugsuchstrategie "nur Werkzeuge mit Istwert größer als Schwelle einwechseln"
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_VDITCP</name>
<brief>Freie Parameter für Magazinverwaltung in VDI-Nahtstelle</brief>
<description>Freie Parameter für Magazinverwaltung in VDI-Nahtstelle
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_ATPG</name>
<brief>Aktuelle werkzeugbezogene Schleifdaten</brief>
<description>Aktuelle werkzeugbezogene Schleifdaten
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$P_TOOLENV</name>
<brief>Name einer Werkzeugumgebung</brief>
<description>Die Variable $P_TOOLENV[i] liefert den Namen der Werkzeugumgebung, die unter dem (internen) Index i abgelegt ist. Verweist i auf einen nicht definierten Datensatz, wird der Nullstring zurückgeliefert. Ist der Index i ungültig, d.h. i ist kleiner 1 oder größer als die Maximalzahl Datensätze für Werkzeugumgebungen ($MN_MM_NUM_TOOLENV), wird ein Alarm ausgegeben.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_TOOLENVN</name>
<brief>Anzahl verfügbarer Werkzeugumgebungen</brief>
<description>Gibt die Zahl der definierten Datensätze zur Beschreibung von Werkzeugumgebungen an.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_AP</name>
<brief>Winkel Polarkoordinaten</brief>
<description>Die Variable $P_AP liefert den rogrammierten Winkel bei Polarkoordinaten in Grad.
</description>
</parameter>

<parameter type="AXIS" dim="0">
<name>$P_AXN1</name>
<brief>Achsbezeichner für die Abszisse</brief>
<description>Die Variable $P_AXN1 liefert die aktuelle Adresse der Geometrieachse für die Abszisse.
</description>
</parameter>

<parameter type="AXIS" dim="0">
<name>$P_AXN2</name>
<brief>Achsbezeichner für die Ordinate</brief>
<description>Die Variable $P_AXN2 liefert die aktuelle Adresse der Geometrieachse für die Ordinate.
</description>
</parameter>

<parameter type="AXIS" dim="0">
<name>$P_AXN3</name>
<brief>Achsbezeichner für die Applikate</brief>
<description>Die Variable $P_AXN3 liefert die aktuelle Adresse der Geometrieachse für die Applikate.
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>$P_ACTGEOAX</name>
<brief>Aktueller Geometrieachsbezeichner</brief>
<description>Die Variable $P_ACTGEOAX[n] liefert ebenenabhängig den aktuellen Geometrieachsbezeichner.
Die Geometrieachszuordnung entspricht den programmierten GEOAX(1,X,2,Y,3,Z)-Werten. Die Zuordnung kann sich ebenso bei Reset und mit An- und Abwahl von Transformationen ändern.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_GG</name>
<brief>aktive G-Funktion</brief>
<description>Die Variable $P_GG[n] liefert die aktive G-Funktion der G-Funktionsgruppe n.
Geliefert wird der Index der G-Funktion laut Programmieranleitung Grundlagen Kapitel "Liste der G-Funktionen/Wegbedingungen."
(Dies entspricht auch dem Index, der bei entsprechender Projektierung an der PLC-Nahtstelle ausgegeben wird)

Beispiel:
;Abfrage auf G55
IF $P_GG[8] == 3 GOTOF LABEL_G55
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_EXTGG</name>
<brief>aktive G-Funktion bei externer Sprache</brief>
<description>$P_EXTGG[n]
Aktive G-Funktion der G-Funktionsgruppe n der externen Sprache lesen. Geliefert wird der Index der G-Funktion laut Funktionsbeschreibung "ISO-Dialekte" Kapitel "G-Befehle".
(Dies entspricht auch dem Index, der bei entsprechender Projektierung an der PLC-Nahtstelle ausgegeben wird)

Beispiel:
;Abfrage auf G55 im ISO-Dialekt-T
IF $P_EXTGG[14] == 2 GOTOF LABEL_G55
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_GG</name>
<brief>aktive G-Funktion in Synchronaktion</brief>
<description>$A_GG[n]
Aktive G-Funktion der G-Funktionsgruppe n in Synchronaktion lesen. Geliefert wird der Index der G-Funktion laut Programmieranleitung Grundlagen Kapitel "Liste der G-Funktionen/Wegbedingungen."
(Dies entspricht auch dem Index, der bei entsprechender Projektierung an der PLC-Nahtstelle ausgegeben wird)

Beispiel:
;Abfrage auf G55 in Synchronaktion
WHEN $A_GG[8] == 3 DO ...
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_SEARCH</name>
<brief>Suchlauf aktiv</brief>
<description>Liefert TRUE wenn Satzsuchlauf aktiv ist
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_SEARCH1</name>
<brief>Suchlauf mit Berechnung aktiv</brief>
<description>Liefert TRUE wenn Satzsuchlauf mit Berechnung aktiv ist.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_SEARCH2</name>
<brief>Satzsuchlauf ohne Berechnung war aktiv</brief>
<description>Liefert TRUE wenn zuletzt angewählter Suchlauftyp "Satzsuchlauf ohne Berechnung" war.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_SEARCHL</name>
<brief>zuletzt aktiver Suchlauftyp</brief>
<description>liefert den zuletzt angewählten Suchlauftyp:
(Codierung analog zu PI-Dienst _N_FINDBL)
0 : kein Suchlauf
1 : Suchlauf ohne Berechnung
2 : Suchlauf mit Berechnung an Kontur
3 : reserviert
4 : Suchlauf mit Berechnung an Satzendpunkt
5 : Suchlauf im erweiterten Programmtest
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$P_SUBPAR</name>
<brief>Übergabeparameter programmiert</brief>
<description>$P_SUBPAR[n]
Abfrage, ob beim Unterprogrammaufruf mit Parameterübergabe der Parameter n tatsächlich programmiert wurde (TRUE) oder ob das System einen Standardparameter eingesetzt hat (FALSE).
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_CTABDEF</name>
<brief>Kurventabelle ist definiert</brief>
<description>Die Variable $P_CTABDEF ermittelt, ob eine Kurventabellen-Definition aktiv ist.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_IPTRLOCK</name>
<brief>Sperre für Aktualisierung des Unterbrechungszeigers</brief>
<description>Status Sperre für Aktualisierung des Unterbrechungszeigers (BTSS-Baustein InterruptionSearch) wegen Teileprogrammbefehl IPTRLOCK/IPTRUNLOCK bzw. Maschinendatum $MC_AUTO_IPTR_LOCK:
FALSE = Unterbrechungszeiger wird bei Unterbrechung aktualisiert
TRUE  = im Unterbrechungszeiger wird der Haltesatz abgelegt
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_DELAYFST</name>
<brief>DELAYFSTON/DELAYFSTOF aktiv</brief>
<description>Abfrage ob Delay-Stop-Bereich wegen Teileprogrammbefehl DELAYFSTON/DELAYFSTOF aktiv ist oder nicht.

Hinweis:
Mit G331/G332 festgelegte Delay-Stop-Bereiche können wegen der Einschränkung auf Bewegungssätze und Verweilzeiten nur per Synchronaktion abgefragt werden (siehe $AC_DELAYFST).
FALSE = Delay-Stop-Bereich nicht aktiv
TRUE  = Delay-Stop-Bereich aktiv
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$AC_DELAYFST</name>
<brief>DELAYFSTON/DELAYFSTOF oder G331/G332 aktiv</brief>
<description>Abfrage in Synchronaktionen ob Delay-Stop-Bereich wegen Teileprogrammbefehl DELAYFSTON/DELAYFSTOF oder G331/G332 aktiv ist oder nicht.

Hinweis:
Wird $AC_DELAYFST außerhalb von Synchronaktionen im Teileprogramm verwendet, so gilt wie bei $P_DELAYFST, dass mit G331/G332 festgelegte Delay-Stop-Bereiche wegen der Einschränkung auf Bewegungssätze und Verweilzeiten nicht abgefragt werden können (siehe $P_DELAYFST).
FALSE = Delay-Stop-Bereich nicht aktiv
TRUE  = Delay-Stop-Bereich aktiv
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_MC</name>
<brief>modales Unterprogrammaufruf aktiv</brief>
<description>Status modaler Unterprogrammaufruf
FALSE = kein modaler Unterprogrammaufruf
TRUE  = modaler Unterprogrammaufruf aktiv
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_REPINF</name>
<brief>Repositionieren möglich</brief>
<description>Statusinformation für Repositionieren mit REPOS-Befehl
FALSE = Repositionieren mit REPOS aus folgenden Gründen nicht möglich
- Aufruf wird nicht in einem ASUP abgesetzt
- Aufruf wird von einem ASUP abgesetzt das im Reset-Zustand gestartet wurde
- Aufruf wird von einem ASUP abgesetzt das in der BA Jog gestartet wurde
TRUE = Repositionieren mit REPOS möglich
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_SIM</name>
<brief>Simulation NCK aktiv</brief>
<description>Die Variable $P_SIM liefert TRUE falls der eigens für Simulation Produkte generierte NCK genutzt wird. Dieser simNCK wird in den Produkten HMI Simulation, virtueller NCK (VNCK) und SinuTrain eingesetzt.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_DRYRUN</name>
<brief>Probelauf-Vorschub angewählt</brief>
<description>Liefert TRUE wenn Probelauf-Vorschub angewählt ist, sonst FALSE.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_OFFN</name>
<brief>Programmierter Konturoffset</brief>
<description>Programmierter Konturoffset
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$PI</name>
<brief>Kreiskonstante</brief>
<description>Die Variable $PI ermittelt die Kreiskonstante PI = 3.1415927.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_PROG_EVENT</name>
<brief>ereignisgesteuerter Programmaufruf aktiv</brief>
<description>Mit der Systemvariable $P_PROG_EVENT kann abgefragt werden, ob das Programm implizit durch ein mit $MC_PROG_EVENT_MASK oder $MN_SEARCH_RUN_MODE projektiertes Ereignis aktiviert wurde. $P_PROG_EVENT liefert einen Integerwert zwischen 0 und 6 mit folgender Bedeutung:
0:   explizite Aktivierung durch NC-Start oder ASUP-Start über VDI- bzw. ASUP-Schnittstelle
1:   implizite Aktivierung durch Ereignis "Teileprogramm-Start"
2:   implizite Aktivierung durch Ereignis "Teileprogramm-Ende"
3:   implizite Aktivierung durch Ereignis "Bedientafel-Reset"
4:   implizite Aktivierung durch Ereignis "Hochlauf"
5:   implizite Aktivierung nach Ausgabe des letzten Aktionssatzes nach Satzsuchlauf
6:   implizite Aktivierung von /_N_CST_DIR/_N_SAFE_SPF durch Ereignis "Hochlauf" (Poweron-Safety-Event)
</description>
</parameter>

<parameter type="STRING" dim="0">
<name>$P_PROGPATH</name>
<brief>Pfad des aktuellen Programms</brief>
<description>Liefert den Pfad, unter dem das Programm, das gerade bearbeitet wird, im Filesystem abgelegt ist.

Beispiel:
Es wird das Unterprogramm "/_N_WKS_DIR/_N_WELLE_DIR/_N_MYSUB_SPF" bearbeitet.
$P_PROGPATH liefert den String "/_N_WKS_DIR/_N_WELLE_DIR/".
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$P_PROG</name>
<brief>Programmname einer Programmebene</brief>
<description>Liefert den Programmnamen des Programms in der Programmebene n.

Beispiel:
$P_PROG[0]
Liefert den Programmnamen des Programms in der Programmebene 0 = Hauptprogrammname.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_STACK</name>
<brief>aktuelle Programmebene</brief>
<description>Liefert die Programmebene in der das aktuelle Teileprogramm bearbeitet wird.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_ISO_STACK</name>
<brief>akt. Programmebene im ISO-Mode</brief>
<description>Die Variable liefert die aktuelle Programmebene im ISO-Mode. Im Gegensatz zum SiemensMode führt im ISO-Mode nicht jeder UP- oder Makroaufruf zu einer Änderung der Programmebene.

UP- /Makroaufrufe und Auswirkung auf $P_ISO_STACK:
M98 Pxx ,UP Aufruf      $P_ISO_STACK bleibt gleich G65 Pxx ,satzw. Makro $P_ISO_STACK wird inkrementiert
G66 Pxx ,modaler Makro  $P_ISO_STACK wird inkrementiert
M-Makro Substitution    $P_ISO_STACK wird inkrementiert M-Up. Substitution $P_ISO_STACK bleibt gleich
T- Substitution         $P_ISO_STACK bleibt gleich
G-Substitution          $P_ISO_STACK wird inkrementiert
802S/C:  Wertebereich = [0,5]
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$P_PATH</name>
<brief>Pfad einer Programmebene</brief>
<description>Liefert den Pfad unter dem das Programm, das in der Programmebene n abgearbeitet wird, im Filesystem abgelegt ist.

Beispiele:
$P_PATH[0] liefert das Directory des Hauptprogramms, z.B. "/_N_WKS_DIR/_N_WELLE_WPD/".
$P_PATH[$P_STACK - 1] liefert den Pfad des aufrufenden Programms.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$P_ACTID</name>
<brief>Modale Synchronaktion ist programmiert</brief>
<description>Die Variable $P_ACTID[n] ermittelt für die ersten 16 modalen Synchronaktionen mit ID n, ob diese programmiert sind.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_STAT</name>
<brief>Kanalzustand</brief>
<description>Gültige Werte sind:
-1: ungültig
0: Kanal im Reset
1: Kanal unterbrochen
2: Kanal aktiv
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_PROG</name>
<brief>Programmzustand</brief>
<description>Gültige Werte sind:
-1: ungültig
0: Programm im Reset-Zustand
1: Programm gestoppt
2: Programm aktiv
3: Programm wartend
4: Programm unterbrochen
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_SYNA_MEM</name>
<brief>Freie Synchronaktionselemente</brief>
<description>Die Variable $AC_SYNA_MEM ermittelt die Anzahl der freien Synchronaktionselemente. Die maximale Element-Anzahl wird über $MC_MM_NUM_SYNC_ELEMENTS projektiert. Aus dem Teileprogramm wird der Wert ohne Vorlaufstopp gelesen.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_IPO_BUF</name>
<brief>Füllstand Ipo-Puffer</brief>
<description>Die Variable $AC_IPO_BUF ermittelt den aktuellen Füllstand des Ipo-Puffers. Aus dem Teileprogramm wird der Wert ohne Vorlaufstopp gelesen.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_BLOCKTYPE</name>
<brief>Satztyp</brief>
<description>Die Variable $AC_BLOCKTYPE ermittelt den Typ des aktuellen Hauptlaufsatzes.

Folgende Werte sind möglich:
0: Satz ist programmierter Satz (Hauptsatz).
1: Satz wurde vom System als Zwischensatz erzeugt.
2: Satz wurde durch Fasen/Runden generiert
3: Weiches An- und Abfahren (WAB)
4: Satz wurde durch Werkzeugkorrektur generiert
5: Satz wurde durch Überschleifen generiert
6: Satz wurde durch TLIFT generiert (tangentiale Nachführung)
7: Satz wurde durch Wegaufteilung generiert
8: Satz wurde durch Compile-Zyklen generiert
9: Satz wurde durch Umorientierungen bei bahnrelativer Orientierungsinterpolation (ORIPATH/ORIROTC) erzeugt.
10: Satz wurde durch die mit dem MD $MC_POLE_ORI_MODE aktivierbare Polbehandlung bei Orientierungstransformationen erzeugt
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_BLOCKTYPEINFO</name>
<brief>Satztyp Info</brief>
<description>Mit der Systemvariable $AC_BLOCKTYPEINFO können nähere Informationen zur Variablen $AC_BLOCKTYPE abgefragt werden.
Je nach Wert der Systemvariablen $AC_BLOCKTYPE sind dann verschiedene Werte möglich:
1. Allgemeiner intern generierter Satz: $AC_BLOCKTYPE = 1
   $AC_BLOCKTYPEINFO = 1000 und enthält keine weitere informationen.

2. Fasen/Runden: $AC_BLOCKTYPE = 2
2001: Gerade
2002: Kreis

3. WAB: $AC_BLOCKTYPE = 3
3001: Anfahren mit Gerade
3002: Anfahren mit Viertelkreis
3003: Anfahren mit Halbkreis

4. Werkzeugkorrektur: $AC_BLOCKTYPE = 4
4001: Anfahrsatz nach STOPRE
4002: Verbindungssätze bei nicht gefundenem Schnittpuntk
4003: Punktförmiger Kreis an Innenecken (nur bei TRACYL)
4004: Umfahrungskreis (bzw. Kegelschnitt) an Außenecken
4005: Anfahrsätze bei Korrekturunterdrückung
4006: Anfahrsätze bei erneuter WRK-Aktivierung
4007: Satzaufspaltung wegen zu hoher Krümmung
4008: Ausgleichssätze beim 3D-Stirnfräsen (Werkzeugvektor || Flächenvektor)

5. Überschleifen: $AC_BLOCKTYPE = 5
5001: Überschleifkontur durch G641
5002: Überschleifkontur durch G642
5003: Überschleifkontur durch G643
5004: Überschleifkontur durch G644

6. TLIFT: $AC_BLOCKTYPE = 6
6001: TLIFT Satz mit linearer Bewegung der Tangentialachse und ohne Abhebebewegung.
6002: TLIFT Satz mit nichtlinearer der Tangentialachse (Polynom) und ohne Abhebebewegung.
6003: TLIFT Satz mit Abhebebewegung Tangentialachsbewegung und Abhebebewegung starten gleichzeitig.
6004: TLIFT Satz mit Abhebebewegung, Tangentialachse startet erst, wenn bestimmte Abhebeposition erreicht wird.

7. Wegaufteilung: $AC_BLOCKTYPE = 7
7001: programmierte Wegaufteilung ohne dass Stanz/Nibbling aktiv ist.
7002: programmierte Wegaufteilung mit aktiven Stanz/Nibbling.
7003: automatisch intern generierte Wegaufteilung.

8. Compile-Zyklen: $AC_BLOCKTYPE = 8
In diesem Fall enthält die Systemvariable $AC_BLOCKTYPEINFO die ID der Compile-Zyklen Applikation, die den Satz erzeugt hat.

9. Bahnrelative Orientierungsinterpolation (ORIPATH/ORIROTC)
9000: Interpolation der Werkzeugorientierung bei ORIPATH
9001: Interpolation der Drehung des Werkzeugs bei ORIROTC

10: Polbehandlung bei Orientierungstransformationen
10000: Vorausschauende Positionierung der Polachse in einem separaten Satz
10001: Eingefügter Satz zum Durchfahren des Polkegels bei Orientierungstransformationen
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_SPLITBLOCK</name>
<brief>Intern generierter Programmsatz</brief>
<description>Mit der Systemvariablen $AC_SPLITBLOCK können alle Sätze detektiert werden, die intern generiert wurden und programmierte Sätze, die dadurch verkürzt wurden.

Folgenden Werte sind dabei möglich:
=0: es ist ein unveränderter programmierter Satz (ein durch den Kompressor generierte Satz wird hier als programmierter Satz angesehen).
!0: Satz wurde verkürzt oder ist ein intern generierter Satz, es sind dabei folgende Werte möglich (Variable ist bitkodiert):
=1: es ist ein intern generierter Satz oder ein verkürzter Originalsatz
=3: es ist der letzte Satz in eine Kette von intern generierten Sätzen
oder verkürzten Originalsätzen
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_TANEB</name>
<brief>Tangentenwinkel am Satzendpunkt</brief>
<description>Die Variable $AC_TANEB ermittelt den Winkel zwischen der Bahn-Tangente im Endpunkt des aktuellen Satzes und der Bahn-Tangente im Startpunkt des Folgesatzes. Diese Variable sollte nur auf programmierte Hauptsätze angewendet werden. Mit $AC_BLOCKTYPE kann ermittelt werden, ob der aktuelle Satz ein Hauptsatz ist.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_SYNC_ACT_LOAD</name>
<brief>aktuelle Laufzeit für Synchronaktionen</brief>
<description>Die Variable $AC_SYNC_ACT_LOAD liefert die aktuelle Laufzeit für Synchronaktionen des letzten IPO-Taktes im Kanal.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_SYNC_MAX_LOAD</name>
<brief>Längste Laufzeit für Synchronaktionen</brief>
<description>Die Variable $AC_SYNC_MAX_LOAD liefert die längste Laufzeit von Synchronaktionen eines IPO-Taktes im Kanal.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_SYNC_AVERAGE_LOAD</name>
<brief>Durchschnittliche Laufzeit für Synacts</brief>
<description>Die Variable $AC_SYNC_AVERAGE_LOAD liefert die durchschnittliche Laufzeit pro IPO-Takt für Synchronaktionen im   Kanal.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_IW_STAT</name>
<brief>Stellungsinformation bei PTP</brief>
<description>Die Variable $AC_IW_STAT beschreibt die Stellungsinformation der Gelenke (transformationsspezifisch) beim kartesischen PTP Fahren.
Die Variable ist nur relevant bei Transformationen, die PTP unterstützen.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_IW_TU</name>
<brief>Stellungsinformation der Achsen bei PTP</brief>
<description>Die Variable $AC_IW_TU beschreibt die Stellungsinformation der Achsen ( MCS ) beim kartesischen PTP Fahren.
Die Variable ist nur relevant bei Transformationen, die PTP unterstützen.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TRANS_SYS</name>
<brief>Bezugssystem für kart. Handverf. (Transl.)</brief>
<description>Bezugssystem für Translation beim Kartesischen Handverfahren
0: achsspez. Handverf. aktiv
1: kart. Handverf. im BCS
2: kart. handverf. im WCS
3: kart. Handverf. im TCS
Nur sinnvoll in Verbindung mit Transformationen, die das kart. Handverfahren unterstützen.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_JOG_COORD</name>
<brief>Koordinatensystems für das Handverfahren</brief>
<description>Die Variable $AC_JOG_COORD dient zur Einstellung des Koordinatensystems für das Handverfahren.
Folgende Werte sind möglich:
0: Handverfahren im WKS
1: Handverfahren im ENS
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_ROT_SYS</name>
<brief>Bezugssystem für kart. Handverf. (Ori)</brief>
<description>Bezugssystem für Orientierung beim Kartesischen Handverfahren
0: achsspezifisches Handverfahren aktiv
1: kart. Handverf. im BCS
2: kart. handverf. im PCS
3: kart. Handverf. im TCS
Nur sinnvoll in Verbindung mit Transformationen, die das kart. Handverfahren unterstützen.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEA</name>
<brief>Messtaster hat geschaltet</brief>
<description>Sobald alle in einem Satz programmierten Triggerereignisse erfüllt sind, werden beide Werte ($AC_MEA[1] und $AC_MEA[2]) gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TRAFO</name>
<brief>aktive Transformation</brief>
<description>Codenummer der aktiven Transformation entsprechend Maschinendatum $MC_TRAFO_TYPE_n

Beachte Sonderbedeutung bei parametrierter persistenter Transformation (Bit 1 der $MC_TRAFO_MODE_MASK auf 1 gesetzt):
Bei TRACON werden die Parameter der ersten verketteten Transformation zurückgegeben. Ist nur die persistente Transformation aktiv,
so wird 0 zurückgegeben.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_TRAFO</name>
<brief>programmierte Transformation</brief>
<description>Codenummer der programmierten Transformation entsprechend Maschinendatum $MC_TRAFO_TYPE_n

Beachte Sonderbedeutung bei parametrierter persistenter Transformation (Bit 1 der $MC_TRAFO_MODE_MASK auf 1 gesetzt):
Bei TRACON wird die erste verkettete Transformation zurückgegeben. Ist nur die persistente Transformation aktiv, so wird 0 zurückgegeben.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TRAFO_PAR</name>
<brief>Transformationsanwahlparameter</brief>
<description>$AC_TRAFO_PAR[n]
Anwahlparameter der aktiven Transformation.
Beachte Sonderbedeutung bei parametrierter persistenter Transformation
(Bit 1 der $MC_TRAFO_MODE_MASK auf 1 gesetzt):
Bei TRACON werden die Parameter der ersten verkettete Transformation zurückgegeben.
Ist nur die persistente Transformation aktiv, so wird 0 zurückgegeben.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_TRAFO_PAR</name>
<brief>progr. Transformationsanwahlparameter</brief>
<description>$P_TRAFO_PAR[n]
Anwahlparameter der programmierten Transformation.
  Beachte Sonderbedeutung bei parametrierter persistenter Transformation
    (Bit 1 der $MC_TRAFO_MODE_MASK auf 1 gesetzt):
    Bei TRACON werden die Parameter der ersten verkettete Transformation zurückgegeben.
Ist nur die persistente Transformation aktiv, so wird 0 zurückgegeben.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TRAFO_PARSET</name>
<brief>Transformationsdatensatznummer</brief>
<description>Die Variable enthält den Wert 0, wenn keine kinematische Transformation aktiv ist.
Ist eine konventionell (d.h. nicht mit kinematischen Ketten) definierte Transformation aktiv, enthält die Variable die Nummer des aktuellen Transformationsdatensatzes.
  Beachte Sonderbedeutung bei parametrierter persistenter Transformation
    (Bit 1 der $MC_TRAFO_MODE_MASK auf 1 gesetzt):
    Bei TRACON wird die Nummer des Datensatzes der ersten verketteten Transformation zurückgegeben.
    Ist nur die persistente Transformation aktiv, so wird 0 zurückgegeben.
Ist eine mit kinematischen Ketten definierte Transformation aktiv, enthält die Variable die Nummer des $NT-Datensatzes mit einem Offset von 1000, d.h. die erste Transformation liefert den Wert 1001.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_TRAFO_PARSET</name>
<brief>Transformationsdatensatznummer</brief>
<description>Die Variable enthält den Wert 0, wenn keine kinematische Transformation aktiv ist.
Ist eine konventionell (d.h. nicht mit kinematischen Ketten) definierte Transformation aktiv, enthält die Variable die Nummer des aktuellen Transformationsdatensatzes.
  Beachte Sonderbedeutung bei parametrierter persistenter Transformation
    (Bit 1 der $MC_TRAFO_MODE_MASK auf 1 gesetzt):
    Bei TRACON werden die Nummer des Datensatzes der ersten verkettete Transformation zurückgegeben.
    Ist nur die persistente Transformation aktiv, so wird 0 zurückgegeben.
    Ist nur die persistente Transformation aktiv, so wird 0 zurückgegeben.
Ist eine mit kinematischen Ketten definierte Transformation aktiv, enthält die Variable die Nummer des $NT-Datensatzes mit einem Offset von 1000, d.h. die erste Transformation liefert den Wert 1001.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_LIFTFAST</name>
<brief>Zustand des Schnellabhebens</brief>
<description>Information über die Ausführung von Schnellabheben.
0: Grundzustand.
1: Es wurde Schnellabheben ausgeführt.
Die Variable wird zu Beginn des Schnellabhebevorganges von der NC intern auf den Wert "1" gesetzt.
Die Variable muss vom auswertendem Programm (soweit vorhanden) wieder in die Grundstellung ($AC_LIFTFAST=0) gesetzt werden, um ein nachfolgendes Schnellabheben wieder erkennen zu können.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_LIFTFAST</name>
<brief>Status Schnellabheben</brief>
<description>Information über die Ausführung von Schnellabheben.
0: Grundzustand.
1: Es wurde Schnellabheben ausgeführt.
Die Variable wird zu Beginn des Schnellabhebevorganges von der NC intern auf den Wert "1" gesetzt.
Die Variable muss vom auswertendem Programm (soweit vorhanden) wieder in die Grundstellung gesetzt werden, um ein nachfolgendes Schnellabheben wieder erkennen zu können. Das Rücksetzen erfolgt durch das Schreiben von $AC_LIFTFAST!
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_ASUP</name>
<brief>ASUP-Aktivierungsgrund</brief>
<description>Codenummer für den Grund der Aktivierung eines ASUPs. Die Gründe sind bitcodiert
und haben folgende Bedeutung:
BIT0: Aktivierung wegen: Anwender-Interrupt "ASUP mit Blsync"
Aktivierung durch: Vdi-Signal, Digitale-Analoge Schnittstelle
Fortsetzung durch: freiwählbar Reorg oder Ret
BIT1: Aktivierung wegen: Anwender-Interrupt "ASUP"
Für die Programm-Fortsetzung mit Repos wird die Position, nach dem gestoppt wurde, abgespeichert.
Aktivierung durch: Vdi-Signal, Digitale-Analoge Schnittstelle
Fortsetzung durch: freiwählbar
BIT2: Aktivierung wegen: Anwender-Interrupt "ASUP aus Kanalzustand Ready"
Aktivierung durch : Vdi-Signal,Digitale-Analoge Schnittstelle
Fortsetzung durch: freiwählbar
BIT3: Aktivierung wegen: Anwender-Interrupt "ASUP in einer Handbetriebsart
und Kanalzustand nicht READY"
Aktivierung durch: Vdi-Signal,Digitale-Analoge Schnittstelle
Fortsetzung durch: freiwählbar
BIT4: Aktivierung wegen: Aktivierung wegen: Anwender-Interrupt "ASUP".
Für die Programm-Fortsetzung mit Repos wird die aktuelle Position beim Auftreten des Interrupts abgespeichert.
Aktivierung durch: Vdi-Signal,Digitale-Analoge Schnittstelle
Fortsetzung durch: freiwählbar
BIT5: Aktivierung wegen: Abbrechen der Unterprogrammwiederholung
Aktivierung durch: Vdi-Signal
Fortsetzung durch: bei Einsatz des SystemASUP REPOS
BIT6: Aktivierung wegen: Aktivierung Decodier-Einzelsatz
Aktivierung durch: Vdi-Signal (+BTSS)
Fortsetzung durch: bei Einsatz des SystemASUP REPOS
BIT7: Aktivierung wegen: Aktivierung Restweg löschen
Aktivierung durch: Vdi-Signal
Fortsetzung durch: bei Einsatz des SystemASUP Ret
BIT8: Aktivierung wegen: Aktivierung Achssynchronisation
Aktivierung durch: Vdi-Signal
Fortsetzung durch: bei Einsatz des SystemASUP REPOS
BIT9: Aktivierung wegen: Betriebsartenwechsel
Aktivierung durch: Vdi-Signal
Fortsetzung durch: bei Einsatz des SystemASUP REPOS oder RET (siehe MD.)
BIT10: Aktivierung wegen: Programmfortsetzung unter TeachIn bzw. nach TeachIn-Deaktivierung
Aktivierung durch: Vdi-Signal
Fortsetzung durch: bei Einsatz des SystemASUP Ret
BIT11: Aktivierung wegen: Overstore Anwahl
Aktivierung durch: Pi-Anwahl
Fortsetzung durch: bei Einsatz des SystemASUP REPOS
BIT12: Aktivierung wegen: Alarm mit Reaktion Korrektursatz mit Repos ( COMPBLOCKWITHREORG)
Aktivierung durch: Intern
Fortsetzung durch: bei Einsatz des SystemASUP REPOS
BIT13: Aktivierung wegen: Rückzugbewegung bei G33 und Stop
Aktivierung durch: Intern
Fortsetzung durch: bei Einsatz des SystemASUP Ret
BIT14: Aktivierung wegen: Aktivierung von ProbelaufVorschub
Aktivierung durch: Vdi
Fortsetzung durch: bei Einsatz des SystemASUP REPOS
BIT15: Aktivierung wegen: Deaktivierung von ProbelaufVorschub
Aktivierung durch: Vdi
Fortsetzung durch: bei Einsatz des SystemASUP REPOS
BIT16: Aktivierung wegen: Aktivierung von Satzunterdrückung
Aktivierung durch: Vdi
Fortsetzung durch: bei Einsatz des SystemASUP REPOS
BIT17: Aktivierung wegen: Deaktivierung von Satzunterdrückung
Aktivierung durch: Vdi
Fortsetzung durch: bei Einsatz des SystemASUP REPOS
BIT18: Aktivierung wegen: Maschinedaten-Wirksam setzen
Aktivierung durch: Pi
Fortsetzung durch: bei Einsatz des SystemASUP REPOS
BIT19: Aktivierung wegen: Werkzeugkorrektur wirksam setzen
Aktivierung durch: Pi "_N_SETUDT"
Fortsetzung durch: bei Einsatz des SystemASUP REPOS
BIT20: Aktivierung wegen: SystemASUP, nachdem Suchlauf-Typ SERUPRO das Suchziel erreicht hat.
Aktivierung durch: Pi "_N_FINDBL" Parameter == 5
Fortsetzung durch: bei Einsatz des SystemASUP REPOS
BIT21: Aktivierung wegen: Externe Nullpunktverschiebung angewählt
Aktivierung durch: Vdi-Signal
Fortsetzung durch: bei Einsatz des SystemASUP REPOS
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_ISTEST</name>
<brief>Programmtest aktiv</brief>
<description>Liefert TRUE wenn Programmtest aktiv ist.
</description>
</parameter>

<parameter type="STRING" dim="0">
<name>$P_MMCA</name>
<brief>Auftragsquittung für MMC-Befehl</brief>
<description>Auftragsquittung für MMC-Befehl
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$A_PROTO</name>
<brief>Protokollfunktion 1. User aktivieren</brief>
<description>Protokollfunktion für den ersten User aktivieren / deaktivieren. Entspricht $A_PROTOC[0].
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_PROTOC</name>
<brief>Protokollfunktion für User aktivieren</brief>
<description>Protokollfunktion für einen User aktivieren / deaktivieren. Entspricht der BTSS-Variablen protocUserActive.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_PROT_LOCK</name>
<brief>Protokollfunktion für einen User sperren / freigeben</brief>
<description>Protokollfunktion für einen User vorübergehend sperren / freigeben
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO1</name>
<brief>1. FIFO-Stack</brief>
<description>Die Variable $AC_FIFO1[n] ist ein Stack mit einer First In - First Out Charakteristik. Dieser Stapelspeicher kann für zyklische Messvorgänge eingesetzt werden. Über $MC_NUM_AC_FIFO legt man die Anzahl der FIFO-Variablen $AC_FIFO1 - $AC_FIFO10 fest. Die Elemente des Stapelspeichers werden in R-Parametern gespeichert. Die Länge aller FIFO-Variablen wird mit $MC_LEN_AC_FIFO projektiert. Über $MC_START_AC_FIFO gibt man die Nummer des R-Parameters an, ab dem die FIFO-Elemente gespeichert werden. R-Parameter die FIFO-Bereiche zugeordnet sind, sollten nicht anderweitig beschrieben werden.

Die Anzahl der R-Parameter muss über das Maschinendatum $MC_MM_NUM_R_PARAM so eingestellt werden, dass alle FIFO-Variable untergebracht werden können:
$MC_MM_NUM_R_PARAM = $MC_MM_START_FIFO + $MC_NUM_AC_FIFO * ($MC_LEN_AC_FIFO + 6)
Die FIFO-Variable ist eine Feldvariable.

Die Indizes 0 - 5 haben Sonderbedeutungen:
n=0: Beim Schreiben mit Index 0 wird ein neuer Wert in den FIFO abgelegt.
     Beim Lesen mit Index 0 wird das älteste Element gelesen und aus dem FIFO entfernt.
n=1: Zugriff auf das zuerst eingelesene Element
n=2: Zugriff auf das zuletzt eingelesene Element
n=3: Summe aller FIFO-Elemente, wenn Bit0 in $MC_MM_MODE_FIFO gesetzt ist.
n=4: Anzahl der im FIFO verfügbaren Elemente
n=5: aktueller Schreibindex relativ zum FIFO-Beginn
n=6: ältestes Element
n=7: zweitälteste etc.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO2</name>
<brief>2. FIFO-Stack</brief>
<description>Die Variable $AC_FIFO2[n] ist ein Stack mit einer First In - First Out Charakteristik. Dieser Stapelspeicher kann für zyklische Messvorgänge eingesetzt werden. Über $MC_NUM_AC_FIFO legt man die Anzahl der FIFO-Variablen $AC_FIFO1 - $AC_FIFO10 fest. Die Elemente des Stapelspeichers werden in R-Parametern gespeichert. Die Länge aller FIFO-Variablen wird mit $MC_LEN_AC_FIFO projektiert. Über $MC_START_AC_FIFO gibt man die Nummer des R-Parameters an, ab dem die FIFO-Elemente gespeichert werden. R-Parameter die FIFO-Bereiche zugeordnet sind, sollten nicht anderweitig beschrieben werden.

Die Anzahl der R-Parameter muss über das Maschinendatum $MC_MM_NUM_R_PARAM so eingestellt werden, dass alle FIFO-Variable untergebracht werden können:
$MC_MM_NUM_R_PARAM = $MC_MM_START_FIFO + $MC_NUM_AC_FIFO * ($MC_LEN_AC_FIFO + 6)

Die FIFO-Variable ist eine Feldvariable.
Die Indizes 0 - 5 haben Sonderbedeutungen:
n=0: Beim Schreiben mit Index 0 wird ein neuer Wert in den FIFO abgelegt.
     Beim Lesen mit Index 0 wird das älteste Element gelesen und aus dem FIFO entfernt.
n=1: Zugriff auf das zuerst eingelesene Element
n=2: Zugriff auf das zuletzt eingelesene Element
n=3: Summe aller FIFO-Elemente, wenn Bit0 in $MC_MM_MODE_FIFO gesetzt ist.
n=4: Anzahl der im FIFO verfügbaren Elemente
n=5: aktueller Schreibindex relativ zum FIFO-Beginn
n=6: ältestes Element
n=7: zweitälteste etc.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO3</name>
<brief>3. FIFO-Stack</brief>
<description>Die Variable $AC_FIFO3[n] ist ein Stack mit einer First In - First Out Charakteristik. Dieser Stapelspeicher kann für zyklische Messvorgänge eingesetzt werden. Über $MC_NUM_AC_FIFO legt man die Anzahl der FIFO-Variablen $AC_FIFO1 - $AC_FIFO10 fest. Die Elemente des Stapelspeichers werden in R-Parametern gespeichert. Die Länge aller FIFO-Variablen wird mit $MC_LEN_AC_FIFO projektiert. Über $MC_START_AC_FIFO gibt man die Nummer des R-Parameters an, ab dem die FIFO-Elemente gespeichert werden. R-Parameter die FIFO-Bereiche zugeordnet sind, sollten nicht anderweitig beschrieben werden.

Die Anzahl der R-Parameter muss über das Maschinendatum $MC_MM_NUM_R_PARAM so eingestellt werden, dass alle FIFO-Variable untergebracht werden können:
$MC_MM_NUM_R_PARAM = $MC_MM_START_FIFO + $MC_NUM_AC_FIFO * ($MC_LEN_AC_FIFO + 6)

Die FIFO-Variable ist eine Feldvariable.
Die Indizes 0 - 5 haben Sonderbedeutungen:
n=0: Beim Schreiben mit Index 0 wird ein neuer Wert in den FIFO abgelegt.
     Beim Lesen mit Index 0 wird das älteste Element gelesen und aus dem FIFO entfernt.
n=1: Zugriff auf das zuerst eingelesene Element
n=2: Zugriff auf das zuletzt eingelesene Element
n=3: Summe aller FIFO-Elemente, wenn Bit0 in $MC_MM_MODE_FIFO gesetzt ist.
n=4: Anzahl der im FIFO verfügbaren Elemente
n=5: aktueller Schreibindex relativ zum FIFO-Beginn
n=6: ältestes Element
n=7: zweitälteste etc.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO4</name>
<brief>4. FIFO-Stack</brief>
<description>Die Variable $AC_FIFO4[n] ist ein Stack mit einer First In - First Out Charakteristik. Dieser Stapelspeicher kann für zyklische Messvorgänge eingesetzt werden. Über $MC_NUM_AC_FIFO legt man die Anzahl der FIFO-Variablen $AC_FIFO1 - $AC_FIFO10 fest. Die Elemente des Stapelspeichers werden in R-Parametern gespeichert. Die Länge aller FIFO-Variablen wird mit $MC_LEN_AC_FIFO projektiert. Über $MC_START_AC_FIFO gibt man die Nummer des R-Parameters an, ab dem die FIFO-Elemente gespeichert werden. R-Parameter die FIFO-Bereiche zugeordnet sind, sollten nicht anderweitig beschrieben werden.

Die Anzahl der R-Parameter muss über das Maschinendatum $MC_MM_NUM_R_PARAM so eingestellt werden, dass alle FIFO-Variable untergebracht werden können:
$MC_MM_NUM_R_PARAM = $MC_MM_START_FIFO + $MC_NUM_AC_FIFO * ($MC_LEN_AC_FIFO + 6)

Die FIFO-Variable ist eine Feldvariable.
Die Indizes 0 - 5 haben Sonderbedeutungen:
n=0: Beim Schreiben mit Index 0 wird ein neuer Wert in den FIFO abgelegt.
     Beim Lesen mit Index 0 wird das älteste Element gelesen und aus dem FIFO entfernt.
n=1: Zugriff auf das zuerst eingelesene Element
n=2: Zugriff auf das zuletzt eingelesene Element
n=3: Summe aller FIFO-Elemente, wenn Bit0 in $MC_MM_MODE_FIFO gesetzt ist.
n=4: Anzahl der im FIFO verfügbaren Elemente
n=5: aktueller Schreibindex relativ zum FIFO-Beginn
n=6: ältestes Element
n=7: zweitälteste etc.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO5</name>
<brief>5. FIFO-Stack</brief>
<description>Die Variable $AC_FIFO5[n] ist ein Stack mit einer First In - First Out Charakteristik. Dieser Stapelspeicher kann für zyklische Messvorgänge eingesetzt werden. Über $MC_NUM_AC_FIFO legt man die Anzahl der FIFO-Variablen $AC_FIFO1 - $AC_FIFO10 fest. Die Elemente des Stapelspeichers werden in R-Parametern gespeichert. Die Länge aller FIFO-Variablen wird mit $MC_LEN_AC_FIFO projektiert. Über $MC_START_AC_FIFO gibt man die Nummer des R-Parameters an, ab dem die FIFO-Elemente gespeichert werden. R-Parameter die FIFO-Bereiche zugeordnet sind, sollten nicht anderweitig beschrieben werden.

Die Anzahl der R-Parameter muss über das Maschinendatum $MC_MM_NUM_R_PARAM so eingestellt werden, dass alle FIFO-Variable untergebracht werden können:
$MC_MM_NUM_R_PARAM = $MC_MM_START_FIFO + $MC_NUM_AC_FIFO * ($MC_LEN_AC_FIFO + 6)

Die FIFO-Variable ist eine Feldvariable.
Die Indizes 0 - 5 haben Sonderbedeutungen:
n=0: Beim Schreiben mit Index 0 wird ein neuer Wert in den FIFO abgelegt.
     Beim Lesen mit Index 0 wird das älteste Element gelesen und aus dem FIFO entfernt.
n=1: Zugriff auf das zuerst eingelesene Element
n=2: Zugriff auf das zuletzt eingelesene Element
n=3: Summe aller FIFO-Elemente, wenn Bit0 in $MC_MM_MODE_FIFO gesetzt ist.
n=4: Anzahl der im FIFO verfügbaren Elemente
n=5: aktueller Schreibindex relativ zum FIFO-Beginn
n=6: ältestes Element
n=7: zweitälteste etc.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO6</name>
<brief>6. FIFO-Stack</brief>
<description>Die Variable $AC_FIFO6[n] ist ein Stack mit einer First In - First Out Charakteristik. Dieser Stapelspeicher kann für zyklische Messvorgänge eingesetzt werden. Über $MC_NUM_AC_FIFO legt man die Anzahl der FIFO-Variablen $AC_FIFO1 - $AC_FIFO10 fest. Die Elemente des Stapelspeichers werden in R-Parametern gespeichert. Die Länge aller FIFO-Variablen wird mit $MC_LEN_AC_FIFO projektiert. Über $MC_START_AC_FIFO gibt man die Nummer des R-Parameters an, ab dem die FIFO-Elemente gespeichert werden. R-Parameter die FIFO-Bereiche zugeordnet sind, sollten nicht anderweitig beschrieben werden.

Die Anzahl der R-Parameter muss über das Maschinendatum $MC_MM_NUM_R_PARAM so eingestellt werden, dass alle FIFO-Variable untergebracht werden können:
$MC_MM_NUM_R_PARAM = $MC_MM_START_FIFO + $MC_NUM_AC_FIFO * ($MC_LEN_AC_FIFO + 6)

Die FIFO-Variable ist eine Feldvariable.
Die Indizes 0 - 5 haben Sonderbedeutungen:
n=0: Beim Schreiben mit Index 0 wird ein neuer Wert in den FIFO abgelegt.
     Beim Lesen mit Index 0 wird das älteste Element gelesen und aus dem FIFO entfernt.
n=1: Zugriff auf das zuerst eingelesene Element
n=2: Zugriff auf das zuletzt eingelesene Element
n=3: Summe aller FIFO-Elemente, wenn Bit0 in $MC_MM_MODE_FIFO gesetzt ist.
n=4: Anzahl der im FIFO verfügbaren Elemente
n=5: aktueller Schreibindex relativ zum FIFO-Beginn
n=6: ältestes Element
n=7: zweitälteste etc.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO7</name>
<brief>7. FIFO-Stack</brief>
<description>Die Variable $AC_FIFO7[n] ist ein Stack mit einer First In - First Out Charakteristik. Dieser Stapelspeicher kann für zyklische Messvorgänge eingesetzt werden. Über $MC_NUM_AC_FIFO legt man die Anzahl der FIFO-Variablen $AC_FIFO1 - $AC_FIFO10 fest. Die Elemente des Stapelspeichers werden in R-Parametern gespeichert. Die Länge aller FIFO-Variablen wird mit $MC_LEN_AC_FIFO projektiert. Über $MC_START_AC_FIFO gibt man die Nummer des R-Parameters an, ab dem die FIFO-Elemente gespeichert werden. R-Parameter die FIFO-Bereiche zugeordnet sind, sollten nicht anderweitig beschrieben werden.

Die Anzahl der R-Parameter muss über das Maschinendatum $MC_MM_NUM_R_PARAM so eingestellt werden, dass alle FIFO-Variable untergebracht werden können:
$MC_MM_NUM_R_PARAM = $MC_MM_START_FIFO + $MC_NUM_AC_FIFO * ($MC_LEN_AC_FIFO + 6)

Die FIFO-Variable ist eine Feldvariable.
Die Indizes 0 - 5 haben Sonderbedeutungen:
n=0: Beim Schreiben mit Index 0 wird ein neuer Wert in den FIFO abgelegt.
     Beim Lesen mit Index 0 wird das älteste Element gelesen und aus dem FIFO entfernt.
n=1: Zugriff auf das zuerst eingelesene Element
n=2: Zugriff auf das zuletzt eingelesene Element
n=3: Summe aller FIFO-Elemente, wenn Bit0 in $MC_MM_MODE_FIFO gesetzt ist.
n=4: Anzahl der im FIFO verfügbaren Elemente
n=5: aktueller Schreibindex relativ zum FIFO-Beginn
n=6: ältestes Element
n=7: zweitälteste etc.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO8</name>
<brief>8. FIFO-Stack</brief>
<description>Die Variable $AC_FIFO8[n] ist ein Stack mit einer First In - First Out Charakteristik. Dieser Stapelspeicher kann für zyklische Messvorgänge eingesetzt werden. Über $MC_NUM_AC_FIFO legt man die Anzahl der FIFO-Variablen $AC_FIFO1 - $AC_FIFO10 fest. Die Elemente des Stapelspeichers werden in R-Parametern gespeichert. Die Länge aller FIFO-Variablen wird mit $MC_LEN_AC_FIFO projektiert. Über $MC_START_AC_FIFO gibt man die Nummer des R-Parameters an, ab dem die FIFO-Elemente gespeichert werden. R-Parameter die FIFO-Bereiche zugeordnet sind, sollten nicht anderweitig beschrieben werden.

Die Anzahl der R-Parameter muss über das Maschinendatum $MC_MM_NUM_R_PARAM so eingestellt werden, dass alle FIFO-Variable untergebracht werden können:
$MC_MM_NUM_R_PARAM = $MC_MM_START_FIFO + $MC_NUM_AC_FIFO * ($MC_LEN_AC_FIFO + 6)

Die FIFO-Variable ist eine Feldvariable.
Die Indizes 0 - 5 haben Sonderbedeutungen:
n=0: Beim Schreiben mit Index 0 wird ein neuer Wert in den FIFO abgelegt.
     Beim Lesen mit Index 0 wird das älteste Element gelesen und aus dem FIFO entfernt.
n=1: Zugriff auf das zuerst eingelesene Element
n=2: Zugriff auf das zuletzt eingelesene Element
n=3: Summe aller FIFO-Elemente, wenn Bit0 in $MC_MM_MODE_FIFO gesetzt ist.
n=4: Anzahl der im FIFO verfügbaren Elemente
n=5: aktueller Schreibindex relativ zum FIFO-Beginn
n=6: ältestes Element
n=7: zweitälteste etc.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO9</name>
<brief>9. FIFO-Stack</brief>
<description>Die Variable $AC_FIFO9[n] ist ein Stack mit einer First In - First Out Charakteristik. Dieser Stapelspeicher kann für zyklische Messvorgänge eingesetzt werden. Über $MC_NUM_AC_FIFO legt man die Anzahl der FIFO-Variablen $AC_FIFO1 - $AC_FIFO10 fest. Die Elemente des Stapelspeichers werden in R-Parametern gespeichert. Die Länge aller FIFO-Variablen wird mit $MC_LEN_AC_FIFO projektiert. Über $MC_START_AC_FIFO gibt man die Nummer des R-Parameters an, ab dem die FIFO-Elemente gespeichert werden. R-Parameter die FIFO-Bereiche zugeordnet sind, sollten nicht anderweitig beschrieben werden.

Die Anzahl der R-Parameter muss über das Maschinendatum $MC_MM_NUM_R_PARAM so eingestellt werden, dass alle FIFO-Variable untergebracht werden können:
$MC_MM_NUM_R_PARAM = $MC_MM_START_FIFO + $MC_NUM_AC_FIFO * ($MC_LEN_AC_FIFO + 6)

Die FIFO-Variable ist eine Feldvariable.
Die Indizes 0 - 5 haben Sonderbedeutungen:
n=0: Beim Schreiben mit Index 0 wird ein neuer Wert in den FIFO abgelegt.
     Beim Lesen mit Index 0 wird das älteste Element gelesen und aus dem FIFO entfernt.
n=1: Zugriff auf das zuerst eingelesene Element
n=2: Zugriff auf das zuletzt eingelesene Element
n=3: Summe aller FIFO-Elemente, wenn Bit0 in $MC_MM_MODE_FIFO gesetzt ist.
n=4: Anzahl der im FIFO verfügbaren Elemente
n=5: aktueller Schreibindex relativ zum FIFO-Beginn
n=6: ältestes Element
n=7: zweitälteste etc.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO10</name>
<brief>10. FIFO-Stack</brief>
<description>Die Variable $AC_FIFO10[n] ist ein Stack mit einer First In - First Out Charakteristik. Dieser Stapelspeicher kann für zyklische Messvorgänge eingesetzt werden. Über $MC_NUM_AC_FIFO legt man die Anzahl der FIFO-Variablen $AC_FIFO1 - $AC_FIFO10 fest. Die Elemente des Stapelspeichers werden in R-Parametern gespeichert. Die Länge aller FIFO-Variablen wird mit $MC_LEN_AC_FIFO projektiert. Über $MC_START_AC_FIFO gibt man die Nummer des R-Parameters an, ab dem die FIFO-Elemente gespeichert werden. R-Parameter die FIFO-Bereiche zugeordnet sind, sollten nicht anderweitig beschrieben werden.

Die Anzahl der R-Parameter muss über das Maschinendatum $MC_MM_NUM_R_PARAM so eingestellt werden, dass alle FIFO-Variable untergebracht werden können:
$MC_MM_NUM_R_PARAM = $MC_MM_START_FIFO + $MC_NUM_AC_FIFO * ($MC_LEN_AC_FIFO + 6)

Die FIFO-Variable ist eine Feldvariable.
Die Indizes 0 - 5 haben Sonderbedeutungen:
n=0: Beim Schreiben mit Index 0 wird ein neuer Wert in den FIFO abgelegt.
     Beim Lesen mit Index 0 wird das älteste Element gelesen und aus dem FIFO entfernt.
n=1: Zugriff auf das zuerst eingelesene Element
n=2: Zugriff auf das zuletzt eingelesene Element
n=3: Summe aller FIFO-Elemente, wenn Bit0 in $MC_MM_MODE_FIFO gesetzt ist.
n=4: Anzahl der im FIFO verfügbaren Elemente
n=5: aktueller Schreibindex relativ zum FIFO-Beginn
n=6: ältestes Element
n=7: zweitälteste etc.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_IN</name>
<brief>Digitaler Eingang</brief>
<description>Die Variable $A_IN[n] dient zur Abfrage von digitalen Eingängen.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_OUT</name>
<brief>Digitaler Ausgang</brief>
<description>Die Variable $A_OUT[n] dient dem Zugriff auf die digitalen Ausgänge.
Ist die Ausgabe durch das Nahtstellensignal "Sperre der digitalen NC-Ausgänge" gesperrt, erhält man beim Lesen der Variable immer den Wert Null.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$A_INA</name>
<brief>Analoger Eingang</brief>
<description>Die Variable $A_INA[n] dient dem Zugriff auf die analogen Eingänge.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$A_OUTA</name>
<brief>Analoger Ausgang</brief>
<description>Die Variable $A_OUTA[n] dient dem Zugriff auf die analogen Ausgänge. Beim Schreiben wird der Wert erst mit dem nächsten IPO-Takt
wirksam und kann dann wieder zurückgelesen werden.
Ist die Ausgabe durch das Nahtstellensignal "Sperre der analogen NC-Ausgänge" gesperrt, erhält man beim Lesen der Variable immer den Wert Null.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_INCO</name>
<brief>Komparator-Eingang</brief>
<description>Die Variable $A_INCO[n] dient dem Zugriff auf die Komparator-Eingänge.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DBB</name>
<brief>PLC Datenbyte (unsigned)</brief>
<description>Die Feldvariable $A_DBB[n] dient zum Lesen und Schreiben eines Datenbytes (8Bit) von PLC. Das Byte ist nicht vorzeichenbehaftet und
kann im Bereich von 0 bis 255 gelesen und im Bereich von -128 bis 255 geschrieben werden.
Für den schnellen Austausch von Informationen zwischen PLC und NC wird in dem Koppelspeicher dieser Baugruppen (DPR) ein Spei cherbereich reserviert. Auf diesen Speicher wird von der PLC wird mit FunctionCalls(FC), von NCK mit $-Variablen zugegriffen.
Siehe auch $A_DBSB[n].
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DBW</name>
<brief>PLC Datenwort (unsigned)</brief>
<description>Die Feldvariable $A_DBW[n] dient zum Lesen und Schreiben eines Datenwortes (16Bit) von PLC. Das Byte ist nicht vorzeichenbehaftet
und kann im Bereich von 0 bis 65535 gelesen und im Bereich von -32768 bis 65535 geschrieben werden.
Für den schnellen Austausch von Informationen zwischen PLC und NC wird in dem Koppelspeicher dieser Baugruppen (DPR) ein Spei cherbereich reserviert. Auf diesen Speicher wird von der PLC wird mit FunctionCalls(FC), von NCK mit $-Variablen zugegriffen.
Siehe auch $A_DBSW[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DBD</name>
<brief>PLC Datenwort (unsigned 32 Bit)</brief>
<description>Die Feldvariable $A_DBD[n] dient zum Lesen und Schreiben eines Datendoppelwortes (32Bit) von PLC.
Für den schnellen Austausch von Informationen zwischen PLC und NC wird in dem Koppelspeicher dieser Baugruppen (DPR) ein Spei cherbereich reserviert. Auf diesen Speicher wird von der PLC wird mit FunctionCalls(FC), von NCK mit $-Variablen zugegriffen.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$A_DBR</name>
<brief>PLC Daten Real (32 Bit)</brief>
<description>Die Feldvariable $A_DBR[n] dient zum Lesen und Schreiben von Real Daten (32Bit) von PLC.
Für den schnellen Austausch von Informationen zwischen PLC und NC wird in dem Koppelspeicher dieser Baugruppen (DPR) ein Spei cherbereich reserviert. Auf diesen Speicher wird von der PLC wird mit FunctionCalls(FC), von NCK mit $-Variablen zugegriffen.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DLB</name>
<brief>Link-Variable Byte</brief>
<description>Die Variable $A_DLB[n] ermöglicht das Lesen und Schreiben eines Datenbytes (8Bit), das über NCU-Link auf andere Kanäle oder auf andere NCU's übertragen werden kann.
Mit $MC_MM_NUM_LINKVAR_ELEMENTS legt man die Anzahl der Elemente fest, die der Anwender für die Programmierung von Link- Variablen ($A_DLx) zur Verfügung hat.
Der negative Wertebereich dieser Variable gilt nur für das Schreiben. Man kann die Variable also auch mit negativen Werten beaufschlagen.
Zurückgelesen kann immer nur der entsprechende positive Wert.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DLW</name>
<brief>Link-Variable Word</brief>
<description>Die Variable $A_DLW[n] ermöglicht das Lesen und Schreiben eines Datenwortes (16 Bit), das über NCU-Link auf andere Kanäle oder auf andere NCU's übertragen werden kann.
Mit $MC_MM_NUM_LINKVAR_ELEMENTS legt man die Anzahl der Elemente fest, die der Anwender für die Programmierung von Link- Variablen ($A_DLx) zur Verfügung hat.
Der negative Wertebereich dieser Variable gilt nur für das Schreiben. Man kann die Variable also auch mit negativen Werten beaufschlagen.
Zurückgelesen kann immer nur der entsprechende positive Wert.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DLD</name>
<brief>Link-Variable Integer</brief>
<description>Die Variable $A_DLD[n] ermöglicht das Lesen und Schreiben eines Datendoppelwortes (32 Bit), das über NCU-Link auf andere Kanäle oder auf andere NCU's übertragen werden kann.
Mit $MC_MM_NUM_LINKVAR_ELEMENTS legt man die Anzahl der Elemente fest, die der Anwender für die Programmierung von Link- Variablen ($A_DLx) zur Verfügung hat.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$A_DLR</name>
<brief>Link-Variable Real</brief>
<description>Die Variable $A_DLR[n] ermöglicht das Lesen und Schreiben eines Real-Wertes, der über NCU-Link auf andere Kanäle oder auf andere NCU's übertragen werden kann.
Mit $MC_MM_NUM_LINKVAR_ELEMENTS legt man die Anzahl der Elemente fest, die der Anwender für die Programmierung von Link- Variablen ($A_DLx) zur Verfügung hat.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_LINK_TRANS_RATE</name>
<brief>Link-Übertragungsrate</brief>
<description>Die Variable $A_LINK_TRANS_RATE ermittelt die Anzahl an Link-Variablen, die  noch im aktuellen IPO-Takt über die NCU-Link-Kommuni kation übertragen werden können.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_PBB_IN</name>
<brief>PLC-Eingangsbyte</brief>
<description>Die Feldvariable $A_PBB_IN[n] dient zum Lesen eines Datenbytes (8Bit) vom PLC-IO.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_PBW_IN</name>
<brief>PLC-Eingangswort</brief>
<description>Die Feldvariable $A_PBW_IN[n] dient zum Lesen eines Datenwortes (16 Bit) vom PLC-IO.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_PBD_IN</name>
<brief>PLC-Eingangsdoppelwort</brief>
<description>Die Feldvariable $A_PBD_IN[n] dient zum Lesen eines Datendoppelwortes (32 Bit) vom PLC-IO.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$A_PBR_IN</name>
<brief>PLC-Eingang Real</brief>
<description>Die Feldvariable $A_PBR_IN[n] dient zum Lesen von Real Daten (32 Bit) vom PLC-IO.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_PBB_OUT</name>
<brief>PLC-Ausgangsbyte</brief>
<description>Die Feldvariable $A_PBB_OUT[n] dient zum Schreiben eines Datenbytes (8Bit) auf das PLC-IO.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_PBW_OUT</name>
<brief>PLC-Ausgangswort</brief>
<description>Die Feldvariable $A_PBW_OUT[n] dient zum Schreiben eines Datenwortes (16 Bit) auf das PLC-IO.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_PBD_OUT</name>
<brief>PLC-Ausgangsdoppelwort</brief>
<description>Die Feldvariable $A_PBD_OUT[n] dient zum Schreiben eines Datendoppelwortes (32 Bit) auf das PLC-IO.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$A_PBR_OUT</name>
<brief>PLC-Ausgang Real</brief>
<description>Die Feldvariable $A_PBR_OUT[n] dient zum Schreiben von Real Daten (32 Bit) auf das PLC-IO.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$C_IN</name>
<brief>Signal von PLC an Cycle</brief>
<description>$C_IN[n]
Signal von der PLC an Cycle
reserviert für SIEMENS-Applikationen! Es stehen 16 Eingangssignale (d.h. 2Byte) zur Verfügung. Die Übertragung erfolgt zyklisch.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$C_OUT</name>
<brief>Signal von Cycle an PLC</brief>
<description>$C_OUT[n]
Signal von Cycle an PLC
reserviert für SIEMENS-Applikationen! Es stehen   16 Ausgangssignale (d.h. 2Byte) zur Verfügung. Die Übertragung erfolgt zyklisch.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_CMDT</name>
<brief>Trigger, Kommandoausgabe der WZV</brief>
<description>Auslöser: $AC_TC_CMDT (CoMmadTrigger) nimmt den Wert 1 für einen IPO-Takt immer dann an, wenn ein neues Kommando der Magazinverwaltung an den PLC ausgegeben wird.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_ACKT</name>
<brief>Trigger, PLC quittiert ein Kommando der WZV</brief>
<description>Auslöser: $AC_TC_ACKT (ACKnowledgeTrigger) nimmt einen Wert von 1 für einen IPO-Takt immer dann an, wenn der PLC ein Kommando der WZV quittiert.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_CMDC</name>
<brief>Anzahl der Kommandoausgaben der WZV</brief>
<description>Zählervariable: $AC_TC_CMDC (CoMmandCounter) wird bei jeder Kommandoausgabe der WZV an den PLC um 1 inkrementiert.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_ACKC</name>
<brief>Anzahl der PLC Quittierungen auf WZV-Kommandos</brief>
<description>Zählervariable: $AC_TC_CMDC (ACKnowledgeCounter) wird bei Quittierung eines Kommandos der WZV durch den PLC um 1 inkrementiert.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_FCT</name>
<brief>Kommandonummer</brief>
<description>Die Kommandonummer spezifiziert, welcher Vorgang gewünscht wird.
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_STATUS</name>
<brief>Kommandostatus</brief>
<description>Status, in dem sich das Kommando - zu lesen über $AC_TC_FCT - befindet.
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_THNO</name>
<brief>Nummer des Werkzeughalters des neuen WZ</brief>
<description>Nummer des Werkzeughalters (im spez. die Spindelnr.) auf den das neue Werkzeug eingewechselt werden soll.
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_TNO</name>
<brief>NCK-interne T-Nummer des neuen WZ</brief>
<description>NCK-interne T-Nummer des neuen (einzuwechselnden) Werkzeugs.
 0: es gibt kein neues Werkzeug.
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_MMYN</name>
<brief>Eigentümer-Magazinnummer des neuen WZ</brief>
<description>Eigentümer-Magazinnummer des neuen (einzuwechselnden) Werkzeugs.
 0: es gibt kein neues Werkzeug, oder das neue Werkzeug (falls $AC_TC_TNO &gt; 0) ist nicht beladen (Handwerkzeug).
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_LMYN</name>
<brief>Eigentümerplatznummer des neuen WZ</brief>
<description>Eigentümerplatznummer des neuen (einzuwechselnden) Werkzeugs.
 0: es gibt kein neues Werkzeug, oder das neue Werkzeug (falls $AC_TC_TNO &gt; 0) ist nicht beladen (Handwerkzeug).
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_MFN</name>
<brief>Quell-Magazinnummer des neuen WZ</brief>
<description>Quell-Magazinnummer des neuen Werkzeugs.
 0: es gibt kein neues Werkzeug.
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_LFN</name>
<brief>Quell-Platznummer des neuen WZ</brief>
<description>Quell-Platznummer des neuen Werkzeugs.
 0: es gibt kein neues Werkzeug.
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_MTN</name>
<brief>Ziel-Magazinnummer des neuen WZ</brief>
<description>Ziel-Magazinnummer des neuen Werkzeugs.
 0: es gibt kein neues Werkzeug.
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_LTN</name>
<brief>Ziel-Platznummer des neuen WZ</brief>
<description>Ziel-Platznummer des neuen Werkzeugs.
 0: es gibt kein neues Werkzeug.
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_MFO</name>
<brief>Quell-Magazinnummer des alten WZ</brief>
<description>Quell-Magazinnummer des alten (auszuwechselnden) Werkzeugs.
 0: es gibt kein altes Werkzeug.
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_LFO</name>
<brief>Quell-Platznummer des alten WZ</brief>
<description>Quell-Platznummer des alten (auszuwechselnden) Werkzeugs.
 0: es gibt kein altes Werkzeug.
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_MTO</name>
<brief>Ziel-Magazinnummer des alten WZ</brief>
<description>Ziel-Magazinnummer des alten (auszuwechselnden) Werkzeugs.
 0: es gibt kein altes Werkzeug.
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_LTO</name>
<brief>Ziel-Platznummer des alten WZ</brief>
<description>Ziel-Platznummer des alten (auszuwechselnden) Werkzeugs.
 0: es gibt kein altes Werkzeug.
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_YEAR</name>
<brief>Systemzeit:  Jahr</brief>
<description>Systemzeit Jahr
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_MONTH</name>
<brief>Systemzeit:  Monat</brief>
<description>Systemzeit Monat
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_DAY</name>
<brief>Systemzeit: Tag</brief>
<description>Systemzeit Tag
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_HOUR</name>
<brief>Systemzeit:  Stunde</brief>
<description>Systemzeit Stunde
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_MINUTE</name>
<brief>Systemzeit:  Minute</brief>
<description>Systemzeit Minute
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_SECOND</name>
<brief>Systemzeit:  Sekunde</brief>
<description>Systemzeit Sekunde
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_MSECOND</name>
<brief>Systemzeit:  Millisek.</brief>
<description>Systemzeit Millisekunden
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_TIME</name>
<brief>Zeit vom Satzanfang</brief>
<description>Die Variable $AC_TIME ermittelt die Zeit vom Satzanfang in Sekunden.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_TIMES</name>
<brief>Zeit vom Satzanfang (REAL) in Sekunden</brief>
<description>Zeit vom Satzanfang (REAL) in Sekunden (ohne Zeiten für intern generierte Zwischensätze).
Jeder programmierte Satz kann in eine Kette von Teilsätzen aufgeteilt werden, die nacheinander abgearbeitet werden. N_u_r mit dem 1. Takt des 1.Satzes der Kette wird $AC_TIMES auf Null gesetzt und danach in Sekunden hochgezählt. Damit erlaubt die Variable Zeitmessungen über die ganze Satzkette hinweg. Die Variable ist nur aus Synchronaktionen zugreifbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_TIMEC</name>
<brief>IPO-Takte seit Satzanfang</brief>
<description>Die Variable $AC_TIMEC ermittelt die Anzahl von Interpolationstakten die seit Satzanfang vergangen sind.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_TIMESC</name>
<brief>Zeit vom Satzanfang in IPO Takten</brief>
<description>Zeit vom Satzanfang (Real) in IPO Takten (ohne Takte für intern generierte Zwischensätze) Jeder programmierte Satz kann in eine Kette von Teilsätzen aufgeteilt werden, die nacheinander abgearbeitet werden. N_u_r mit dem 1. Takt des 1.Satzes der Kette wird $AC_TIMESC auf Null gesetzt und danach in IPO Takten hochgezählt. Damit erlaubt die Variable Zeitmessungen über die ganze Satzkette hinweg. Die Variable ist nur aus Synchronaktionen zugreifbar
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TIMER</name>
<brief>Anwender-Timer</brief>
<description>Die Feldvariable $AC_TIMER[n] ist ein anwendungsbezogener Timer. Die Zeit in Sekunden wird in Vielfachen eines Interpolationstaktes gezählt.

Das Starten des Timers erfolgt durch die Wertzuweisung:
$AC_TIMER[n] = &lt;startwert&gt;

Die Timer können durch Zuweisung eines negativen Wertes gestoppt werden:
$AC_TIMER[n] = -1

Der aktuelle Zeitwert kann bei laufender oder gestoppter Zeitvariable gelesen werden. Nach dem Stoppen der Zeitvariable durch Zuweisung von -1 bleibt der zuletzt aktuelle Zeitwert stehen und kann weiterhin gelesen werden.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PRTIME_M</name>
<brief>Programmlaufzeit (Hauptzeit)</brief>
<description>Die Variable $AC_PRTIME_M "ProgramRunTIME-Main" ermittelt die Hauptzeit der Programmlaufzeit. Während der Simulation wird die zu erwartende Bearbeitungszeit der Sätze des Teileprogrammes berechnet und in dieser Systemvariablen und der BTSS-Variablen 'acPRTimeM' zur Verfügung gestellt. Das Ablöschen dieses Wertes erfolgt mit dem Schreiben auf diese Variable.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PRTIME_A</name>
<brief>Programmlaufzeit (Nebenzeit)</brief>
<description>Die Variable $AC_PRTIME_A "ProgramRunTIME-Auxilary" ermittelt die Nebenzeiten zur Programmlaufzeit. Während der Simulation wird die zu erwartende Bearbeitungszeit (Nebenzeiten) der Sätze des Teileprogrammes berechnet und in dieser Systemvariablen und der BTSS-Variablen 'acPRTimeA' zur Verfügung gestellt. Das Ablöschen dieses Wertes erfolgt mit dem Schreiben auf diese Variable.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PRTIME_M_INC</name>
<brief>Inkrementieren von ProgramRunTIME-Main</brief>
<description>Durch das Schreiben auf die Variable $AC_PRTIME_M_INC "ProgramRunTIME-Main-INCrement" kann die Hauptzeit der Programmlaufzeit inkrementiert werden. Während der Simulation wird die zu erwartende Bearbeitungszeit der Sätze des Teileprogrammes berechnet und in der BTSS-Variablen 'acPRTimeM' zur Verfügung gestellt. Da dabei jedoch bestimmte Zeiten (z.B. PLC-Zeiten) unberücksichtigt bleiben, kann durch das explizite Schreiben dieser Variablen die vorauskalkulierte Programmlaufzeit korrigiert werden.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PRTIME_A_INC</name>
<brief>Inkrementieren von ProgramRunTIME-Aux.</brief>
<description>Durch das Schreiben auf die Variable $AC_PRTIME_A_INC "ProgramRunTIME-Auxilary-INCrement" kann die Nebenzeit der Programm laufzeit inkrementiert werden. Während der Simulation wird die zu erwartende Bearbeitungszeit der Sätze des Teileprogrammes berechnet und in der BTSS-Variablen 'acPRTimeM' zur Verfügung gestellt. Da dabei jedoch bestimmte Zeiten (z.B. PLC-Zeiten) unberücksichtigt bleiben, kann durch das explizite Schreiben dieser Variablen die vorauskalkulierte Programmlaufzeit korrigiert werden.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PATHN</name>
<brief>Normierter Bahnparameter</brief>
<description>Die Variable $AC_PATHN ist ein normierter Bahnparameter, dessen Wert zwischen 0 am Satzanfang und 1 am Satzende variiert.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_DTBW</name>
<brief>Abstand vom Satzanfang im WKS</brief>
<description>Die Variable $AC_DTBW ermittelt den geometrischen Abstand vom Satzanfang im Werkstückkoordinatensystem. Für die Abstandsberechnung ist die programmierte Position bestimmend. Falls die Achse Koppelachse ist, bleibt der aus der Achskopplung resultierende Positionsanteil unberücksichtigt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_REPOS_PATH_MODE</name>
<brief>Art des Repos-Modes</brief>
<description>Art des Repos-Modes
0 == nicht definiert.
1 == RMB Reposanfahren auf den Beginn des unterbrochenen Satzes
2 == RMI Reposanfahren auf den Unterbrechungspunkt des unterbrochenen Satzes
3 == RME Reposanfahren auf das Ende des unterbrochenen Satzes
4 == RMN Reposanfahren auf den geometrisch nächsten Punkt des unterbrochenen Satzes
Die Variable ist definiert, wenn REPOS gerade abgearbeitet wird, oder wenn via VDI ein neuer REPOS-Mode vorgegeben worden ist.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_DTBB</name>
<brief>Abstand vom Satzanfang im BKS</brief>
<description>Die Variable $AC_DTBB ermittelt den geometrischen Abstand vom Satzanfang im Basiskoordinatensystem.
Für die Abstandsberechnung ist allein die programmierte Position bestimmend. Falls die Achse Koppelachse ist, bleibt der aus der Achskopplung resultierende Positionsanteil unberücksichtigt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_DTEW</name>
<brief>Abstand vom Satzende im WKS</brief>
<description>Die Variable $AC_DTEW ermittelt den geometrischen Abstand vom Satzende im Werkstückkoordinatensystem.
Für die Abstandsberechnung ist allein die programmierte Position bestimmend. Falls die Achse Koppelachse ist, bleibt der aus der Achskopplung resultierende Positionsanteil unberücksichtigt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_DTEB</name>
<brief>Abstand vom Satzende im BKS</brief>
<description>Die Variable $AC_DTEB ermittelt den geometrischen Abstand vom Satzende im Basiskoordinatensystem.
Für die Abstandsberechnung ist allein die programmierte Position bestimmend. Falls die Achse Koppelachse ist, bleibt der aus der Achskopplung resultierende Positionsanteil unberücksichtigt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PLTBB</name>
<brief>Bahnweg vom Satzanfang im BKS</brief>
<description>Die Variable $AC_PLTBB ermittelt den Bahnweg vom Satzanfang im Basiskoordinatensystem.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PLTEB</name>
<brief>Bahnweg zum Satzende im BKS</brief>
<description>Die Variable $AC_PLTEB ermittelt den Bahnweg zum Satzende im Basiskoordinatensystem.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_DELT</name>
<brief>Bahn-Restweges im WKS</brief>
<description>Die Variable $AC_DELT dient zum Lesen des abgespeicherten Bahn-Restweges im Werkstückkoordinatensystem nach Restweglöschen in Bewegungssynchronaktionen.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_APDV</name>
<brief>Positionswerte bei WAB sind gültig</brief>
<description>$P_APDV liefert True, wenn die mit $P_APR[X] bzw. $P_AEP[X] lesbaren Positionswerte (Aufstartpunkt bzw. Konturpunkt beim Weichen An- und Abfahren) gültig sind.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_F</name>
<brief>Programmierter Bahnvorschub</brief>
<description>Die Variable $P_F dient zum Lesen des zuletzt programmierten Bahnvorschub F.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_F</name>
<brief>Aktiver programmierter Bahnvorschub</brief>
<description>Die Variable $AC_F dient zum Lesen des aktiven programmierten Bahnvorschubes F.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_F_G0</name>
<brief>Max. Eilganggeschwindigkeit im Satz</brief>
<description>Die Variable $AC_F_G0 liefert die maximale Eilganggeschwindigkeit im Satz.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_OVR</name>
<brief>Bahnoverride über Synchronaktion vorgebbar</brief>
<description>Die Variable $AC_OVR ermittelt den über Synchronaktion vorgebbaren Bahnoverride. Das Setzen des Bahnoverrides durch Zuweisung eines Wertes an $AC_OVR muss zyklisch in jedem IPO-Takt erfolgen. Ansonsten wird $AC_OVR auf 100% zurückgesetzt. Den gesamten Bahnoverride kann man über $AC_TOTAL_OVR lesen. Der gesamte Bahnoverride ohne den programmierbaren Override (z.B. OVR = 10) ist begrenzt auf den durch die Maschinendaten $MN_OVR_FACTOR_LIMIT_BIN bzw. $MN_OVR_FACTOR_FEEDRATE[30] definierten maximalen Wert. Werte kleiner 0 sind nicht erlaubt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PLC_OVR</name>
<brief>PLC-seitiger Override</brief>
<description>Die Variable $AC_PLC_OVR ermittelt den Bahnoverride, der von PLC vorgegeben wird. Dies ist der Vorschuboverride, der über die Maschinensteuertafel eingestellt wird. Bei G0-Sätzen wird der Eilgangoverride (über Maschinensteuertafel einstellbar) wirksam. Wurde die Eilgangreduzierung über die Bedienoberfläche aktiviert, so wird bei G0-Sätzen zusätzlich $SC_OVR_RAPID_FACTOR multiplikativ eingerechnet.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_TOTAL_OVR</name>
<brief>Gesamter Bahnoverride</brief>
<description>Die Variable $AC_TOTAL_OVR liefert den gesamten Bahnoverride. Der Wert berechnet sich aus dem Override von PLC, dem Synchron
aktions-Override ($AC_OVR) und dem programmierbaren Override (z.B. OVR = 10).
$AC_TOTAL_OVR = $AC_PLC_OVR * $AC_OVR * OVR / 10000.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_VC</name>
<brief>additive Bahnvorschubkorrektur</brief>
<description>Additive Bahnvorschubkorrektur für Synchronaktionen Der Korrekturwert muss in jedem IPO-Takt neu geschrieben werden, sonst wirkt der Wert 0.
Bei Override 0 wird der Korrekturwert unwirksam. Ansonsten wirkt der Korrekturwert unabhängig vom Override..
Der Gesamtvorschub kann durch den Korrekturwert nicht negativ werden.
Nach oben wird so begrenzt, dass die maximalen Achsgeschwindigkeiten und Beschleunigungen nicht überschritten werden. Der maximal fahrbare Vorschub ist durch $MN_OVR_FACTOR_LIMIT_BIN, $MN_OVR_FACTOR_FEEDRATE[30] beschränkt (siehe Maschinendaten).
Der Korrekturwert wird bei G0, G33, G331, G332 und G63 nicht eingerechnet.
Die Variable ist nur aus Synchronaktionen zugreifbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PATHACC</name>
<brief>Bahnbeschleunigung für Echtzeitereignisse</brief>
<description>Vorgabe einer erhöhten Bahnbeschleunigung für Override-Änderungen und Stopp/Start-Ereignisse.
$AC_PATHACC wird nur berücksichtigt, wenn der Wert größer der präparierten Beschleunigungsbegrenzung ist.
Der Wert 0 wählt die Funktion ab.
Werte, die zu Maschinenachsbeschleunigungen führen, die doppelt zu hoch sind wie in $MA_MAX_AX_ACCEL[..] parametriert ist, werden intern entsprechend begrenzt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PATHJERK</name>
<brief>Bahnruck für Echtzeitereignisse</brief>
<description>Vorgabe eines erhöhten Bahnrucks für   Override-Änderungen und Stopp/Start-Ereignisse.
$AC_PATHJERK wird nur berücksichtigt, wenn der Wert größer der präparierten Ruckbegrenzung ist.
Der Wert 0 wählt die Funktion ab.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_VACTB</name>
<brief>Bahngeschwindigkeit der Geometrieachsen</brief>
<description>Bahngeschwindigkeit im Basiskoordinatensystem.
Die Geschwindigkeit wird aus den Geschwindigkeiten der Geometrieachsen berechnet., - unabhängig von FGROUP.
Die Variable ist nur aus Synchronaktionen zugreifbar
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_VACTW</name>
<brief>WKSBahngeschwindigkeit der Geometrieachsen</brief>
<description>Bahngeschwindigkeit im Werkstückkoordinatensystem Die Geschwindigkeit wird aus den Geschwindigkeiten der Geometrieachsen berechnet., - unabhängig von FGROUP.
Die Variable ist nur aus Synchronaktionen zugreifbar
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_S</name>
<brief>programmierte Spindeldrehzahl</brief>
<description>$P_S[n]
n: Nummer der Spindel
zuletzt programmierte Spindeldrehzahl
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_S</name>
<brief>aktuelle Spindeldrehzahl</brief>
<description>$AA_S[n]
n: Nummer der Spindel
Spindel-Istdrehzahl. Das Vorzeichen entspricht der Drehrichtung.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_CONSTCUT_S</name>
<brief>programmierte Schnittgeschwindigkeit</brief>
<description>$P_CONSTCUT_S[n]
n: Nummer der Spindel
zuletzt programmierte konstante Schnittgeschwindigkeit
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_CONSTCUT_S</name>
<brief>aktuelle konstante Schnittgeschwindigkeit</brief>
<description>$AC_CONSTCUT_S[n]
n: Nummer der Spindel
Aktuelle konstante Schnittgeschwindigkeit.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_SEARCH_S</name>
<brief>Suchlauf: Drehzahl, Schnittgeschwindigkeit</brief>
<description>$P_SEARCH_S[n]
n: Nummer der Spindel
Bei Satzsuchlauf aufgesammelte zuletzt programmierte Spindeldrehzahl bzw. Schnittgeschwindigkeit
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_SDIR</name>
<brief>Programmierte Spindeldrehrichtung</brief>
<description>$P_SDIR[n]
n: Nummer der Spindel
Programmierte Spindeldrehrichtung im Teileprogramm
3: Spindeldrehrichtung rechts, 4: Spindeldrehrichtung links, 5: Spindel Halt
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_SDIR</name>
<brief>aktuelle Spindeldrehrichtung im Sinne von M3/M4/M5</brief>
<description>$AC_SDIR[n]
n: Nummer der Spindel
Aktuelle Spindeldrehrichtung im Sinne von M3/M4/M5 im Teileprogramm, Synchronaktionen, PLC FC18, PLC DBB30.
3: Spindeldrehrichtung rechts, 4: Spindeldrehrichtung links, 5: Spindel Halt
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_SEARCH_SDIR</name>
<brief>Satzsuchlauf: programmierte Spindeldrehrichtung im Teileprogramm</brief>
<description>$P_SEARCH_SDIR[n]
n: Nummer der Spindel
Bei Satzsuchlauf aufgesammelte zuletzt programmierte Spindeldrehrichtung
3: M3 Spindeldrehrichtung rechts
4: M4 Spindeldrehrichtung links
5: M5 Spindel Halt
-19: M19, SPOS, SPOSA Spindelpositionierung, Position und Anfahrmode wird aus SEARCH-Variablen gelesen
70: M70 Umschalten auf Achsbetrieb
-5: Keine Spindeldrehrichtung programmiert, wird nicht ausgegeben.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_SMODE</name>
<brief>Spindelbetriebsart</brief>
<description>$P_SMODE[n]
n: Nummer der Spindel
Es wird die sich aus der letzten Spindelprogrammierung ergebende Spindelbetriebsart zurückgegeben.
0: keine Spindel im Kanal vorhanden oder Spindel ist in einem anderen Kanal aktiv oder wird von PLC (FC18) bzw. von Synchronaktionen benutzt.
1: Drehzahlsteuerbetrieb
2: Positionierbetrieb
3: Synchronbetrieb
4: Achsbetrieb
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_SMODE</name>
<brief>Aktuelle Spindelbetriebsart</brief>
<description>$AC_SMODE[n]
n: Nummer der Spindel
Aktuelle Spindelbetriebsart:
0: keine Spindel im Kanal vorhanden
1: Drehzahlsteuerbetrieb
2: Positionierbetrieb
3: Synchronbetrieb
4: Achsbetrieb
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_SGEAR</name>
<brief>Spindel: Sollgetriebestufe</brief>
<description>$P_SGEAR[n]
n: Nummer der Spindel
Letzte programmierte oder bei M40 durch S-Programmierung angeforderte
Spindelgetriebestufe
1: 1. Getriebestufe angefordert
....
5: 5. Getriebestufe angefordert
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_SGEAR</name>
<brief>Aktive Spindelgetriebestufe</brief>
<description>$AC_SGEAR[n]
n: Nummer der Spindel
Aktive Spindelgetriebestufe
1: 1. Getriebestufe ist aktiv
....
5: 5. Getriebestufe ist aktiv
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_SAUTOGEAR</name>
<brief>Automatischer Getriebestufenwechsel</brief>
<description>$P_SAUTOGEAR[n]
n: Nummer der Spindel
Automatischer Getriebestufenwechsel (M40) ist programmiert.
0: Getriebestufen werden durch M41..M45 angefordert
1: Getriebestufe wird passend zur programmierten Drehzahl (S) ermittelt
und angefordert (M40 automatischer Getriebestufenwechsel ist aktiv)
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_SEARCH_SGEAR</name>
<brief>Suchlauf: Getriebestufen M-Code</brief>
<description>$P_SEARCH_SGEAR[n]
n: Nummer der Spindel
Bei Satzsuchlauf aufgesammelte zuletzt programmierte Getriebestufen M-Funktion.
40: M40 automatischer Getriebestufenwechsel
41: M41 1. Getriebestufe angefordert
...
45: M45 5. Getriebestufe angefordert
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_SEARCH_SPOS</name>
<brief>Suchlauf: Spindelposition, -weg</brief>
<description>$P_SEARCH_SPOS[n]
n: Nummer der Spindel
Bei Satzsuchlauf aufgesammelte zuletzt durch M19, SPOS bzw. SPOSA programmierte Spindelposition bzw. programmierter Verfahrweg.
Position: 0...359.999 wenn der Wert im MD 30330 MODULO_RANGE 360.0 Grad ist
Weg: -100000000 ... 100000000 Grad. Das Vorzeichen gibt die Verfahrrichtung an.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_SEARCH_SPOSMODE</name>
<brief>Suchlauf: Positionsanfahrmode</brief>
<description>$P_SEARCH_SPOSMODE[n]
n: Nummer der Spindel
Bei Satzsuchlauf aufgesammelter zuletzt durch M19, SPOS bzw. SPOSA programmierter Positionsanfahrmode.
0: DC
1: AC
2: IC
3: DC
4: ACP
5: ACN
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_NUM_SPINDLES</name>
<brief>Anzahl Spindeln im Kanal</brief>
<description>Ermittelt die maximale Anzahl der Spindeln im Kanal
0: keine Spindel im Kanal vorhanden.
1..n: Anzahl der Spindeln im Kanal.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_MSNUM</name>
<brief>Nummer der Masterspindel</brief>
<description>Gibt die Nummer der Masterspindel zurück.
0: keine Spindel im Kanal vorhanden
1..n: Nummer der Masterspindel
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MSNUM</name>
<brief>Nummer der Masterspindel</brief>
<description>Gibt die Nummer der aktuellen Masterspindel zurück.
0: keine Spindel vorhanden
1..n: Nummer der Masterspindel
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_MTHNUM</name>
<brief>Nummer der Master-WZ-Halter</brief>
<description>$P_MTHNUM - nur mit aktiver Magazinverwaltung sinnvoll
Gibt die Nummer der Master-WZ-Halter zurück:
0: kein Master-WZ-Halter vorhanden
1..n: Nummer des Master-WZ-Halters
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MTHNUM</name>
<brief>Nummer der aktuellen Master-WZ-Halter</brief>
<description>$AC_MTHNUM - nur mit aktiver Magazinverwaltung sinnvoll
Gibt die Nummer der aktuellen Master-WZ-Halter zurück:
0: kein Master-WZ-Halter vorhanden
1..n: Nummer des Master-WZ-Halters
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$P_GWPS</name>
<brief>Konstante Scheibenumfangsgeschwindigkeit aktiv</brief>
<description>$P_GWPS[n]
Konstante Scheibenumfangsgeschwindigkeit ein, wenn TRUE
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_FCT1LL</name>
<brief>Untergrenze für 1. Polynomfunktion</brief>
<description>Die Variable $AC_FCT1LL dient zur Festlegung des unteren Grenzwertes für die erste Polynomfunktion.
Die Definition der Polynomfunktion kann auch über FCTDEF(Polynom-Nr., Untergrenze, Obergrenze, a0, a1, a2, a3) erfolgen.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_FCT2LL</name>
<brief>Untergrenze für 2. Polynomfunktion</brief>
<description>Die Variable $AC_FCT2LL dient zur Festlegung des unteren Grenzwertes für die zweite Polynomfunktion.
Die Definition der Polynomfunktion kann auch über FCTDEF(Polynom-Nr., Untergrenze, Obergrenze, a0, a1, a2, a3) erfolgen.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_FCT3LL</name>
<brief>Untergrenze für 3. Polynomfunktion</brief>
<description>Die Variable $AC_FCT3LL dient zur Festlegung des unteren Grenzwertes für die dritte Polynomfunktion.
Die Definition der Polynomfunktion kann auch über FCTDEF(Polynom-Nr., Untergrenze, Obergrenze, a0, a1, a2, a3) erfolgen.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_FCT1UL</name>
<brief>Obergrenze für 1. Polynomfunktion</brief>
<description>Die Variable $AC_FCT1UL dient zur Festlegung des oberen Grenzwertes für die erste Polynomfunktion.
Die Definition der Polynomfunktion kann auch über FCTDEF(Polynom-Nr., Untergrenze, Obergrenze, a0, a1, a2, a3) erfolgen.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_FCT2UL</name>
<brief>Obergrenze für 2. Polynomfunktion</brief>
<description>Die Variable $AC_FCT2UL dient zur Festlegung des oberen Grenzwertes für die zweite Polynomfunktion.
Die Definition der Polynomfunktion kann auch über FCTDEF(Polynom-Nr., Untergrenze, Obergrenze, a0, a1, a2, a3) erfolgen.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_FCT3UL</name>
<brief>Obergrenze für 3. Polynomfunktion</brief>
<description>Die Variable $AC_FCT3UL dient zur Festlegung des oberen Grenzwertes für die dritte Polynomfunktion.
Die Definition der Polynomfunktion kann auch über FCTDEF(Polynom-Nr., Untergrenze, Obergrenze, a0, a1, a2, a3) erfolgen.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FCT1C</name>
<brief>Koeffizienten für die 1. Polynomfunktion</brief>
<description>Die Feldvariable $AC_FCT1C[n] dient zur Programmierung der Polynomkoeffizienten a0 - a3 für die erste Polynomfunktion.
Die Definition der Polynomfunktion kann auch über FCTDEF(Polynom-Nr., Untergrenze, Obergrenze, a0, a1, a2, a3) erfolgen.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FCT2C</name>
<brief>Koeffizienten für die 2. Polynomfunktion</brief>
<description>Die Feldvariable $AC_FCT2C[n] dient zur Programmierung der Polynomkoeffizienten a0 - a3 für die zweite Polynomfunktion.
Die Definition der Polynomfunktion kann auch über FCTDEF(Polynom-Nr., Untergrenze, Obergrenze, a0, a1, a2, a3) erfolgen.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FCT3C</name>
<brief>Koeffizienten für die 3. Polynomfunktion</brief>
<description>Die Feldvariable $AC_FCT3C[n] dient zur Programmierung der Polynomkoeffizienten a0 - a3 für die dritte Polynomfunktion.
Die Definition der Polynomfunktion kann auch über FCTDEF(Polynom-Nr., Untergrenze, Obergrenze, a0, a1, a2, a3) erfolgen.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FCTLL</name>
<brief>Untergrenze von Polynomfunktionen</brief>
<description>Die Feldvariable $AC_FCTLL[n] dient zur Festlegung des unteren Grenzwertes für die n-te Polynomfunktion.
Die Definition der Polynomfunktion kann auch über FCTDEF(Polynom-Nr., Untergrenze, Obergrenze, a0, a1, a2, a3) erfolgen.
n: Nummer des Polynoms
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FCTUL</name>
<brief>Obergrenze von Polynomfunktionen</brief>
<description>Die Feldvariable $AC_FCTUL[n] dient zur Festlegung des oberen Grenzwertes für die n-te Polynomfunktion.
Die Definition der Polynomfunktion kann auch über FCTDEF(Polynom-Nr., Untergrenze, Obergrenze, a0, a1, a2, a3) erfolgen.
n: Nummer des Polynoms
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FCT0</name>
<brief>1. Koeffizient von Polynomfunktionen</brief>
<description>Die Feldvariable $AC_FCT0[n] dient zur Programmierung des a0-Koeffizienten für die n-te Polynomfunktion.
Die Definition der Polynomfunktion kann auch über FCTDEF(Polynom-Nr., Untergrenze, Obergrenze, a0, a1, a2, a3) erfolgen.
n: Nummer des Polynoms
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FCT1</name>
<brief>2. Koeffizient von Polynomfunktionen</brief>
<description>Die Feldvariable $AC_FCT1[n] dient zur Programmierung des a1-Koeffizienten für die n-te Polynomfunktion.
Die Definition der Polynomfunktion kann auch über FCTDEF(Polynom-Nr., Untergrenze, Obergrenze, a0, a1, a2, a3) erfolgen.
n: Nummer des Polynoms
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FCT2</name>
<brief>3. Koeffizient von Polynomfunktionen</brief>
<description>Die Feldvariable $AC_FCT2[n] dient zur Programmierung des a2-Koeffizienten für die n-te Polynomfunktion.
Die Definition der Polynomfunktion kann auch über FCTDEF(Polynom-Nr., Untergrenze, Obergrenze, a0, a1, a2, a3) erfolgen.
n: Nummer des Polynoms
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FCT3</name>
<brief>4. Koeffizient von Polynomfunktionen</brief>
<description>Die Feldvariable $AC_FCT3[n] dient zur Programmierung des a3-Koeffizienten für die n-te Polynomfunktion.
Die Definition der Polynomfunktion kann auch über FCTDEF(Polynom-Nr., Untergrenze, Obergrenze, a0, a1, a2, a3) erfolgen.
n: Nummer des Polynoms
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_ALARM_STAT</name>
<brief>Alarmreaktionen</brief>
<description>Die Variable $AC_ALARM_STAT liefert ausgewählte Alarmreaktionen.

Folgende Bits sind möglich:
0x04     Kanalzustand NOREADY
0x40     Stopp wegen Alarm
0x200    Signal an PLC
0x11     Achsen im Nachführen
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$AN_ESR_TRIGGER</name>
<brief>ESR-Auslösung</brief>
<description>$AN_ESR_TRIGGER = 1
Auslösung des "Erweiterten Stillsetzen und Rückziehens"
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$AC_ESR_TRIGGER</name>
<brief>ESR-Auslösung</brief>
<description>$AC_ESR_TRIGGER = 1
Auslösung des "NC-geführten ESR"
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_OPERATING_TIME</name>
<brief>Laufzeit von NC-Programmen in BA Automatik</brief>
<description>Mit $AC_OPERATING_TIME wird die Gesamt-Laufzeit aller NC-Programme in der Betriebsart Automatik zwischen NC-Start und Programm- Ende / NC-Reset gemessen ( in Sekunden ).

Die Messung kann über das Kanal-MD 27860 $MC_PROCESSTIMER_MODE aktiviert werden:
Bit 0 = 1 Die Messung $AC_OPERATING_TIME ist aktiv.

Folgende Auswahl von weiteren Messbedingungen ist möglich:
Bit 4 = 0  Keine Messung bei aktivem Probelauf-Vorschub
Bit 4 = 1  Messung auch bei aktivem Probelauf-Vorschub
Bit 5 = 0  Keine Messung bei Programm-Test
Bit 5 = 1  Messung auch bei Programm-Test
Bit 9 = 0  Keine Messung bei Override 0%
Bit 9 = 1  Messung auch bei Override 0%

Nutzung im NC-Programm :
IF $AC_OPERATING_TIME &lt; 12000 GOTOB STARTMARK
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_CYCLE_TIME</name>
<brief>Laufzeit des angewählten NC-Programms</brief>
<description>Mit $AC_CYCLE_TIME wird die Laufzeit des angewählten NC-Programms zwischen NC-Start und Programm-Ende / NC-Reset gemessen ( in Sekunden ).
Mit jedem erneuten Programmstart wird der Timer gelöscht.

Die Messung kann über das Kanal-MD 27860 $MC_PROCESSTIMER_MODE aktiviert werden:
Bit 1 = 1 Die Messung $AC_CYCLE_TIME der aktuellen Programm-Laufzeit ist aktiv.

Folgende Auswahl von weiteren Messbedingungen ist möglich:
Bit 4 = 0  Keine Messung bei aktivem Probelauf-Vorschub
Bit 4 = 1  Messung auch bei aktivem Probelauf-Vorschub
Bit 5 = 0  Keine Messung bei Programm-Test
Bit 5 = 1  Messung auch bei Programm-Test
Bit 6 = 0  Löschen auch bei Start durch ASUP und PROG_EVENTs
Bit 6 = 1  Keine Löschung bei Start durch ASUP und PROG_EVENTs
Bit 8 = 0  Keine Löschung bei einem Sprung mit GOTOS auf den Programmanfang
Bit 8 = 1  Löschung bei einem Sprung mit GOTOS auf den Programmanfang
Bit 9 = 0  Keine Messung bei Override 0%
Bit 9 = 1  Messung auch bei Override 0%

Anwendung in NC-Programm:
IF $AC_CYCLE_TIME &gt; 2400 GOTOF ALARM01
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_CUTTING_TIME</name>
<brief>Bearbeitungszeit</brief>
<description>Mit $AC_CUTTING_TIME wird die Bearbeitungszeit gemessen ( in Sekunden ) .
Diese Zeit ist definiert als Laufzeit der Bahnachsen ( mindestens eine ist aktiv ) ohne aktiven Eilgang in allen NC-Programmen zwischen NC-Start und Programmende / NC-Reset wahlweise mit / ohne aktives Werkzeug. Die Messung wird zusätzlich bei aktiver Verweilzeit unterbrochen. Der Timer wird bei jedem Steuerungshochlauf mit Defaultwerten automatisch genullt.

Die Messung kann über das Kanal-MD 27860 $MC_PROCESSTIMER_MODE aktiviert werden:
Bit 2 = 1 Die Messung $AC_CUTTING_TIME ist aktiv.

Folgende Auswahl von weiteren Messbedingungen ist möglich:
Bit 4 = 0  Keine Messung bei aktivem Probelauf-Vorschub
Bit 4 = 1  Messung auch bei aktivem Probelauf-Vorschub
Bit 5 = 0  Keine Messung bei Programm-Test
Bit 5 = 1  Messung auch bei Programm-Test
Bit 7 = 0  Messung nur bei aktivem Werkzeug
Bit 7 = 1  Messung läuft werkzeugunabhängig

Anwendung in NC-Programm:
IF $AC_CUTTING_TIME &gt; 6000 GOTOF ACT_M06
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_REQUIRED_PARTS</name>
<brief>Definition der Zahl benötigter Werkstücke</brief>
<description>Mit $AC_REQUIRED_PARTS kann die Anzahl der Werkstücke definiert werden, bei dessen Erreichen die Anzahl der aktuellen Werkstücke $AC_ACTUAL_PARTS genullt wird ( Werkstück-Soll ).

Über das Kanal-MD 27880 $MC_PART_COUNTER kann die Generierung des Anzeige-Alarms "Werkstück-Soll erreicht" und des Kanal-VDI-Signals "Werkstück-Soll erreicht" aktiviert werden:
Bit 0 = 1:   Zähler $AC_REQUIRED_PARTS ist aktiv

Weitere Bedeutung Bit 1 nur bei Bit 0 = 1:
Bit 1 = 0: Alarm-/VDI-Ausgabe bei Übereinstimmung von $AC_ACTUAL_PARTS mit $AC_REQUIRED_PARTS
Bit 1 = 1:   Alarm-/VDI-Ausgabe bei Übereinstimmung von $AC_SPECIAL_PARTS mit $AC_REQUIRED_PARTS

Anwendung im NC-Programm:
$AC_REQUIRED_PARTS = ACTUAL_LOS
z.B. für die Definition einer Losgröße,    einer Tagesproduktion ...
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_TOTAL_PARTS</name>
<brief>Gesamtzahl aller hergestellten Werkstücke</brief>
<description>Der Zähler $AC_TOTAL_PARTS gibt die Anzahl aller ab Startzeitpunkt hergestellten Werkstücke an.
Die Erhöhung des Zählers um 1 erfolgt mit der Ausgabe des im Kanal-MD 27882$MC_PART_COUNTER_MCODE[0] definierten M-Befehls an die PLC.
Der Zähler wird automatisch nur bei Steuerungshochlauf mit Standard-Werten genullt.

Über das Kanal-MD 27880 $MC_PART_COUNTER wird der Timer aktiviert:
Bit 4 = 1:   Zähler $AC_TOTAL_PARTS ist aktiv

Weitere Bedeutung Bit 5-6 nur bei Bit 4 =1:
Bit 5 = 0:   Zähler $AC_TOTAL_PARTS wird bei einer VDI-Ausgabe von M02/M30 um den Wert 1 erhöht
Bit 5 = 1:   Zähler $AC_TOTAL_PARTS wird bei Ausgabe des M-Befehls aus dem MD PART_COUNTER_MCODE[0] um den Wert 1 erhöht
Bit 6 = 0:   $AC_TOTAL_PARTS auch bei Programm-Test/Satzsuchlauf aktiv
Bit 6 = 1:   Keine Bearbeitung $AC_TOTAL_PARTS bei Programm-Test/Satzsuchlauf

Anwendung im NC-Programm :
IF $AC_TOTAL_PARTS &gt; SERVICE_COUNT GOTOF MARK_END
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_ACTUAL_PARTS</name>
<brief>Zahl der aktuell hergestellten Werkstücke</brief>
<description>Der Zähler $AC_ACTUAL_PARTS registriert die Anzahl aller ab Startzeitpunkt hergestellten Werkstücke .
Bei einem Erreichen des Werkstück-Solls( $AC_REQUIRED_PARTS ) wird der Zähler automatisch genullt( $AC_REQUIRED_PARTS un gleich 0 ).
Die Erhöhung des Zählers um 1 erfolgt mit der Ausgabe des im Kanal-MD 27882$MC_PART_COUNTER_MCODE[1] definierten M-Befehls an die PLC.
Der Zähler wird automatisch nur bei Steuerungshochlauf mit Standard-Werten genullt.

Über das Kanal-MD 27880 $MC_PART_COUNTER wird der Timer aktiviert:
Bit 4 = 1:   Zähler $AC_TOTAL_PARTS ist aktiv

Weitere Bedeutung Bit 5-6 nur bei Bit 4 =1:
Bit 5 = 0:   Zähler $AC_TOTAL_PARTS wird bei einer VDI-Ausgabe von M02/M30 um den Wert 1 erhöht
Bit 5 = 1:   Zähler $AC_TOTAL_PARTS wird bei Ausgabe des M-Befehls aus dem MD PART_COUNTER_MCODE[0] um den Wert 1 erhöht
Bit 6 = 0:   $AC_TOTAL_PARTS auch bei Programm-Test/Satzsuchlauf aktiv
Bit 6 = 1:   Keine Bearbeitung $AC_TOTAL_PARTS bei Programm-Test/Satzsuchlauf

Anwendung im NC-Programm :
IF $AC_ACTUAL_PARTS == 0 GOTOF NEW_RUN
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_SPECIAL_PARTS</name>
<brief>Zahl vom  Anwender gezählter Werkstücke</brief>
<description>Der Zähler $AC_SPECIAL_PARTS erlaubt dem Anwender eine Werkstück-Zählung nach eigener Strategie.

Über das Kanal-MD 27880 $MC_PART_COUNTER wird der Timer aktiviert:
Bit 12 = 1: Zähler $AC_SPECIAL_PARTS ist aktiv

Weitere Bedeutung Bit 13-15 nur bei Bit12 = 1:
Bit 13 = 0: Zähler $AC_SPECIAL_PARTS wird bei einer VDI-Ausgabe von M02/M30 um den Wert 1 erhöht
Bit 13 = 1: Zähler $AC_SPECIAL_PARTS wird bei Ausgabe des M-Befehls aus dem MD PART_COUNTER_MCODE[2] um den Wert 1 erhöht
Bit 14 = 0: $AC_SPECIAL_PARTS auch bei Programm-Test/Satzsuchlauf aktiv
Bit 14 = 1: Keine Bearbeitung $AC_SPECIAL_PARTS bei Programm-Test/Satzsuchlauf

Anwendung im NC-Programm:
$AC_SPECIAL_PARTS = R20
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_G0MODE</name>
<brief>Bahn-Verfahren bei G0</brief>
<description>0: G0 nicht aktiv
1: G0 und Lineare Interpolation aktiv
2: G0 und Nicht-Lineare Interpolation aktiv.
Das Verhalten der Bahnachsen bei G0 ist vom Maschinendatum $MC_G0_LINEAR_MODE (Siemens-Mode) bzw. $MC_EXTERN_G0_LINEAR_MODE (ISO-Mode) abhängig:
- bei Linearer Interpolation verfahren die Bahnachsen gemeinsam,
- bei Nicht-Linearer Interpolation werden die Bahnachsen als Positionierachsen verfahren.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_SEMA</name>
<brief>Semaphore zum Messinterface</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_SEMA dient zur Synchronisation der Messvorgänge. Vor jeder Belegung des Messinterfaces, sollte die Variable auf den Wert 1 und bei der Freigabe auf den Wert 0 gesetzt werden. Das Messinterface gibt es pro Kanal nur einmal und darf nur belegt werden, wenn die Variable $AC_MEAS_SEMA den Wert 0 hat.

Anwendung:
if ($AC_MEAS_SEMA == 0)
   $AC_MEAS_SEMA = 1 ; Messinterface belegen.
endif
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_LATCH</name>
<brief>Messpunkte erfassen</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die axiale Variable $AA_MEAS_LATCH[n] dient zum Erfassen aller aktuellen Achspositionen bezüglich eines ausgewählten Koordinatensystems. Die Auswahl des Koordinatensystems erfolgt über die Variable $AC_MEAS_P1_COORD .. $AC_MEAS_P4_COORD.

Anwendung:
$AA_MEAS_LATCH[0] = 1  ; 1. Messpunkt aller Achsen erfassen
$AA_MEAS_LATCH[1] = 1  ; 2. Messpunkt aller Achsen erfassen
$AA_MEAS_LATCH[2] = 1  ; 3. Messpunkt aller Achsen erfassen
$AA_MEAS_LATCH[3] = 1  ; 4. Messpunkt aller Achsen erfassen
Der erfasste Messpunkt wird in $AA_MEAS_POINT1[&lt;Achse&gt;] gespeichert.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_P1_COORD</name>
<brief>Koordinatensystem 1. Messpunkt</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_P1_COORD dient für die Festlegung des Koordinatensystems für den 1. Messpunkt.

Anwendung:
$AC_MEAS_P1_COORD = 0 ; WKS
$AC_MEAS_P1_COORD = 1 ; BKS
$AC_MEAS_P1_COORD = 2 ; MKS
$AC_MEAS_P1_COORD = 3 ; ENS
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_P2_COORD</name>
<brief>Koordinatensystem 2. Messpunkt</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_P2_COORD dient für die Festlegung des Koordinatensystems für den 2. Messpunkt.

Anwendung:
$AC_MEAS_P2_COORD = 0 ; WKS
$AC_MEAS_P2_COORD = 1 ; BKS
$AC_MEAS_P2_COORD = 2 ; MKS
$AC_MEAS_P2_COORD = 3 ; ENS
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_P3_COORD</name>
<brief>Koordinatensystem 3. Messpunkt</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_P3_COORD dient für die Festlegung des Koordinatensystems für den 3. Messpunkt.

Anwendung:
$AC_MEAS_P3_COORD = 0 ; WKS
$AC_MEAS_P3_COORD = 1 ; BKS
$AC_MEAS_P3_COORD = 2 ; MKS
$AC_MEAS_P3_COORD = 3 ; ENS
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_P4_COORD</name>
<brief>Koordinatensystem 4. Messpunkt</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_P4_COORD dient für die Festlegung des Koordinatensystems für den 4. Messpunkt.

Anwendung:
$AC_MEAS_P4_COORD = 0 ; WKS
$AC_MEAS_P4_COORD = 1 ; BKS
$AC_MEAS_P4_COORD = 2 ; MKS
$AC_MEAS_P4_COORD = 3 ; ENS
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_SET_COORD</name>
<brief>Koordinatensystem der Sollposition</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_SET_COORD dient für die Festlegung des Koordinatensystems für die Sollposition.

Anwendung:
$AC_MEAS_SET_COORD = 0 ; WKS
$AC_MEAS_SET_COORD = 1 ; BKS
$AC_MEAS_SET_COORD = 2 ; MKS
$AC_MEAS_SET_COORD = 3 ; ENS
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_MEAS_WP_SETANGLE</name>
<brief>Sollwinkel Werkstücklage</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_WP_SETANGLE dient zur Vorgabe eines Sollwinkels für die Werkstücklage.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_MEAS_CORNER_SETANGLE</name>
<brief>Soll-Schnittwinkel der Werkstückecke</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_CORNER_SETANGLE dient zur Vorgabe eines Sollwinkels für die Ecke eines Werkstückes.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_DIR_APPROACH</name>
<brief>Anfahrrichtung an das Werkstück</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_DIR_APPROACH dient zur Vorgabe der Anfahrrichtung an das Werkstück.

Folgende Werte sind möglich:
0:+x
1:-x
2:+y
3:-y
4:+z
5:-z
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_ACT_PLANE</name>
<brief>Arbeitsebene zur Werkstückes</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_ACT_PLANE dient zur Vorgabe der Arbeitsebene. Die Arbeitsebene wird für die Festlegung der Werkzeugorientierung benötigt.

Folgende Werte sind möglich:
0: G17 Arbeitsebene x/y Zustellrichtung z
1: G18 Arbeitsebene z/x Zustellrichtung y
2: G19 Arbeitsebene y/z Zustellrichtung x
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_FINE_TRANS</name>
<brief>Feinverschiebungskorrektur</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Beim Vermessen von Werkstücken können translatorische Verschiebungen im Feinverschiebungsanteil des ausgewählten Frames einige tragen werden. Dazu dient die Variable $AC_MEAS_FINE_TRANS.

Folgende Werte sind möglich:
0: Translatorische Korrektur wird in die Grobverschiebung eingetragen
1: Translatorische Korrektur wird in die Feinverschiebung eingetragen
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_FRAME_SELECT</name>
<brief>Frameauswahl bei der Werkstückvermessung</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_FRAME_SELECT dient zur Auswahl des Frames, in dem das berechnete Frame eingetragen wird.

Es sind folgende Werte möglich:
0:           $P_SETFRAME
1:           $P_PARTFRAME
2:           $P_EXTFRAME
10..25:      $P_CHBFRAME[0..15]
50..65:      $P_NCBFRAME[0..15]
100..199:    $P_IFRAME
500:         $P_TOOLFRAME
501:         $P_WPFRAME
502:         $P_TRAFRAME
503:         $P_PFRAME
504:         $P_CYCFRAME
505:         $P_RELFRAME (PCS)
506:         $P_RELFRAME (ACS)
1010..1025:  $P_CHBFRAME[0..15], bei aktiven G500
1050..1065:  $P_NCBFRAME[0..15], bei aktiven G500
2000:        $P_SETFR
2001:        $P_PARTFR
2002:        $P_EXTFR
2010..2025:  $P_CHBFR[0..15]
2050..2065:  $P_NCBFR[0..15]
2100..2199:  $P_UIFR[0..99]
2500:        $P_TOOLFR
2501:        $P_WPFR
2502:        $P_TRAFR
2504:        $P_CYCFR
2505:        $P_RELFR (PCS)
2506:        $P_RELFR (ACS)
3010..3025:  $P_CHBFR[0..15], bei aktiven G500
3050..3065:  $P_NCBFR[0..15], bei aktiven G500
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_CHSFR</name>
<brief>Frameauswahl für Systemframes</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Für die Umrechnung einer Position in eine Position eines anderen Koordinatensystems kann mit Hilfe der Variablen $AC_MEAS_CHSFR die Zusammensetzung der gewünschten Framekette vorgegeben werden. Der Wert der Variable ist entsprechend der Systemframe-Bitmaske $MC_MM_SYSTEM_FRAME_MASK zu wählen.

Anwendung:
$AC_MEAS_CHSFR = 'B1001'
Es werden nur die Systemframes für Istwertsetzen und TOROT mit in die Berechnung des neuen Gesamtframes mit einbezogen.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_NCBFR</name>
<brief>Frameauswahl für globale Basisframes</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Für die Umrechnung einer Position in eine Position eines anderen Koordinatensystems kann mit Hilfe der Variablen $AC_MEAS_NCBFR die Zusammensetzung der gewünschten Framekette vorgegeben werden. Der Wert der Variable ist als Bitmaske von 0x0 bis 0xFFFF für bis zum 16 globale Basisframes zu interpretieren.

Anwendung:
$AC_MEAS_NCBFR = 'B11'
Es werden nur die ersten zwei globalen Basisframes mit in die Berechnung des neuen Gesamtframes einbezogen.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_CHBFR</name>
<brief>Frameauswahl für Kanal-Basisframes</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Für die Umrechnung einer Position in eine Position eines anderen Koordinatensystems kann mit Hilfe der Variablen $AC_MEAS_CHBFR die Zusammensetzung der gewünschten Framekette vorgegeben werden. Der Wert der Variable ist als Bitmaske von 0x0 bis 0xFFFF für bis zum 16 Kanal-Basisframes zu interpretieren.

Anwendung:
$AC_MEAS_CHBFR = 'B11'
Es werden nur die ersten zwei Kanal-Basisframes mit in die Berechnung des neuen Gesamtframes einbezogen.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_UIFR</name>
<brief>Frameauswahl für einstellbare Frames</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Für die Umrechnung einer Position in eine Position eines anderen Koordinatensystems kann mit Hilfe der Variablen $AC_MEAS_UIFR die Zusammensetzung der gewünschten Framekette vorgegeben werden. Der Wert der Variable reicht von 0 bis 99 für die bis zu 100 einstellbaren Frames.

Anwendung:
$AC_MEAS_UIFR = 1
Es wird das G54-Frame mit in die Berechnung des neuen Gesamtframes einbezogen.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_PFRAME</name>
<brief>Frameauswahl für das prog. Frame</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Für die Umrechnung einer Position in eine Position eines anderen Koordinatensystems kann mit Hilfe der Variablen $AC_MEAS_PFRAME die Zusammensetzung der gewünschten Framekette vorgegeben werden.

Folgende Werte sind zulässig:
$AC_MEAS_PFRAME = 1 ; Programmierbares Frame wird nicht eingerechnet
$AC_MEAS_PFRAME = 0 ; Programmierbares Frame wird eingerechnet
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_T_NUMBER</name>
<brief>Werkzeugauswahl</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_T_NUMBER dient zur Auswahl des Werkzeugs bei der Werkstück- und Werkzeugvermessung. Die Werkzeugnummer des aktiven Werkzeugs muss mit dem Ausgewählten übereinstimmen. Die Auswahl von T0 wird das aktive Werkzeug eingerechnet. Ist kein Werkzeug angewählt, so wird das durch $AC_MEAS_T_NUMBER ausgewählte Werkzeug eingerechnet.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_TOOL_MASK</name>
<brief>Werkzeuglage</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_TOOL_MASK spezifiziert die Werkzeuglage und die Berücksichtigung der Werkzeuglängen für die Werkstück- und Werkzeugvermessung.

Es sind folgende Werte möglich:
0x0:     Standardeinstellung; alle Werkzeuglängen werden berücksichtigt
0x1:     Radius des Werkzeugs geht nicht in die Berechnung ein
0x2:     Werkzeuglage ist in x-Richtung (G19)
0x4:     Werkzeuglage ist in y-Richtung (G18)
0x8:     Werkzeuglage ist in z-Richtung (G17)
0x10:    Länge des Werkzeugs geht nicht in die Berechnung ein.
0x20:    Länge des aktiven Werkzeugs geht bei der Koordinatentransformation einer Position mit ein.
0x40:    Werkzeuglage ist in -x - Richtung (G19)
0x80:    Werkzeuglage ist in -y - Richtung (G18)
0x100:   Werkzeuglage ist in -z - Richtung (G17)
0x200:   Differenzen der Werkzeuglängen werden negativ eingerechnet.
Aus der Werkzeuglage und der Anfahrrichtung ergibt sich, ob der Radius eines Fräsers mit in die Berechnung eingeht. Wird die Anfahrrichtung nicht explizit vorgegeben, so ergibt sie sich aus der ausgewählten Ebene. Bei G17 ist die Anfahrrichtung in -z, bei G18 -y und bei G19 -x.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_D_NUMBER</name>
<brief>Schneidenauswahl</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_D_NUMBER dient zur Auswahl der Werkzeugschneide bei der Werkstück- und Werkzeugvermessung. Die Werkzeugscheidennummer des aktiven Werkzeugs muss mit der ausgewählten Schneide übereinstimmen. Die Auswahl von D0 wird die aktive Schneide eingerechnet. Ist kein Werkzeug angewählt, so wird die durch $AC_MEAS_D_NUMBER ausgewählte Schneide eingerechnet.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_TYPE</name>
<brief>Auswahl Messtyp</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_TYPE dient zur Auswahl der Art der Messung.

Es sind folgende Werte möglich:
0:      Vorbesetzung
1:      x-Kante
2:      y-Kante
3:      z-Kante
4:      Ecke 1
5:      Ecke 2
6:      Ecke 3
7:      Ecke 4
8:      Bohrung
9:      Welle
10:     Werkzeuglänge
11:     Werkzeugdurchmesser
12:     Nut
13:     Steg
14:     Istwertsetzen für Geo- und Zusatzachsen
15:     Istwertsetzen nur für Zusatzachsen
16:     Schräge Kante
17:     Plane_Angles (2 Raumwinkel einer Ebene)
18:     Plane_Normal (3 Raumwinkel einer Ebene mit Sollwertvorgabe)
19:     Dimension_1 (1-dimensionale Sollwertvorgabe)
20:     Dimension_2 (2-dimensionale Sollwertvorgabe)
21:     Dimension_3 (3-dimensionale Sollwertvorgabe)
22:     ToolMagnifier (ShopTurn: Messen von Werkzeuglängen mit Lupe)
23:     ToolMarkedPos (ShopTurn: Messen einer Werkzeuglänge mit gemerkter Position)
24:     Koordinatentransformation einer Position
25:     Rechteck
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_VALID</name>
<brief>Gültigkeitsbits der Messvariablen.</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_VALID dient zur Festlegung, welche Systemvariablen für die aktuelle Messung gültig sind. Vor jedem Messvorgang sollte der Wert auf 0 gesetzt werden. Die einzelnen Bits werden implizit beim Beschreiben der entsprechenden Variablen gesetzt.
Bit 0:   $AA_MEAS_POINT1[&lt;Achse&gt;]
Bit 1:   $AA_MEAS_POINT2[&lt;Achse&gt;]
Bit 2:   $AA_MEAS_POINT3[&lt;Achse&gt;]
Bit 3:   $AA_MEAS_POINT4[&lt;Achse&gt;]
Bit 4:   $AA_MEAS_SETPOINT[&lt;Achse&gt;]
Bit 5:   $AC_MEAS_WP_SETANGLE
Bit 6:   $AC_MEAS_CORNER_SETANGLE
Bit 7:   $AC_MEAS_T_NUMBER
Bit 8:   $AC_MEAS_D_NUMBER
Bit 9:   $AC_MEAS_DIR_APPROACH
Bit 10:  $AC_MEAS_ACT_PLANE
Bit 11:  $AC_MEAS_FRAME_SELECT
Bit 12:  $AC_MEAS_TYPE
Bit 13:  $AC_MEAS_FINE_TRANS
Bit 14:  $AA_MEAS_SETANGLE[&lt;Achse&gt;]
Bit 15:  $AC_MEAS_SCALEUNIT
Bit 16:  $AC_MEAS_TOOL_MASK
Bit 17:  $AC_MEAS_P1_COORD
Bit 18:  $AC_MEAS_P2_COORD
Bit 19:  $AC_MEAS_P3_COORD
Bit 20:  $AC_MEAS_P4_COORD
Bit 21:  $AC_MEAS_SET_COORD
Bit 22:  $AC_MEAS_CHSFR
Bit 23:  $AC_MEAS_NCBFR
Bit 24:  $AC_MEAS_CHBFR
Bit 25:  $AC_MEAS_UIFR
Bit 26:  $AC_MEAS_PFRAME
Bit 27:  $AC_MEAS_INPUT
Bit 28:  $AC_MEAS_GFR
Bit 29:  $AC_MEAS_ORIWKS
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$AC_MEAS_FRAME</name>
<brief>Ergebnisframe für die Werkstückvermessung</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_FRAME ist das Ergebnisframe für die Werkstückvermessung. Dieses Frame wird durch die Funktion MEASURE() oder durch einen PI-Dienst errechnet und ist kein Bestandteil der aktiven Framekette. Das errechnete Ergebnisframe kann anschließend über das Teileprogramm oder über einen weiteren PI-Dienst in das ausgewählte Frame ($AC_MEAS_FRAME_SELECT) kopiert werden.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_MEAS_WP_ANGLE</name>
<brief>Werkstücklagewinkel</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_WP_ANGLE ist der berechnete Werkstücklage-Winkel bei der Werkstückvermessung. Der Wert gibt die relative Lage des Werkstücks im Werkstückkoordinatensystem (WKS) an.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_MEAS_CORNER_ANGLE</name>
<brief>Winkel einer Ecke</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_CORNER_ANGLE ist der berechnete Schnittwinkel der Ecke bei der Werkstückvermessung.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_MEAS_DIAMETER</name>
<brief>Werkzeugdurchmesser</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_DIAMETER ist der berechnete Durchmesser bei der Werkzeugvermessung.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_MEAS_TOOL_LENGTH</name>
<brief>Werkzeuglänge</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_TOOL_LENGTH ist die berechnete Werkzeuglänge bei der Werkzeugvermessung.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_MEAS_RESULTS</name>
<brief>Messergebnisse</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Feld-Variable $AC_MEAS_RESULTS[n] beinhaltet die Rechenergebnisse. Welche Feldelemente beschrieben werden ist vom Messtyp ($AC_MEAS_TYPE) abhängig.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_SCALEUNIT</name>
<brief>Maßeinheit</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Variable $AC_MEAS_SCALEUNIT legt die Maßeinheit entsprechend der Projektierung für die Ein- und Ausgangswerte fest.

Es sind folgende Werte möglich:
0: Maßeinheit ist bzgl. des aktiven G-Codes INCH: G70/G700 METRISCH: G71/G710
1: Maßeinheit entsprechend der Projektierung (Standardeinstellung)
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_CHANNO</name>
<brief>noch zu  definieren</brief>
<description>Abfrage der aktuellen Kanalnummer.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_SERUPRO</name>
<brief>Suchlauf-Typ Serupro aktiv</brief>
<description>Abfrage, ob der Suchlauf-Typ Serupro aktiv ist. (Serupro: "Suchlauf via Programmtest")

Verwendung in Synchronaktionen und im Teileprogramm ist möglich
$AC_SERUPRO ==  0 Suchlauf Typ Serupro ist nicht aktiv
$AC_SERUPRO ==  1 Suchlauf Typ Serupro ist aktiv
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_VACTBF</name>
<brief>Bahngeschwindigkeit im BKS</brief>
<description>$AC_VACTBF liefert die Bahngeschwindigkeit im Basiskoordinatensystem. Es wird dabei FGroup und FGREF berücksichtigt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_VACTWF</name>
<brief>Bahngeschwindigkeit im WKS</brief>
<description>Bahngeschwindigkeit im Werkstückkoordinatensystem.Es wird dabei FGROUP und FGREF berücksichtigt.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR0</name>
<brief>Zugriff auf 1. Kanal-Basisframe</brief>
<description>Zugriff auf 1. Kanal-Basisframe. Entspricht $P_CHBFR[0].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR1</name>
<brief>Zugriff auf 2. Kanal-Basisframe</brief>
<description>Zugriff auf 2. Kanal-Basisframe. Entspricht $P_CHBFR[1].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR2</name>
<brief>Zugriff auf 3. Kanal-Basisframe</brief>
<description>Zugriff auf 3. Kanal-Basisframe. Entspricht $P_CHBFR[2].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR3</name>
<brief>Zugriff auf 4. Kanal-Basisframe</brief>
<description>Zugriff auf 4. Kanal-Basisframe. Entspricht $P_CHBFR[3].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR4</name>
<brief>Zugriff auf 5. Kanal-Basisframe</brief>
<description>Zugriff auf 5. Kanal-Basisframe. Entspricht $P_CHBFR[4].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR5</name>
<brief>Zugriff auf 6. Kanal-Basisframe</brief>
<description>Zugriff auf 6. Kanal-Basisframe. Entspricht $P_CHBFR[5].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR6</name>
<brief>Zugriff auf 7. Kanal-Basisframe</brief>
<description>Zugriff auf 7. Kanal-Basisframe. Entspricht $P_CHBFR[6].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR7</name>
<brief>Zugriff auf 8. Kanal-Basisframe</brief>
<description>Zugriff auf 8. Kanal-Basisframe. Entspricht $P_CHBFR[7].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR8</name>
<brief>Zugriff auf 9. Kanal-Basisframe</brief>
<description>Zugriff auf 9. Kanal-Basisframe. Entspricht $P_CHBFR[8].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR9</name>
<brief>Zugriff auf 10. Kanal-Basisframe</brief>
<description>Zugriff auf 10. Kanal-Basisframe. Entspricht $P_CHBFR[9].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR10</name>
<brief>Zugriff auf 11. Kanal-Basisframe</brief>
<description>Zugriff auf 11. Kanal-Basisframe. Entspricht $P_CHBFR[10].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR11</name>
<brief>Zugriff auf 12. Kanal-Basisframe</brief>
<description>Zugriff auf 12. Kanal-Basisframe. Entspricht $P_CHBFR[11].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR12</name>
<brief>Zugriff auf 13. Kanal-Basisframe</brief>
<description>Zugriff auf 13. Kanal-Basisframe. Entspricht $P_CHBFR[12].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR13</name>
<brief>Zugriff auf 14. Kanal-Basisframe</brief>
<description>Zugriff auf 14. Kanal-Basisframe. Entspricht $P_CHBFR[13].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR14</name>
<brief>Zugriff auf 15. Kanal-Basisframe</brief>
<description>Zugriff auf 15. Kanal-Basisframe. Entspricht $P_CHBFR[14].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFR15</name>
<brief>Zugriff auf 16. Kanal-Basisframe</brief>
<description>Zugriff auf 16. Kanal-Basisframe. Entspricht $P_CHBFR[15].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR0</name>
<brief>Zugriff auf 1. NCU-globales Basisframe</brief>
<description>Zugriff auf 1. NCU-globales Basisframe. Entspricht $P_NCBFR[0].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR1</name>
<brief>Zugriff auf 2. NCU-globales Basisframe</brief>
<description>Zugriff auf 2. NCU-globales Basisframe. Entspricht $P_NCBFR[1].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR2</name>
<brief>Zugriff auf 3. NCU-globales Basisframe</brief>
<description>Zugriff auf 3. NCU-globales Basisframe. Entspricht $P_NCBFR[2].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR3</name>
<brief>Zugriff auf 4. NCU-globales Basisframe</brief>
<description>Zugriff auf 4. NCU-globales Basisframe. Entspricht $P_NCBFR[3].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR4</name>
<brief>Zugriff auf 5. NCU-globales Basisframe</brief>
<description>Zugriff auf 5. NCU-globales Basisframe. Entspricht $P_NCBFR[4].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR5</name>
<brief>Zugriff auf 6. NCU-globales Basisframe</brief>
<description>Zugriff auf 6. NCU-globales Basisframe. Entspricht $P_NCBFR[5].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR6</name>
<brief>Zugriff auf 7. NCU-globales Basisframe</brief>
<description>Zugriff auf 7. NCU-globales Basisframe. Entspricht $P_NCBFR[6].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR7</name>
<brief>Zugriff auf 8. NCU-globales Basisframe</brief>
<description>Zugriff auf 8. NCU-globales Basisframe. Entspricht $P_NCBFR[7].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR8</name>
<brief>Zugriff auf 9. NCU-globales Basisframe</brief>
<description>Zugriff auf 9. NCU-globales Basisframe. Entspricht $P_NCBFR[8].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR9</name>
<brief>Zugriff auf 10. NCU-globales Basisframe</brief>
<description>Zugriff auf 10. NCU-globales Basisframe. Entspricht $P_NCBFR[9].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR10</name>
<brief>Zugriff auf 11. NCU-globales Basisframe</brief>
<description>Zugriff auf 11. NCU-globales Basisframe. Entspricht $P_NCBFR[10].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR11</name>
<brief>Zugriff auf 12. NCU-globales Basisframe</brief>
<description>Zugriff auf 12. NCU-globales Basisframe. Entspricht $P_NCBFR[11].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR12</name>
<brief>Zugriff auf 13. NCU-globales Basisframe</brief>
<description>Zugriff auf 13. NCU-globales Basisframe. Entspricht $P_NCBFR[12].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR13</name>
<brief>Zugriff auf 14. NCU-globales Basisframe</brief>
<description>Zugriff auf 14. NCU-globales Basisframe. Entspricht $P_NCBFR[13].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR14</name>
<brief>Zugriff auf 15. NCU-globales Basisframe</brief>
<description>Zugriff auf 15. NCU-globales Basisframe. Entspricht $P_NCBFR[14].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFR15</name>
<brief>Zugriff auf 16. NCU-globales Basisframe</brief>
<description>Zugriff auf 16. NCU-globales Basisframe. Entspricht $P_NCBFR[15].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME0</name>
<brief>Zugriff auf 1. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 1. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[0].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME1</name>
<brief>Zugriff auf 2. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 2. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[1].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME2</name>
<brief>Zugriff auf 3. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 3. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[2].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME3</name>
<brief>Zugriff auf 4. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 4. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[3].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME4</name>
<brief>Zugriff auf 5. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 5. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[4].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME5</name>
<brief>Zugriff auf 6. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 6. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[5].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME6</name>
<brief>Zugriff auf 7. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 7. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[6].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME7</name>
<brief>Zugriff auf 8. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 8. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[7].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME8</name>
<brief>Zugriff auf 9. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 9. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[8].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME9</name>
<brief>Zugriff auf 10. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 10. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[9].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME10</name>
<brief>Zugriff auf 11. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 11. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[10].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME11</name>
<brief>Zugriff auf 12. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 12. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[11].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME12</name>
<brief>Zugriff auf 13. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 13. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[12].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME13</name>
<brief>Zugriff auf 14. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 14. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[13].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME14</name>
<brief>Zugriff auf 15. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 15. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[14].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CHBFRAME15</name>
<brief>Zugriff auf 16. aktuelles Kanal-Basisframe</brief>
<description>Zugriff auf 16. aktuelles Kanal-Basisframe. Entspricht $P_CHBFRAME[15].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME0</name>
<brief>1. aktuelles NCU-globales Basisframe</brief>
<description>Zugriff auf 1. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[0].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME1</name>
<brief>2. aktuelles NCU-globales Basisframe</brief>
<description>Zugriff auf 2. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[1].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME2</name>
<brief>3. aktuelles NCU-globales Basisframe</brief>
<description>Zugriff auf 3. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[2].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME3</name>
<brief>4. aktuelles NCU-globales Basisframe</brief>
<description>Zugriff auf 4. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[3].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME4</name>
<brief>5. aktuelles NCU-globales Basisframe</brief>
<description>Zugriff auf 5. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[4].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME5</name>
<brief>6. aktuelles NCU-globales Basisframe</brief>
<description>Zugriff auf 6. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[5].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME6</name>
<brief>7. aktuelles NCU-globales Basisframe</brief>
<description>Zugriff auf 7. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[6].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME7</name>
<brief>8. aktuelles NCU-globales Basisframe</brief>
<description>Zugriff auf 8. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[7].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME8</name>
<brief>9. aktuelles NCU-globales Basisframe</brief>
<description>Zugriff auf 9. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[8].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME9</name>
<brief>10. aktuelles NCU-globales Basisframe</brief>
<description>Zugriff auf 10. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[9].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME10</name>
<brief>11. aktuelles NCU-globales Basisframe</brief>
<description>Zugriff auf 11. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[10].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME11</name>
<brief>12. aktuelles NCU-globales Basisframe</brief>
<description>Zugriff auf 12. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[11].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME12</name>
<brief>13. aktuelles NCU-globales Basisframe</brief>
<description>Zugriff auf 13. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[12].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME13</name>
<brief>14. aktuelles NCU-globales Basisframe</brief>
<description>Zugriff auf 14. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[13].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME14</name>
<brief>15. aktuelles NCU-globales Basisframe</brief>
<description>Zugriff auf 15. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[14].
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_NCBFRAME15</name>
<brief>16. aktuelles NCU-globales Basisframe</brief>
<description>16. aktuelles NCU-globales Basisframe. Entspricht $P_NCBFRAME[15].
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_TRAFO_CHAIN</name>
<brief>programmierte verkettete Transformation</brief>
<description>$P_TRAFO_CHAIN[n]
Codenummern der verketteten Transformationen der programmierten TRACON entsprechend Maschinendatum $MC_TRAFO_TYPE_m.

Liefert die Codenummer der n-ten verketteten Transformation der programmierten TRACON, beginnend mit n=0.
$P_TRAFO_CHAIN[0] ist die 1. verkettete Transformation, wenn eine TRACON programmiert ist. Ist keine TRACON programmiert, so wird die Codenummer der programmierten Transformation geliefert (z.B. 257 für TRANSMIT). Ist keine Transformation programmiert, so wird 0 zurückgegeben.
$P_TRAFO_CHAIN[1] ist die 2. verkettete Transformation, wenn eine TRACON programmiert ist. Andernfalls wird 0 zurückgegeben.
Für $P_TRAFO_CHAIN[2] und $P_TRAFO_CHAIN[3] gilt Entsprechendes.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_TRAFO_CHAIN</name>
<brief>aktive verkettete Transformation</brief>
<description>$AC_TRAFO_CHAIN[n]
Codenummern der verketteten Transformationen der aktiven TRACON entsprechend Maschinendatum $MC_TRAFO_TYPE_m.

Liefert die Codenummer der n-ten verketteten Transformation der aktiven TRACON, beginnend mit n=0.
$AC_TRAFO_CHAIN[0] ist die 1. verkettete Transformation, wenn eine TRACON programmiert ist. Ist keine TRACON aktiv, so wird die Codenummer der programmierten Transformation geliefert (z.B. 257 für TRANSMIT). Ist keine Transformation aktiv, so wird 0 zurückgegeben.
$AC_TRAFO_CHAIN[1] ist die 2. verkettete Transformation, wenn eine TRACON aktiv ist. Andernfalls wird 0 zurückgegeben.
Für $AC_TRAFO_CHAIN[2] und $AC_TRAFO_CHAIN[3] gilt Entsprechendes.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_MEAS_INPUT</name>
<brief>Messeingangsparameter</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die Feld-Variable $AC_MEAS_INPUT[n] dient zur Eingabe von Messeingangsparametern für die Werkstück- und Werkzeugvermessung.
Die Steuerungswirkung der Parameter ist in den Messvarianten dokumentiert.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DBSB</name>
<brief>PLC Datenbyte (vorzeichenbehaftet)</brief>
<description>Die Feldvariable $A_DBSB[n] dient zum Lesen und Schreiben eines Datenbytes (8Bit) von PLC. Das Byte ist vorzeichenbehaftet und kann im Bereich von -128 bis 127 gelesen und geschrieben werden. Für den schnellen Austausch von Informationen zwischen PLC und NC wird in dem Koppelspeicher dieser Baugruppen (DPR) ein Speicherbereich reserviert. Auf diesen Speicher wird von der PLC wird mit FunctionCalls(FC), von NCK mit $-Variablen zugegriffen.
Siehe auch $A_DBB[n].
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DBSW</name>
<brief>PLC Datenwort (vorzeichenbehaftet)</brief>
<description>Die Feldvariable $A_DBSW[n] dient zum Lesen und Schreiben eines Datenwortes (16Bit) von PLC. Das Word ist vorzeichenbehaftet und kann im Bereich von -32768 bis 32767 gelesen und geschrieben werden. Für den schnellen Austausch von Informationen zwischen PLC und NC wird in dem Koppelspeicher dieser Baugruppen (DPR) ein Speicherbereich reserviert. Auf diesen Speicher wird von der PLC wird mit FunctionCalls(FC), von NCK mit $-Variablen zugegriffen.
Siehe auch $A_DBW[n].
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_SUB_AXFCT</name>
<brief>Substituierung aktiv</brief>
<description>Liefert eine Bitmaske entsprechend dem Maschinendatum $MA_AXIS_LANG_SUB_MASK. Ein gesetztes Bit bedeutet, dass die Substitution der entsprechenden Funktion aktiv ist:
Bit 0 = 1 :  Getriebestufenwechsel automatisch (M40) und direkt (M41-M45)
Bit 1 = 1 :  Spindelpositionieren mit SPOS/SPOSA/M19
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_SUB_GEAR</name>
<brief>programmierte Getriebestufe</brief>
<description>Liefert im Substitutionsunterprogramm einer mit $MA_AXIS_LANG_SUB_MASK projektierten NC-Sprach-Substitution die programmierte bzw. errechneten Getriebestufe. Außerhalb des Substitutionsunterprogramms liefert die Variable die Getriebestufe der Masterspindel.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_SUB_AUTOGEAR</name>
<brief>automatischer Getriebestufenwechsel aktiv</brief>
<description>Liefert im Substitutionsunterprogramm einer mit $MA_AXIS_LANG_SUB_MASK projektierten NC-Sprach-Substitution die Information, ob in der Teileprogrammzeile, die den Substitutionsvorgang ausgelöst hat, automatischer Getriebestufenwechsel aktiv war (M40).
Außerhalb des Substitutionsvorgang liefert die Variable die im Interpreter aktuelle Einstellung.
</description>
</parameter>

<parameter type="AXIS" dim="0">
<name>$P_SUB_LA</name>
<brief>Leitspindel der aktiven Kopplung</brief>
<description>Liefert im Substitutionsunterprogramm einer mit $MA_AXIS_LANG_SUB_MASK projektierten NC-Sprach-Substitution den Achsbezeichner der Leitspindel der aktiven Kopplung, die den Substitutionsvorgang ausgelöst hat.
Außerhalb des Substitutionsvorgang bricht die Variable die Programmbearbeitung mit Korrektursatzalarm ab.
</description>
</parameter>

<parameter type="AXIS" dim="0">
<name>$P_SUB_CA</name>
<brief>Folgespindel der aktiven Kopplung</brief>
<description>Liefert im Substitutionsunterprogramm einer mit $MA_AXIS_LANG_SUB_MASK projektierten NC-Sprach-Substitution den Achsbezeichner der Folgespindel der aktiven Kopplung, die den Substitutionsvorgang ausgelöst hat.
Außerhalb des Substitutionsvorgang bricht die Variable die Programmbearbeitung mit Korrektursatzalarm ab.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$P_BLOCKNO</name>
<brief>Modale Satznummer ebenenspezifisch</brief>
<description>Die Variable $P_BLOCKNO[n] liefert die letzte programmierte Satznummer der Programmebene n.

Beispiel:
$P_BLOCKNO[0]

Liefert die modale Satznummer des Programms in der Programmebene 0 = Hauptprogrammname.
Es muss das MD 10284 $MN_DISPLAY_FUNCTION_MASKBit0 = 1 sein.
Satznummern die während DISPLOF programmiert werden, können mit $P_BLOCKNO nicht gelesen werden.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_LINENO</name>
<brief>Zeilennummer ebenenspezifisch</brief>
<description>Die Variable $P_LINENO[n] liefert die letzte Zeilennummer der Programmebene n.

Beispiel:
$P_LINENO[0]

Liefert die Zeilennummer des Programms in der Programmebene 0 = Hauptprogrammebene.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_AUTO_JOG_STATE</name>
<brief>Status Jog in Auto</brief>
<description>1: Automatik ist angewählt, $MN_JOG_MODE_MASK ist gesetzt und die BAG ist in "BAG-Reset".
   Damit kann durch drücken der +/- Tasten oder Handrad in Auto gejoggt werden.
2: Diese BAG wurde wg. einer JOG-Bewegung intern nach JOG geschaltet.
   VDI und BTSS zeigen noch Automatik an.
0: sonst.

Bemerkung:
Es ist eine BAG-weite Information, die jedem Kanal der BAG via $AC_AUTO_JOG_STATE zur Verfügung steht.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_FIFO</name>
<brief>FIFO-Stack</brief>
<description>Die Variable $AC_FIFO[n,m] dient dem Zugriff auf den n-ten First In- First Out-Stack. Siehe auch $AC_FIFO1 .. $AC_FIFO10.
Über $MC_NUM_AC_FIFO legt man den Wertebereich von n und somit die Anzahl der FIFO-Stacks $AC_FIFO1 - $AC_FIFO10 fest.
Die Elemente des Stapelspeichers werden in R-Parametern gespeichert. Die Länge aller FIFO-Stacks wird mit $MC_LEN_AC_FIFO projektiert.
Über $MC_START_AC_FIFO gibt man die Nummer des R-Parameters an, ab dem die FIFO-Elemente gespeichert werden.
R-Parameter die FIFO-Bereiche zugeordnet sind, sollten nicht anderweitig beschrieben werden.
Die Anzahl der R-Parameter muss über das Maschinendatum $MC_MM_NUM_R_PARAM so eingestellt werden, dass alle FIFO-Variable untergebracht werden können:
$MC_MM_NUM_R_PARAM = $MC_MM_START_FIFO + $MC_NUM_AC_FIFO * ($MC_LEN_AC_FIFO + 6)
Die FIFO-Variable ist eine Feldvariable.
Die Indizes 0 - 5 haben Sonderbedeutungen:
m=0: Beim Schreiben mit Index 0 wird ein neuer Wert in den FIFO abgelegt.
     Beim Lesen mit Index 0 wird das älteste Element gelesen und aus dem FIFO entfernt.
m=1: Zugriff auf das zuerst eingelesene Element
m=2: Zugriff auf das zuletzt eingelesene Element
m=3: Summe aller FIFO-Elemente, wenn Bit0 in $MC_MM_MODE_FIFO gesetzt ist.
m=4: Anzahl der im FIFO verfügbaren Elemente
m=5: aktueller Schreibindex relativ zum FIFO-Beginn
m=6: ältestes Element
m=7: zweitälteste etc.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_AUXFU_M_VALUE</name>
<brief>Wert der aktiven M-Hilfsfunktion</brief>
<description>Die Feldvariable $AC_AUXFU_M_VALUE[n] dient zum Lesen des Wertes der zuletzt für eine Hilfsfunktionsgruppe aufgesammelten (Such lauf) oder ausgegebenen M-Hilfsfunktion. Hilfsfunktionen sind Gruppen zugeordnet. Der Index entspricht der um eins dekrementierten Gruppennummer. Der Index 0 ermittelt also den Wert der zuletzt ausgegebenen M-Hilfsfunktion der 1. Gruppe. Ist für die spezifizierte Gruppe noch keine Hilfsfunktion ausgegeben worden, so liefert die Variable den Wert -1. Die zugehörige Erweiterung kann mit der Variablen $AC_AUXFU_M_EXT[n] ermittelt werden. Die Variable $AC_AUXFU_M_STATE[n] ermittelt den aktuellen Ausgabestatus.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_AUXFU_M_EXT</name>
<brief>Extension der aktiven M-Hilfsfunktion</brief>
<description>Die Feldvariable $AC_AUXFU_M_EXT[n] dient zum Lesen der Extension der zuletzt für eine Hilfsfunktionsgruppe aufgesammelten (Such lauf) oder ausgegebenen M-Hilfsfunktion. Hilfsfunktionen sind Gruppen zugeordnet. Der Index entspricht der um eins dekrementierten Gruppennummer. Der Index 0 ermittelt also die Extension der zuletzt ausgegebenen M-Hilfsfunktion der 1. Gruppe. Ist für die spezifizierte Gruppe noch keine Hilfsfunktion ausgegeben worden, so liefert die Variable den Wert -1. Der zugehörige Wert der Hilfsfunktion kann mit der Variablen $AC_AUXFU_M_VALUE[n] ermittelt werden. Die Variable $AC_AUXFU_M_STATE[n] ermittelt den aktuellen Ausgabestatus.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_AUXFU_M_STATE</name>
<brief>Ausgabestatus der aktiven M-Hilfsfunktion</brief>
<description>Die Feldvariable $AC_AUXFU_M_STATE[n] dient zum Lesen des Ausgabestatuses der zuletzt für eine Hilfsfunktionsgruppe aufgesammelten (Suchlauf) oder ausgegebenen M-Hilfsfunktion. Hilfsfunktionen sind Gruppen zugeordnet. Der Index entspricht der um eins dekrementierten Gruppennummer. Der Index 0 ermittelt also den Status der zuletzt ausgegebenen M-Hilfsfunktion der 1. Gruppe. Ist für die spezifizierte Gruppe noch keine Hilfsfunktion ausgegeben worden, so liefert die Variable den Wert 0. Ist der Wert größer Null, dann kann der zugehörige Hilfsfunktionswert mit der Variablen $AC_AUXFU_M_VALUE[n] ermittelt werden. Die Variable $AC_AUXFU_M_EXT[n] ermittelt die aktuellen Erweiterung der Hilfsfunktion.

Die Variable liefert folgende Werte:
0: Hilfsfunktion ist nicht vorhanden
1: M-Hilfsfunktion wurde per Suchlauf aufgesammelt
2: M-Hilfsfunktion wurde an die PLC ausgegeben
3: M-Hilfsfunktion wurde an die PLC ausgegeben und die Transportquittierung ist erfolgt.
4: M-Hilfsfunktion wird von der PLC verwaltet und ist von der PLC übernommen worden.
5: M-Hilfsfunktion wird von der PLC verwaltet und die Funktionsquittierung ist erfolgt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_THREAD_PITCH</name>
<brief>Programmierte Gewindesteigung</brief>
<description>$P_THREAD_PITCH liefert die unter der Adresse I,J oder K programmierte Gewindesteigung bei G33, G34, G35, G331 und G332. Im Reset-Zustand bzw. wenn noch keine Steigung programmiert ist wird der Wert 0 geliefert. Bei G33, G34 und G35 wird immer ein positiver Wert zurückgeliefert. Bei G331 und G332 ergibt sich das Vorzeichen aus der Spindeldrehrichtung: positiv für Rechtslauf (wie bei M3) bzw. negativ für Linkslauf (wie bei M4).

Im nachfolgenden Beispiel liefert $P_THREAD_PITCH den Wert "1.5":
...
N11 M4 S500 N12 G33 Z10 K1.4
N13 G33 Z12 K1.5
N14 R1=$P_THREAD_PITCH            ;R1=1.5
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_THREAD_PITCH_INC</name>
<brief>Programmierte Gewindesteigungsänderung</brief>
<description>$P_THREAD_PITCH_INC liefert den unter der Adresse F programmierten Wert für die Gewindesteigungsänderung (G34/G35). Im Reset-Zustand bzw. wenn noch keine Steigungsänderung programmiert ist wird der Wert 0 geliefert. Der zurückgegebene Wert ist positiv bei G34 bzw. negativ bei G35.

Beispiel:
M3 S400
G35 F2 Z10 K5
R1=$P_THREAD_PITCH_INC            ;R1= -2
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_THREAD_PITCH</name>
<brief>Programmierte Gewindesteigung</brief>
<description>$AC_THREAD_PITCH liefert die unter der Adresse I,J oder K programmierte Gewindesteigung bei G33, G34, G35, G331 und G332. Im Reset-Zustand bzw. wenn noch keine Steigung programmiert ist wird der Wert 0 geliefert. Bei G33, G34 und G35 wird immer ein positiver Wert zurückgeliefert. Bei G331 und G332 ergibt sich das Vorzeichen aus der Spindeldrehrichtung: positiv für Rechtslauf (wie bei M3) bzw. negativ für Linkslauf (wie bei M4).

Im nachfolgenden Beispiel liefert $AC_THREAD_PITCH den Wert "1.5" :
...
N11 M4 S500 N12 G33 Z10 K1.4
N13 G33 Z12 K1.5
N14 R1=$AC_THREAD_PITCH              ;R1= 1.5
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_THREAD_PITCH_INC</name>
<brief>Aktuelle Gewindesteigungsänderung</brief>
<description>$AC_THREAD_PITCH_INC liefert den unter der Adresse F programmierten Wert für die Gewindesteigungsänderung (G34/G35). Im Reset-Zustand bzw. wenn noch keine Steigungsänderung programmiert ist wird der Wert 0 geliefert. Der zurückgegebene Wert ist positiv bei G34 bzw. negativ bei G35.

Beispiel:
M3 S400
G34 F4 Z10 K2
R1=$P_THREAD_PITCH_INC     ;R1= 4
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_THREAD_PITCH_ACT</name>
<brief>Aktuelle Gewindesteigung</brief>
<description>$AC_THREAD_PITCH_ACT liefert den aktuellen Wert für die Gewindesteigung. Dieser wird bei Sätzen mit G34 bzw. G35 entsprechend dem unter F programmierten Wert fortlaufend aktualisiert. Lediglich in Gewindesätzen (G33, G34, G35, G331 und G332) wird ein Wert ungleich Null geliefert.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_TOOLROT</name>
<brief>Programmierte Werkzeugdrehrichtung</brief>
<description>$P_TOOLROT[n]
Programmierte Werkzeugdrehrichtung
Auf Länge 1 normierter Vektor mit den Komponenten (n = 1, 2, 3)   mit dem Wertebereich -1, ..., 1.
1: x-Komponente
2: y-Komponente
3: z-Komponente
Falls kein Werkzeug aktiv ist, wird abhängig von der aktiven Ebene folgender Richtungsvektor geliefert:
G17: (0, 1, 0)
G18: (1, 0, 0)
G19: (0, 0, 1)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOLR_ACT</name>
<brief>Aktive Werkzeugdrehrichtung</brief>
<description>$AC_TOOLR_ACT[n]
Aktiver Solldrehrichtungsvektor
Auf Länge 1 normierter Vektor mit den Komponenten (n = 1, 2, 3)   mit dem Wertebereich -1, ..., 1.
1: x-Komponente
2: y-Komponente
3: z-Komponente
Falls kein Werkzeug aktiv ist, wird abhängig von der aktiven Ebene folgender Richtungsvektor geliefert:
G17: (0, 1, 0)
G18: (1, 0, 0)
G19: (0, 0, 1)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOLR_END</name>
<brief>Enddrehrichtungsvektor</brief>
<description>$AC_TOOLR_END[n]
Enddrehrichtungsvektor des aktiven Satzes
Auf Länge 1 normierter Vektor mit den Komponenten (n = 1, 2, 3) mit dem Wertebereich -1, ..., 1.
1: x-Komponente
2: y-Komponente
3: z-Komponente
Falls kein Werkzeug aktiv ist, wird abhängig von der aktiven Ebene folgender Richtungsvektor geliefert:
G17: (0, 1, 0)
G18: (1, 0, 0)
G19: (0, 0, 1)
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_TOOLR_DIFF</name>
<brief>Restwinkel der Werkzeugdrehrichtung</brief>
<description>Restwinkel der Werkzeugdrehrichtung im aktiven Satz in Grad, Wertebereich 0 ... 180 Grad.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VC_TOOLR</name>
<brief>Istdrehrichtungvektor</brief>
<description>$VC_TOOLR[n]
Istdrehrichtungvektor des Werkzeugs
Auf Länge 1 normierter Vektor mit den Komponenten (n = 1, 2, 3)   mit dem Wertebereich -1, ..., 1.
1: x-Komponente
2: y-Komponente
3: z-Komponente
Falls kein Werkzeug aktiv ist, wird abhängig von der aktiven Ebene folgender Richtungsvektor geliefert:
G17: (0, 1, 0)
G18: (1, 0, 0)
G19: (0, 0, 1)
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$VC_TOOLR_DIFF</name>
<brief>Winkel zwischen Soll- und Istdrehung</brief>
<description>Winkel zwischen Soll- und Istdrehrichtung des Werkzeugs in Grad, Wertebereich   0 ... 180 Grad.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$VC_TOOLR_STAT</name>
<brief>Status Istdrehrichtungsvektor</brief>
<description>Status der Berechnung des Istdrehrichtungsvektors:
 0: Trafo kann MCS - &gt; BCS Berechnung in einem IPO-Takt ausführen:
-1: MCS - &gt; BCS Berechnung kann nicht in einem IPO-Takt durchgeführt werden.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_SIMUL</name>
<brief>Simulations-Suchlauf aktiv</brief>
<description>Wert == TRUE Das Teile Programm wird in der Steuerung im Modus Simulationssuchlauf abgearbeitet.
Der Simulationssuchlauf ist ein Suchlauf (mit Berechnung),
der beim Erreichen des Programmendes mit einem internen M30 abgebrochen wird.
Die Steuerung befindet sich intern im Suchlauf, die Variable $P_SEARCH, $P_SEARCH1, $P_SEARCH2 und $P_SEARCHL sind zudem korrekt versorgt.
Teileprogrammanpassungen können dann sowohl über die Variablen $P_SEARCH* oder $P_SIMUL erfolgen. $P_SIMUL ist nur für Anpassungen gedacht, die ausschließlich auf den  Simulationssuchlauf beschränkt sein sollen.
Wert == FALSE Es ist kein Simulations-Suchlauf aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_SUB_STAT</name>
<brief>Status des Substitutionsunterprogramms</brief>
<description>Es wurde eine Ersetzung der Werkzeugprogrammierung projektiert ( Adresse D, DL, T bzw. M Funktion mit der der Werkzeugwechselzyklus aufgerufen wird). Mit $P_SUB_STAT kann nun abgefragt werden, ob der Substitutionsvorgang aktiv ist und ob er am Satzanfang oder am Satzende ausgeführt wird:
0: Substitutionsunterprogramm ist nicht aktiv
1: Substitutionsunterprogramm ist aktiv,
   Aufruf am Satzanfang
2: Substitutionsunterprogramm ist aktiv,
   Aufruf am Satzende
Die Systemvariable wird durch das Maschinendatum $MN_T_NO_FCT_CYCLE_MODE Bit1 und 2 beeinflusst.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_USEDND</name>
<brief>Stückzahlzählung</brief>
<description>$A_USEDND[th]
Anzahl, der seit letzter Stückzahlzählung auf WZ-Halter s benutzten Schneiden inklusive der momentan auf s aktiven Schneide.
th=1 - maximale WZ-Halternummer
th=0 = bezeichnet den Master_WZ_Halter
Ergebnis = &gt;0 = Anzahl der benutzten Schneiden.
Ergebnis =  0 = seit letzter Stückzahlzählung keine Schneiden mehr verwendet.
Ergebnis = -1 = Werkzeug-Überwaschungsfunktion ist nicht aktiv.
Ergebnis = -2 = th ist der Wert eines nicht definierten WZ-Halters.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_USEDT</name>
<brief>Stückzahlzählung</brief>
<description>$A_USEDT[th, d]
T-Nummer des i-ten WZs, der Schneiden, die seit letzter Stückzahlzählung auf WZ-Halter s zum Einsatz gekommenen sind bzw. noch im Einsatz sind.
th=1 - maximale WZ-Halternummer
th=0 = bezeichnet den Master_WZ_Halter
d=1 - $A_USEDND[th]
Ergebnis = &gt;0 = T-Nummer (kann auch mehrfach enthalten sein) (falls verschiedene D-Korrekturen des WZs im Einsatz waren).
Ergebnis =  0 = seit letzter Stückzahlzählung keine Schneiden mehr verwendet.
Ergebnis = -1 = Werkzeug-Überwaschungsfunktion ist nicht aktiv.
Ergebnis = -2 = th ist der Wert eines nicht definierten WZ-Halters.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_USEDD</name>
<brief>Stückzahlzählung</brief>
<description>$A_USEDD[th, d]
D-Nummer des i-ten WZs, der Schneiden, die seit letzter Stückzahlzählung auf WZ-Halter s zum Einsatz gekommenen sind bzw. noch im Einsatz sind.
th=1 - maximale WZ-Halternummer
th=0 = bezeichnet den Master_WZ_Halter
d=1 - $A_USEDND[th]
Ergebnis = &gt;0 = D-Nummer (kann auch mehrfach enthalten sein) (falls verschiedene D-Korrekturen des WZs im Einsatz waren).
Ergebnis =  0 = seit letzter Stückzahlzählung keine Schneiden mehr verwendet.
Ergebnis = -1 = Werkzeug-Überwaschungsfunktion ist nicht aktiv.
Ergebnis = -2 = th ist der Wert eines nicht definierten WZ-Halters.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_AUXFU_M_TICK</name>
<brief>Zeitstempel der aktiven M-Hilfsfunktion</brief>
<description>Die Feldvariable $AC_AUXFU_M_TICK[n] dient zum Lesen des Zeitstempels der zuletzt für eine Hilfsfunktionsgruppe aufgesammelten (Suchlauf) oder ausgegebenen M-Hilfsfunktion. Hilfsfunktionen sind Gruppen zugeordnet. Der Index entspricht der um eins dekrementierten Gruppennummer. Der Index 0 ermittelt also den Wert der zuletzt ausgegebenen M-Hilfsfunktion der 1. Gruppe. Ist für die spezifizierte Gruppe noch keine Hilfsfunktion ausgegeben worden, so liefert die Variable den Wert -1.Der zugehörige Wert kann mit der Variablen $AC_AUXFU_M_VALUE[n] und die zugehörige Erweiterung kann mit der Variablen $AC_AUXFU_M_EXT[n] ermittelt werden. Die Variable $AC_AUXFU_M_STATE[n] ermittelt den aktuellen Ausgabestatus.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_CONE_ANGLE</name>
<brief>Kegelwinkel</brief>
<description>Aktuell wirksamer Kegelwinkel für Kegeldrehen. Der Kegelwinkel wird über das Settingdatum $SC_CONE_ANGLE vorgegeben und ist nur in der Betriebsart JOG wirksam.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_TECCYCLE</name>
<brief>Kontext-Abfrage in Technologiezyklen</brief>
<description>Zur Steuerung der kontextspezifischen Interpretation von Programmteilen in Technologiezyklen dient die Vorlaufvariable $P_TECCYCLE.
Mit Hilfe dieser Variable können Programme in Synchronaktionsprogrammteile und Vorlaufprogrammteile unterteilt werden.

Beispiel:
if ($P_TECCYCLE == TRUE)
; Programmsequenz für einen Technologiezyklus in der Synchronaktion
else
; Programmsequenz für Teileprogrammzyklus
endif
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AC_WORKAREA_CS_PLUS_ENABLE</name>
<brief>aktive koordinatensystem-spezifische Arbeitsfeldbegr. plus gültig</brief>
<description>TRUE: Die Begrenzung in Plus-Richtung für die angegebene Achse in der aktiven koordinatensystem-spezifischen Arbeitsfeldbegrenzung ist gültig. (s. $AC_WORKAREA_CS_LIMIT_PLUS[&lt;Achse&gt;])
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AC_WORKAREA_CS_MINUS_ENABLE</name>
<brief>aktive koordinatensystem-spezifische Arbeitsfeldbegr. minus gültig</brief>
<description>TRUE: Die Begrenzung in Minus-Richtung für die angegebene Achse in der aktiven koordinatensystem-spezifischen Arbeitsfeldbegrenzung ist gültig. (s. $AC_WORKAREA_CS_LIMIT_MINUS[&lt;Achse&gt;])
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_WORKAREA_CS_LIMIT_PLUS</name>
<brief>koordinatensystem-spezifische Arbeitsfeldbegr. plus</brief>
<description>Die Begrenzung in Plus-Richtung für die angegebene Achse in der aktiven koordinatensystem-spezifischen Arbeitsfeldbegrenzung. Dieser Wert wird nur ausgewertet, wenn $AC_WORKAREA_CS_PLUS_ENABLE = TRUE ist.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_WORKAREA_CS_LIMIT_MINUS</name>
<brief>koordinatensystem-spezifische Arbeitsfeldbegr. minus</brief>
<description>Die Begrenzung in Minus-Richtung für die angegebene Achse in der aktiven koordinatensystem-spezifischen Arbeitsfeldbegrenzung. Dieser Wert wird nur ausgewertet, wenn $AC_WORKAREA_CS_MINUS_ENABLE = TRUE ist.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_WORKAREA_CS_COORD_SYSTEM</name>
<brief>Koordinatensystem für das die aktive Arbeitsfeldbegr. gilt</brief>
<description>Koordinatensystem, in dem die aktive koordinatensystem-spezifische Arbeitsfeldbegrenzung gilt.
Es gelten folgende Werte:
   Arbeitsfeldbegrenzung gilt im WKS
   Arbeitsfeldbegrenzung gilt im ENS
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_WORKAREA_CS_GROUP</name>
<brief>Gruppennr. der aktiven koordinatensystem-spezifischen Arbeitsfeldbegr.</brief>
<description>Nummer der aktiven Gruppe der koordinatensystem-spezifischen Arbeitsfeldbegrenzung. Der Wert wird im NC-Programm durch den G-Code WALCS0-WALCS10 bestimmt.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_ISO1FRAME</name>
<brief>Aktives Systemframes für ISO G51.1 Spiegeln</brief>
<description>Die Variable $P_ISO1FRAME dient zur Programmierung des aktiven Systemframes für ISO G51.1 Spiegeln.

Bei Reset ist die Aktivierung des Systemframes abhängig von folgenden Maschinendaten:
Bit0 in $MC_RESET_MODE_MASK
Bit7 in $MC_CHSFRAME_RESET_MASK
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_ISO2FRAME</name>
<brief>Aktives Systemframes für ISO G68 2DROT</brief>
<description>Die Variable $P_ISO2FRAME dient zur Programmierung des aktiven Systemframes für ISO G68 2DROT.

Bei Reset ist die Aktivierung des Systemframes abhängig von folgenden Maschinendaten:
Bit0 in $MC_RESET_MODE_MASK
Bit8 in $MC_CHSFRAME_RESET_MASK
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_ISO3FRAME</name>
<brief>Aktives Systemframes für ISO G68 3DROT</brief>
<description>Die Variable $P_ISO3FRAME dient zur Programmierung des aktiven Systemframes für ISO G68 3DROT.

Bei Reset ist die Aktivierung des Systemframes abhängig von folgenden Maschinendaten:
Bit0 in $MC_RESET_MODE_MASK
Bit9 in $MC_CHSFRAME_RESET_MASK
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_ISO4FRAME</name>
<brief>Aktives Systemframes für ISO G51 Scale</brief>
<description>Die Variable $P_ISO4FRAME dient zur Programmierung des aktiven Systemframes für ISO G51 Scale.

Bei Reset ist die Aktivierung des Systemframes abhängig von folgenden Maschinendaten:
Bit0 in $MC_RESET_MODE_MASK
Bit10 in $MC_CHSFRAME_RESET_MASK
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_ACSFRAME</name>
<brief>Aktives Frame zwischen BKS und ENS</brief>
<description>Die Variable $P_ACSFRAME ermittelt das aktive verkettete Gesamtframe zwischen BKS und ENS.

Für $MC_FRAME_ACS_SET = 0 gilt:
$P_ACSFRAME = $P_PARTFRAME : $P_SETFRAME : $P_EXTFRAME : $P_ISO1FRAME : $P_ISO2FRAME : $P_ISO3FRAME : $P_ACTBFRAME : $P_IFRAME : $P_GFRAME : $P_TOOLFRAME : $P_WPFRAME

Für $MC_FRAME_ACS_SET = 1 gilt:
$P_ACSFRAME = $P_PARTFRAME : $P_SETFRAME : $P_EXTFRAME : $P_ISO1FRAME : $P_ISO2FRAME : $P_ISO3FRAME : $P_ACTBFRAME : $P_IFRAME : $P_GFRAME : $P_TOOLFRAME : $P_WPFRAME : $P_TRAFRAME : $P_PFRAME : $P_ISO4FRAME
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_CUT_INV</name>
<brief>Spindeldrehrichtung invertieren</brief>
<description>Diese Systemvariable dient dazu, zu erkennen, ob für eine Bearbeitung mit dem aktuell aktiven Werkzeug die Spindeldrehrichtung invertiert werden muss.

Die Variabel hat den Wert TRUE, wenn die folgenden vier Bedingungen erfüllt sind:
1. Es ist ein Drehwerkzeug aktiv (Werkzeugtypen 500 bis 599).
2. Die Schneidenbeeinflussung wurde mit dem Sprachbefehl CUTMOD = 1 oder CUTMOD =2 aktiviert.
3. Es ist ein orientierbarer Werkzeugträger aktiv.
4. Der orientierbare Werkzeugträger dreht das Werkzeug so, dass die resultierende Normale der Werkzeugschneide gegenüber der Ausgangslage um mehr als 90 Grad (typischerweise 180 Grad) gedreht ist.
Ist mindestens eine der genannten vier Bedingungen nicht erfüllt, ist der Inhalt der Variablen FALSE.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$AC_CUT_INV</name>
<brief>Spindeldrehrichtung invertieren</brief>
<description>Die Systemvariable $AC_CUT_INV dient dazu, zu erkennen, ob für eine Bearbeitung mit dem aktuell aktiven Werkzeug die Spindeldrehrichtung invertiert werden muss.

Die Variabel hat den Wert TRUE, wenn die folgenden vier Bedingungen erfüllt sind:
1. Es ist ein Drehwerkzeug aktiv (Werkzeugtypen 500 bis 599).
2. Die Schneidenbeeinflussung wurde mit dem Sprachbefehl CUTMOD = 1 oder CUTMOD = 2 aktiviert.
3. Es ist ein orientierbarer Werkzeugträger aktiv.
4. Der orientierbare Werkzeugträger dreht das Werkzeug so, dass die resultierende Normale der Werkzeugschneide gegenüber der Ausgangslage um mehr als 90 Grad (typischerweise 180 Grad) gedreht ist.
Ist mindestens eine der genannten vier Bedingungen nicht erfüllt, ist der Inhalt der Variablen FALSE.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_CUTMOD</name>
<brief>Zuletzt programmierter Wert von CUTMOD</brief>
<description>Liest den aktuell gültigen Wert der zuletzt mit dem Sprachbefehl CUTMOD programmiert wurde (Nummer des Werkzeugträgers, für den die Schneidendatenmodifikation aktiviert werden soll). War der letzte programmierte Wert CUTMOD = -2 (Aktivierung mit dem aktuell aktiven orientierbaren Werkzeugträger), wird in $P_CUTMOD nicht der Wert -2, sondern die Nummer des zum Zeitpunkt der Programmierung aktiven orientierbaren Werkzeugträgers zurückgeliefert.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_CUTMOD</name>
<brief>Im aktuellen Satz gültiger Wert von CUTMOD</brief>
<description>Liest den im aktuellen Satz aktuell gültigen Wert der desSprachbefehls CUTMOD (Nummer des Werkzeugträgers, für den die Schneidendatenmodifikation aktiviert werden soll).
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_CUTMOD_ANG</name>
<brief>Werkzeugdrehwinkel in der aktiven Bearbeitungsebene</brief>
<description>Die Variable $P_CUTMOD_ANG liest den Winkel, um den ein Werkzeug in der aktiven Bearbeitungsebene gedreht wurde und der zur Ermittlung modifizierter Schneidendaten bei den Funktionen CUTMOD bzw. $SC_CUTDIRMOD zugrunde liegt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_CUTMOD_ANG</name>
<brief>Werkzeugdrehwinkel in der aktiven Bearbeitungsebene</brief>
<description>Die Variable $AC_CUTMOD_ANG ermittelt den Winkel, um den ein Werkzeug in der aktiven Bearbeitungsebene gedreht wurde und der zur Ermittlung modifizierter Schneidendaten bei den Funktionen CUTMOD bzw. $SC_CUTDIRMOD zugrunde liegt.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_SUB_SPOS</name>
<brief>Sprach-Substitution für SPOS-Befehl aktiv</brief>
<description>Liefert im Substitutionsunterprogramm einer mit $MA_AXIS_LANG_SUB_MASK Bit1 = 1 projektierten NC-Sprach-Substitution TRUE, wenn die Substitution durch den SPOS-Befehl aktiviert wurde.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_SUB_SPOSA</name>
<brief>Sprach-Substitution für SPOSA-Befehl aktiv</brief>
<description>Liefert im Substitutionsunterprogramm einer mit $MA_AXIS_LANG_SUB_MASK Bit1 = 1 projektierten NC-Sprach-Substitution TRUE, wenn die Substitution durch den SPOSA-Befehl aktiviert wurde.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_SUB_M19</name>
<brief>Sprach-Substitution M19 aktiv</brief>
<description>Liefert im Substitutionsunterprogramm einer mit $MA_AXIS_LANG_SUB_MASK Bit1 = 1 projektierten NC-Sprach-Substitution TRUE, wenn die Substitution durch M19 aktiviert wurde.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_SUB_SPOSIT</name>
<brief>SPOS/SPOSA-Position bei Sprach-Substitution</brief>
<description>Liefert im Substitutionsunterprogramm einer mit $MA_AXIS_LANG_SUB_MASK Bit1 = 1 projektierten NC-Sprach-Substitution die programmierte Position. Wird die Variable außerhalb dieses Substitutionsvorganges aufgerufen, wird die Programmbearbeitung mit Alarm 14055 abgebrochen.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_SUB_SPOSMODE</name>
<brief>Positionsanfahrmode   bei Sprach-Substitution</brief>
<description>Die Variable $P_SUB_SPOSMODE ermittelt bei einer projektierten Sprach-Substitution:
$MA_AXIS_LANG_SUB_MASK Bit1 = 1
im Substitutionsunterprogramm den Positionsanfahrmode für die von $P_SUB_SPOSIT gelieferte Spindelposition:
0: DC
1: AC
2: IC
3: DC
4: ACP
5: ACN
Wird die Variable außerhalb dieses Substitutionsvorganges aufgerufen, wird die Programmbearbeitung mit Alarm 14055 abgebrochen.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_SAFE_SYNA_MEM</name>
<brief>Freie Safety-Synchronaktionselemente</brief>
<description>Die Variable $AC_SAFE_SYNA_MEM ermittelt die Anzahl der freien Synchronaktionselemente für Safety Integrated. Die maximale Elementanzahl wird über $MC_MM_NUM_SAFE_SYNC_ELEMENTS projektiert. Aus dem Teileprogramm wird der Wert ohne Vorlaufstopp gelesen.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_ACT_PROG_NET_TIME</name>
<brief>Laufzeit des angewählten NC-Programms</brief>
<description>Die aktuelle Netto-Laufzeit des aktuellen Programms, d.h. die Zeit in der das Programm gestoppt war, ist abgezogen. Wird in der BA Automatik aus dem Kanalzustand RESET ein Teileprogramm neu gestartet, wird $AC_ACT_PROG_NET_TIME automatisch auf Null zu rückgesetzt. $AC_ACT_PROG_NET_TIME wird mit dem Erreichen von M30 auf Null zurückgesetzt. Die Netto-Laufzeit umfasst nicht die Zeit, in der das Programm wg. Override=0 steht. Mit $AC_PROG_NET_TIME_TRIGGER kann $AC_ACT_PROG_NET_TIME weiter manipuliert werden.

Bemerkung:

Die RESET-Taste setzt $AC_ACT_PROG_NET_TIME nicht auf Null zurück, sondern hält $AC_ACT_PROG_NET_TIME nur an. Bei GOTOS wird $AC_ACT_PROG_NET_TIME per Standard (außer 828D) nicht zurückgesetzt. Soll sich GOTOS wie Programmende M30 verhalten, muss Bit 0 des Maschinendatums $MC_PROG_NET_TIMER_MODE gesetzt werden.

Beim Start eines ASUPs wird $AC_ACT_PROG_NET_TIME auf Null gesetzt und zählt die Laufzeit des ASUPs mit. Beim Start von Prog-Events wird $AC_ACT_PROG_NET_TIME nicht zurückgesetzt. $AC_ACT_PROG_NET_TIME wird zusätzlich nur bei einem Start-Event, M30-ProgEvent und Suchlauf-ProgEvent erhöht. Am Ende eines ASUPs verhält sich $AC_ACT_PROG_NET_TIME wie bei der RESET-Taste, d.h. $AC_ACT_PROG_NET_TIME wird nur angehalten, aber nicht auf 0 gesetzt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_OLD_PROG_NET_TIME</name>
<brief>Laufzeit des letzten NC-Programms</brief>
<description>$AC_OLD_PROG_NET_TIME ist die Netto-Laufzeit des gerade korrekt beendeten Programms, d.h. das Programm wurde nicht mit RESET abgebrochen, sondern es ist regulär mit M30 beendet worden. Wird ein neues Programm gestartet, bleibt $AC_OLD_PROG_NET_TIME unangetastet, bis M30 erneut erreicht wird. Der implizite Kopiervorgang von $AC_ACT_PROG_NET_TIME nach $AC_OLD_PROG_NET_TIME findet nur statt, wenn $AC_PROG_NET_TIME_TRIGGER nicht beschrieben wird.

Bemerkung:
$AC_OLD_PROG_NET_TIME wird dem dem PI "Programm selektieren" wieder auf Null gesetzt. $AC_OLD_PROG_NET_TIME wird auf Null gesetzt, wenn das aktuell angewählte Programm editiert wird. Am Ende eines ASUPs oder eines Prog-Events wird $AC_OLD_PROG_NET_TIME nicht verändert.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_PROG_NET_TIME_TRIGGER</name>
<brief>Trigger zur Laufzeitmessung</brief>
<description>$AC_PROG_NET_TIME_TRIGGER dient zur selektiven Messung von Programmabschnitten, d.h. die Zeitmessung kann durch das Programm ein- und wieder ausgeschaltet werden, indem man $AC_PROG_NET_TIME_TRIGGER beschreibt. Um alle Trigger-Möglichkeiten auszuschöpfen, werden bestimmte Werte für $AC_PROG_NET_TIME_TRIGGER mit einer besonderen Funktion belegt:
0 = Neutral: Der Trigger ist nicht aktiv, der Wert wird mit Start-Taste aus Reset heraus eingenommen.
1 = Beenden: Beendet die Messung und kopiert $AC_ACT_PROG_NET_TIME nach $AC_OLD_PROG_NET_TIME. $AC_ACT_PROG_NET_TIME wird auf Null gesetzt und läuft danach weiter.
2 = Start: Startet die Messung und setzt dabei $AC_ACT_PROG_NET_TIME auf Null. $AC_OLD_PROG_NET_TIME wird nicht verändert.
3 = Stop: Stoppt die Messung, verändert $AC_OLD_PROG_NET_TIME nicht und hält $AC_ACT_PROG_NET_TIME bis zum Fortsetzen konstant.
4 = Fortsetzen: Fortsetzen der Messung, d.h. eine vorher gestoppte Messung wird wieder aufgenommen. $AC_ACT_PROG_NET_TIME läuft weiter. $AC_OLD_PROG_NET_TIME wird nicht verändert.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_OLD_PROG_NET_TIME_COUNT</name>
<brief>Änderungzähler für $AC_OLD_PROG_NET_TIME</brief>
<description>$AC_OLD_PROG_NET_TIME_COUNT ist im PowerOn-Zustand Null. $AC_OLD_PROG_NET_TIME_COUNT wird immer dann erhöht, wenn $AC_OLD_PROG_NET_TIME neu beschrieben wurde. Damit kann der Anwender sicher feststellen, dass $AC_OLD_PROG_NET_TIME geschrieben wurde, d.h bricht der Anwender das laufende Programm mit Reset ab, bleibt $AC_OLD_PROG_NET_TIME und $AC_OLD_PROG_NET_TIME_COUNT unverändert.

Bemerkung:
Zwei hintereinander laufende Programme können die identische Laufzeit haben und korrekt beendet werden. Dann erkennt der Anwender dies nur über den veränderten $AC_OLD_PROG_NET_TIME_COUNT.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_OPMODE</name>
<brief>Angewählte Betriebsart</brief>
<description>Die Variable $P_OPMODE ermittelt die über PLC angewählte Betriebsart.
Die Variable liefert folgende Werte:
0: JOG (Handverfahren)
1: MDA (Manual Data Automatisch)
2: AUTOMATIK
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_TOFF</name>
<brief>Programmierter Werkzeuglängenoffset</brief>
<description>Programmierter Werkzeuglängenoffset.
Die Variable liefert den Werkzeuglängenoffset, der der als Index angegebenen Geometrieachse zugeordnet ist.
Die Systemvariable liefert die den Werkzeuglängenkomponenten zugeordneten Offsetwerte unabhängig davon, ob die Offsets mit TOFFL oder mit TOFF programmiert wurden.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOFFL</name>
<brief>Programmierter Werkzeuglängenoffset</brief>
<description>Die Variable liefert in $AC_TOFFL[1] den der Werkzeuglängenkomponente L1 zugeordneten Offset. Entsprechendes gilt für die Indizes 2 und 3. Mit $AC_TOFFL[0] wird wie mit $AC_TOFFL[1] ebenfalls auf den Offset der Längenkomponente L1 zugegriffen. Die Systemvariable liefert die den Werkzeuglängenkomponenten zugeordneten Offsetwerte unabhängig davon, ob die Offsets mit TOFFL oder mit TOFF programmiert wurden.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_TOFFL</name>
<brief>Programmierter Werkzeuglängenoffset</brief>
<description>Die Variable liefert in $P_TOFFL[1] den der Werkzeuglängenkomponente L1 zugeordneten Offset. Entsprechendes gilt für die Indizes 2
und 3. Mit $P_TOFFL[0] wird wie mit $P_TOFFL[1] ebenfalls auf den Offset der Längenkomponente L1 zugegriffen. Die Systemvariable liefert die den Werkzeuglängenkomponenten zugeordneten Offsetwerte unabhängig davon, ob die Offsets mit TOFFL oder mit TOFF programmiert wurden.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOFF</name>
<brief>Programmierter Werkzeuglängenoffset</brief>
<description>Die Variable liefert den Werkzeuglängenoffset, der der als Index angegebenen Geometrieachse zugeordnet ist. Die Systemvariable liefert die den Werkzeuglängenkomponenten zugeordneten Offsetwerte unabhängig davon, ob die Offsets mit TOFFL oder mit TOFF programmiert wurden.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$AC_JOG_CIRCLE_SELECTED</name>
<brief>Joggen von Kreisen angewählt</brief>
<description>TRUE: Das Joggen von Kreisen ist angewählt.
Die Funktion wird über das NC/PLC-Nahtstellensignal DB21-30 DBX30.6 (keine Werkzeugwechsel Kommandos) angewählt und über DB21.DBX377.6 die Anwahl bestätigt.

Mit Settingdaten wird der maximale bzw. minimale Kreis und die Bearbeitungseigenschaften definiert:
- $SC_JOG_CIRCLE_CENTRE definiert den Kreismittelpunkt,
- $SC_JOG_CIRCLE_RADIUS der Kreisradius
- $SC_JOG_CIRCLE_MODE die Bearbeitungseigenschaften (Fahren auf einer Kreisbahn im Uhrzeigersinn bzw. gegen den Uhrzeigersinn, Innen- oder Außenbearbeitung; Begrenzungen bzgl. Kreis mit / ohne Berücksichtigung der Werkzeugradiuskorrektur).
- $SC_JOG_CIRCLE_START_ANGLE definiert den Startwinkel
- $SC_JOG_CIRCLE_END_ANGLE definiert den Endwinkel
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_TOFFR</name>
<brief>Programmierter Werkzeugradiusoffset</brief>
<description>Die Variable liefert den mit TOFFR programmierten Werkzeugradiusoffset.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_TOFFR</name>
<brief>Programmierter Werkzeugradiusoffset</brief>
<description>Die Variable liefert den mit TOFFR programmierten Werkzeugradiusoffset.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_STOP_COND</name>
<brief>Ereignisse für den Bearbeitungsstopp</brief>
<description>Die Feld-Variable $AC_STOP_COND[n] ermittelt die Ereignisse, die zum Bearbeitungsstopp im Kanal führten. In den Feldelementen stehen die Ereignisse codiert als positiver Zahlwert (Bedeutung siehe Anwenderdokumentation). Das Feldelement mit dem Feldindex 0 entspricht dabei dem höchstprioren Ereignis, höher indizierte Elemente liefern entsprechend niederpriore Ereignisse. Liefert das n-te Feldelement den Wert 0, so bedeutet das, dass keine weiteren Stop-Ereignisse mehr vorliegen.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_RELFRAME</name>
<brief>Aktives Systemframes für relative Koordinatensysteme</brief>
<description>Die Variable $P_RELFRAME dient zur Programmierung des aktiven Systemframes für relative Koordinatensysteme.

Die Projektierung des Systemframes erfolgt über folgende Maschinendaten:
Bit 11 in $MC_MM_SYSTEM_FRAME_MASK
Bit 11 in $MC_MM_SYSTEM_DATAFRAME_MASK
Bit 11 in $MC_CHSFRAME_RESET_MASK
Bit 11 in $MC_CHSFRAME_RESET_CLEAR_MASK
Bit 11 in $MC_CHSFRAME_POWERON_MASK
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$P_INCOAP_B</name>
<brief>Parameter für COA-Applikation</brief>
<description>Versorgungs- und Rückgabeparameter der COA-Applikation "Zerspanungsgenerator".
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>$P_INCOAP_C</name>
<brief>Parameter für COA-Applikation</brief>
<description>Versorgungs- und Rückgabeparameter der COA-Applikation "Zerspanungsgenerator".
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_INCOAP_I</name>
<brief>Parameter für COA-Applikation</brief>
<description>Versorgungs- und Rückgabeparameter der COA-Applikation "Zerspanungsgenerator".
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_INCOAP_R</name>
<brief>Parameter für COA-Applikation</brief>
<description>Versorgungs- und Rückgabeparameter der COA-Applikation "Zerspanungsgenerator".
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$P_INCOAP_S16</name>
<brief>Parameter für COA-Applikation</brief>
<description>Versorgungs- und Rückgabeparameter der COA-Applikation "Zerspanungsgenerator".
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$P_INCOAP_S32</name>
<brief>Parameter für COA-Applikation</brief>
<description>Versorgungs- und Rückgabeparameter der COA-Applikation "Zerspanungsgenerator".
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$P_INCOAP_S160</name>
<brief>Parameter für COA-Applikation</brief>
<description>Versorgungs- und Rückgabeparameter der COA-Applikation "Zerspanungsgenerator".
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_INCOAP_SIZE</name>
<brief>Größe der Parameterfelder für COA-Applikation</brief>
<description>$P_INCOAP_SIZE[] liefert die aktuell zur Verfügung stehende Feldgröße der Versorgungs- und Rückgabeparameter $P_INCOAP_&lt;typ&gt; der COA-Applikation "Zerspanungsgenerator". Die Feldgröße ist variabel und wird im Hochlauf durch die COA-Applikation festgelegt.

Es gilt folgende Zuordnung:
$P_INCOAP_SIZE[0] liefert die Feldgröße von $P_INCOAP_B[]
$P_INCOAP_SIZE[1] liefert die Feldgröße von $P_INCOAP_C[]
$P_INCOAP_SIZE[2] liefert die Feldgröße von $P_INCOAP_I[]
$P_INCOAP_SIZE[3] liefert die Feldgröße von $P_INCOAP_R[]
$P_INCOAP_SIZE[4] liefert die Feldgröße von $P_INCOAP_S16[]
$P_INCOAP_SIZE[5] liefert die Feldgröße von $P_INCOAP_S32[]
$P_INCOAP_SIZE[6] liefert die Feldgröße von $P_INCOAP_S160[]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_SMAXVELO</name>
<brief>Maximal mögliche Spindeldrehzahl</brief>
<description>Die Systemvariable $AC_SMAXVELO[&lt;SpindelNr&gt;] gibt die maximal mögliche Spindeldrehzahl für den Spindelbetrieb zurück. Diese wird aus dem niedrigsten Wert der aktiven Drehzahlbegrenzungen gebildet und kann durch Drehzahlprogrammierung oder Override &gt; 100% nicht überschritten werden. Eine Drehzahlbegrenzung wird durch das VDI-Nst.-Signal DB31..,DBX83.1 'Solldrehzahl begrenzt' und durch $AC_SPIND_STATE, Bit 10 (Begrenzung der Drehzahl aktiv) angezeigt. Zusätzlich kann die Drehzahl begrenzende Ursache mit der Systemvariablen $AC_SMAXVELO_INFO ermittelt werden. Im Pendelbetrieb (Getriebestufenwechsel) liefert die Variable den Wert für den Spindelbetrieb (Drehzahlsteuerbetrieb).
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_SMAXVELO_INFO</name>
<brief>Kennung für das drehzahlbegrenzende Datum</brief>
<description>Die Systemvariable $AC_SMAXVELO_INFO[&lt;SpindelNr&gt;] ist eine Zusatzinformation zu $AC_SMAXVELO und liefert das maßgebliche Datum als Kennung/Index. Mit dem gelesenen Wert kann das drehzahlbegrenzende Datum anhand der folgenden Tabelle ermittelt werden.
0   Keine Limitierung (SERUPRO)
1   Maximaldrehzahl (Futterdrehzahl) der Spindel MD 35100 SPIND_VELO_LIMIT
2   Drehzahlbegrenzung auf Maximaldrehzahl in der aktuellen Getriebestufe MD 35130 GEAR_STEP_MAX_VELO_LIMIT
3   Drehzahlbegrenzung aufgrund Lageregelung auf 90% des Minimums aus MD 35100 und MD 35130 (SPCON, SPOS, ggf. bei COUPON,..)
4   Drehzahlbegrenzung aufgrund Lageregelung auf MD 35135 GEAR_STEP_PC_MAX_VELO_LIMIT
5   Drehzahlbegrenzung auf SD 43220 SPIND_MAX_VELO_G26 (G26 S.. bzw. Vorgabe vom HMI)
6   Drehzahlbegrenzung auf MD 35160 SPIND_EXTERN_VELO_LIMIT aufgrund gesetztem VDI-Nst.-Signal DB31,...DBX3.6
7   Drehzahlbegrenzung auf SD 43230 SPIND_MAX_VELO_LIMS bei konstanter Schnittgeschwindigkeit (G96, G961, G962, G97, LIMS)
8   Drehzahlbegrenzung auf sichere Geschwindigkeit (SG) aufgrund Safety Integrated
9   Drehzahlbegrenzung durch Berechnungen der Präparation
10  Begrenzung durch Antriebsparameter (z.B. SINAMICS p1082, p2000) auf maximale Drehzahl des Antriebs
11  Drehzahlbegrenzung auf MD 36300 ENC_FREQ_LIMIT bei Funktionen, die ein funktionierendes Messsystem voraussetzen, z.B. bei Lageregelung und G95, G96, G97, G973, G33, G34, G35 für die Masterspindel. Die Begrenzung berücksichtigt die Encoder-Drehzahl, die Masterspindel-Anordnung (direkt/indirekt), Masterspindel-Grenzfrequenz und den aktuellen Parametersatz 12 Drehzahlbegrenzung durch Achsbetrieb. Im Falle einer Synchronspindel wird der Achsbetrieb durch die Leitspindel erzwungen.
13  Drehzahlbegrenzung der überlagerten Bewegung der Folgespindel auf die nach der Kopplung verbleibende restliche Dynamik. Ein größerer Bewegungsanteil der überlagerten Bewegung kann durch Reduzierung der Leitspindeldrehzahl erreicht werden, z.B. durch Programmierung von G26 S, VELOLIM für die Leitspindel oder VELOLIMA für die Folgespindel. Der Koppelfaktor ist zu berücksichtigen
14  Drehzahlbegrenzung der Leitspindel aufgrund fehlender Dynamik der Folgespindel oder eines hohen Übersetzungsverhältnisses
15  Drehzahlbegrenzung der Masterspindel auf MD 35550 DRILL_VELO_LIMIT bei Gewindebohren mit G331, G332
16  Drehzahlbegrenzung durch Programmierung von VELOLIM
17  Drehzahlbegrenzung durch Werkzeugparameter $TC_TP_MAX_VELO
18  nicht benutzt
19  nicht benutzt
20  Drehzahlbegrenzung aufgrund von NCU-Link
21  Drehzahlbegrenzung durch SD43235 SD_SPIND_USER_VELO_LIMIT, anwenderseitige Drehzahlbegrenzung z.B. Spanneinrichtung,Futterdrehzahl
22  Drehzahlbegrenzung durch Programmierung von VELOLIMA
23  Drehzahlbegrenzung durch den Spannzustand des Werkzeugs. Handelt es sich um eine Weiss-Spindel, kann der Spannzustand aus $VA_MOT_CLAMPING_STATE[&lt;Achse&gt;] gelesen werden.
Im Pendelbetrieb (Getriebestufenwechsel) liefert die Variable den Wert für den Spindelbetrieb (Drehzahlsteuerbetrieb).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_SMINVELO</name>
<brief>Minimal mögliche Spindeldrehzahl</brief>
<description>Die Variable $AC_SMINVELO[&lt;SpindelNr&gt;] gibt die minimal mögliche Spindeldrehzahl für den Drehzahlsteuerbetrieb zurück. Diese wird aus der größten Drehzahlanhebung gebildet und kann durch Drehzahlprogrammierung oder Override &lt; 100% nicht unterschritten werden. Eine Drehzahlanhebung wird durch das VDI-Nst.-Signal DB31..,DBX83.2 'Solldrehzahl erhöht' und durch $AC_SPIND_STATE, Bit 11  (Solldrehzahl erhöht) angezeigt. Zusätzlich kann die drehzahlanhebende Ursache (Maschinen-, Settingdatum, G-Code, VDI-Nst, etc.) mit der Systemvariablen $AC_SMINVELO_INFO ermittelt werden. Die Drehzahlanhebung wirkt nur im Drehzahlsteuerbetrieb der Spindel. Die Systemvariable liefert immer den für den Drehzahlsteuerbetrieb maßgeblichen Wert, auch wenn sich die Spindel im Positionier- oder Achsbetrieb befindet.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_SMINVELO_INFO</name>
<brief>Kennung für das drehzahlanhebende Datum</brief>
<description>Die Systemvariable $AC_SMINVELO_INFO[&lt;SpindelNr&gt;] ist eine Zusatzinformation zu $AC_SMINVELO und liefert das drehzahlanhebende Datum als Kennung/Index für den Drehzahlsteuerbetrieb. Mit dem Index kann das drehzahlanhebende Datum anhand der folgenden Tabelle ermittelt werden.
0    nicht benutzt
1    nicht benutzt
2    Drehzahl-Untergrenze (Minimaldrehzahl) der aktuellen Getriebestufe MD 35140 GEAR_STEP_MIN_VELO_LIMIT
3    nicht benutzt
4    nicht benutzt
5    Drehzahl-Untergrenze (Minimaldrehzahl) aus SD 43210 SPIND_MIN_VELO_G25 (G25 S.. bzw. Vorgabe vom HMI)
Im Pendelbetrieb (Getriebestufenwechsel) und im Achsbetrieb liefert die Variable Werte aus dem Spindelbetrieb.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_SMAXACC</name>
<brief>Wirksame Beschleunigung der Spindel</brief>
<description>Die Variable $AC_SMAXACC[&lt;SpindelNr&gt;] gibt die wirksame Beschleunigung der Spindel für den Spindelbetrieb zurück.
Für die Dauer der Beschleunigung auf die vorgegebene Solldrehzahl wird $AC_SPIND_STATE, Bit 14 (Spindel beschleunigt) gesetzt.
Für die Dauer des Bremsens auf die vorgegebene Solldrehzahl wird $AC_SPIND_STATE, Bit 15 (Spindel bremst) gesetzt.
Das beschleunigungsbestimmende Datum kann mit der Systemvariablen $AC_SMAXACC_INFO ermittelt werden.
Im Pendelbetrieb (Getriebestufenwechsel) liefert die Variable den Wert für den Spindelbetrieb (Drehzahlsteuerbetrieb).
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_SMAXACC_INFO</name>
<brief>Kennung für das aktive Spindelbeschleunigungsdatum</brief>
<description>Die Systemvariable $AC_SMAXACC_INFO[&lt;SpindelNr&gt;] ist eine Zusatzinformation zu $AC_SMAXACC und liefert das maßgebliche Datum als Kennung/Index. Mit dem Index kann das aktive Beschleunigungsdatum anhand der folgenden Tabelle ermittelt werden. Das Nummernband orientiert sich an dem der Systemvariable $AC_SMAXVELO_INFO:
0    keine Beschleunigungsbegrenzung (SERUPRO)
1    nicht benutzt
2    Beschleunigung im Drehzahlsteuerbetrieb ohne Lageregelung in der aktuellen Getriebestufe MD 35200 GEAR_STEP_SPEEDCTRL_ACCEL
3    nicht benutzt
4    Beschleunigung in der aktuellen Getriebestufe aufgrund Lageregelung MD 35210 GEAR_STEP_POSCTRL_ACCEL (SPCON, SPOS, ggf. bei COUPON,..)
5    nicht benutzt
6    nicht benutzt
7    nicht benutzt
8    nicht benutzt
9    Beschleunigungsbegrenzung durch Berechnungen der Präparation
10   nicht benutzt
11   nicht benutzt
12   Beschleunigungsbegrenzung durch Achsbetrieb. Im Falle einer Synchronspindel wird der Achsbetrieb durch die Leitspindel erzwungen.
13   Beschleunigungsbegrenzung der überlagerten Bewegung der Folgespindel auf die nach der Kopplung verbleibende restliche Dynamik
14   Beschleunigungsbegrenzung der Leitspindel aufgrund fehlender Dynamik der Folgespindel oder eines hohen Übersetzungsverhältnisses
15   Beschleunigung der Masterspindel MD 35212 GEAR_STEP_POSCTRL_ACCEL2 bei Gewindebohren mit G331, G332 (nur bei ent sprechender Projektierung des zweiten Datensatzes)
16   Beschleunigungsbegrenzung durch Programmierung von ACC oder ACCFXS (Synchronaktion)
17   Beschleunigungsbegrenzung durch Werkzeugparameter $TC_TP_MAX_ACCEL
18   nicht benutzt
19   Beschleunigungsbegrenzung in der Betriebsart JOG durch MD 32301 MA_JOG_MAX_ACCEL
20   Beschleunigungsbegrenzung aufgrund von NCU-Link
21   nicht benutzt
22   Beschleunigungsbegrenzung durch Programmierung von ACCLIMA
23   nicht benutzt
Im Pendelbetrieb (Getriebestufenwechsel)  liefert die Variable den Wert für den Spindelbetrieb (Drehzahlsteuerbetrieb).
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_SPIND_STATE</name>
<brief>Status der Spindel im Drehzahlsteuerbetrieb</brief>
<description>Die Variable $AC_SPIND_STATE[&lt;SpindelNr&gt;] liefert ausgewählte Zustände der Spindel. Für den Positionier- und Achsbetrieb kann zusätzlich die Variable $AA_INPOS_STAT[&lt;SpindelNr&gt;] gelesen werden.
Bit 0: "Konstante Schnittgeschwindigkeit aktiv" (VDI-Nst.-Signal DB31..,DBX84.0)
Bit 1: "SUG aktiv" (VDI-Nst.-Signal DB31..,DBX84.1)
Bit 2: "CLGON aktiv" (VDI-Nst.-Signal DB31..,DBX84.2)
Bit 3: "Gewindebohren ohne Ausgleichsfutter" (VDI-Nst.-Signal DB31..,DBX84.3)
Bit 4: "Synchronbetrieb" (Folgespindel bei Synchronspindelkopplung) (VDI-Nst.-Signal DB31..,DBX84.4)
Bit 5: "Positionierbetrieb" (VDI-Nst.-Signal DB31..,DBX84.5)
Bit 6: "Pendelbetrieb" (Getriebestufenwechsel) (VDI-Nst.-Signal DB31..,DBX84.6)
Bit 7: "Drehzahlsteuerbetrieb" (VDI-Nst.-Signal DB31..,DBX84.7)
Bit 8: "Spindel programmiert" (z.B. M3, M4 S.., FC18, ..)     (VDI-Nst.-Signal DB31..,DBX64.4/5 oder 6/7)
Bit 9: "Drehzahlgrenze überschritten" (VDI-Nst.-Signal DB31..,DBX83.0)
Bit 10: "Solldrehzahl begrenzt" (VDI-Nst.-Signal DB31..,DBX83.1), aktiv, wenn die Drehzahl durch Programmierung oder Override größer werden würde als die maximal mögliche Drehzahl ($AC_SMAXVELO)
Bit 11: "Solldrehzahl erhöht" (VDI-Nst.-Signal DB31..,DBX83.2) aktiv, wenn die Drehzahl durch Programmierung oder Override kleiner werden würde als die minimale Drehzahl (Systemvariablen $AC_SMINVELO)
Bit 12: "Spindel im Sollbereich" (VDI-Nst.-Signal DB31..,DBX83.5)
Bit 13: "Istdrehrichtung rechts" (VDI-Nst.-Signal DB31..,DBX83.7)
Bit 14: "Spindel beschleunigt" aktiv, solange die Spindel auf die vorgegebene Solldrehzahl sollwertseitig beschleunigt.
Bit 15: "Spindel bremst" aktiv, solange die Spindel auf die vorgegebene Solldrehzahl bzw. Stillstand sollwertseitig abbremst.
Bit 16: "Spindel steht" (VDI-Nst.-Signal DB31..,DBX61.4)
Bit 17: "Werkzeug mit Dynamiklimitierung aktiv" (VDI-Nst.-Signal DB31..,DBX85.0)
Bit 18: Reserviert
Bit 19: "Spindel in Position" (VDI-Nst.-Signal DB31..,DBX85.5)
Bit 20: "Lageregelung aktiv" (VDI-Nst.-Signal DB31..,DBX61.5)
Bit 21: "Referenziert/Synchronisiert 1" (VDI-Nst.-Signal DB31..,DBX60.4)
Bit 22: "Referenziert/Synchronisiert 2" (VDI-Nst.-Signal DB31..,DBX60.5)
Bit 23: Spindeldrehrichtung wird invertiert aufgrund des Nst.-Signals "M3/M4 invertieren" (DB31..,DBX17.6)
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_ISO2_HNO</name>
<brief>H-Nummer im ISO2 Modus</brief>
<description>Enthält für die 3 Geometrie-Dimensionen die jeweils angewählte Korrekturnummer von H. (Werkzeuglängen-Korrektur) Indizierung entsprechend $P_TOOLL[n].
= -1: Es ist H99 programmiert bzw. es wurde im Siemens-Modus D1 aktiviert.
= -2: Es ist im Siemens-Modus ein D&gt;2 programmiert worden
= -3: Es ist ISO2-Modus nicht aktivierbar.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_ISO2_DNO</name>
<brief>D-Nummer im ISO2 Modus</brief>
<description>Enthält für den Radius die angewählte Korrekturnummer D
= -1: Es ist H99 programmiert bzw. es wurde im Siemens-Modus D1 aktiviert.
= -2: Es ist im Siemens-Modus ein D&gt;2 programmiert worden
= -3: Es ist ISO2-Modus nicht aktivierbar.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_ISO3_DNO</name>
<brief>D-Nummer im ISO3 Modus</brief>
<description>Enthält für den ISO3 Modus die angewählte Korrekturnummer von H
= -1: Es ist H99 programmiert bzw. es wurde im Siemens-Modus D1 aktiviert.
= -2: Es ist im Siemens-Modus ein D&gt;2 programmiert worden
= -3: Es ist ISO2-Modus nicht aktivierbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PREP_ACT_LOAD</name>
<brief>aktuelle Laufzeit des Vorlaufs</brief>
<description>Die Variable $AC_PREP_ACT_LOAD liefert die aktuelle Laufzeit des Vorlaufs im  Kanal.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PREP_MAX_LOAD</name>
<brief>Längste Laufzeit des Vorlaufs</brief>
<description>Die Variable $AC_PREP_MAX_LOAD liefert die längste Netto-Laufzeit des Vorlaufs im Kanal.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PREP_MIN_LOAD</name>
<brief>Kürzeste Laufzeit des Vorlaufs</brief>
<description>Die Variable $AC_PREP_MIN_LOAD liefert die kürzeste Netto-Laufzeit des Vorlaufs im Kanal.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PREP_ACT_LOAD_GROSS</name>
<brief>aktuelle Laufzeit des Vorlaufs</brief>
<description>Die Variable $AC_PREP_ACT_LOAD_GROSS liefert die aktuelle Brutto-Laufzeit des Vorlaufs im Kanal.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PREP_MAX_LOAD_GROSS</name>
<brief>Längste Laufzeit des Vorlaufs</brief>
<description>Die Variable $AC_PREP_MAX_LOAD_GROSS liefert die längste Brutto-Laufzeit des Vorlaufs im Kanal.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PREP_MIN_LOAD_GROSS</name>
<brief>Kürzeste Laufzeit des Vorlaufs</brief>
<description>Die Variable $AC_PREP_MIN_LOAD_GROSS liefert die kürzeste Brutto-Laufzeit des Vorlaufs im Kanal.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_IPO_STATE</name>
<brief>Status Kennung aktive Funktionen</brief>
<description>Die Variable liefert ausgewählte Information darüber ob bestimmte Funktionen aktiv sind:
Bit 0: Frei-Form-Flächen Mode ist aktiv
Bit 1: Kompressor aktiv
Bit 2: Vektor Interpolation (z.B. Großkreisinterpolation) für Werkzeugorientierung ist aktiv
Bit 3: Reserviert für Glättung

Hinweis:
Diese Variable kann nur in Synchronaktionen gelesen werden und nicht direkt im Teileprogramm.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_CTOL</name>
<brief>Aktive Konturtoleranz</brief>
<description>Die Systemvariable $AC_CTOL nennt die Konturtoleranz für Kompressor und Überschleifen, mit welcher der aktuelle Hauptlaufsatz aufbereitet wurde.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_OTOL</name>
<brief>Aktive Orientierungstoleranz</brief>
<description>Die Systemvariable $AC_OTOL nennt die Orientierungstoleranz für Kompressor und Überschleifen, mit welcher der aktuelle Hauptlaufsatz aufbereitet wurde.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_CTOL</name>
<brief>Programmierte Konturtoleranz</brief>
<description>Die Systemvariable $P_CTOL nennt die mit CTOL im Teileprogramm programmierte Konturtoleranz für Kompressor und Überschleifen. Ist kein Wert programmiert, liefert die Variable -1.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_OTOL</name>
<brief>Programmierte Orientierungstoleranz</brief>
<description>Die Systemvariable $P_OTOL nennt die mit OTOL im Teileprogramm programmierte Orientierungstoleranz für Kompressor und Überschleifen. Ist kein Wert programmiert, liefert die Variable -1.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_FGROUP_MASK</name>
<brief>Bitcodierter Wert von Achsen, die zur Bahngeschwindigkeit beitragen.</brief>
<description>Die Variable liefert einen bitcodierten Wert von programmierten Kanalachsen , die über den FGROUP-Befehl zur Bahngeschwindigkeit beitragen.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_FGROUP_MASK</name>
<brief>Bitcodierte Maske von Achsen, die zur Bahngeschwindigkeit beitragen</brief>
<description>Die Variable liefert einen bitcodierten Wert von programmierten Kanalachsen, die über den FGROUP-Befehl zur Bahngeschwindigkeit beitragen.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_AUXFU_EXT</name>
<brief>Extension der aktiven Hilfsfunktion</brief>
<description>Die Feldvariable $AC_AUXFU_EXT[n] dient zum Lesen der Extension der zuletzt für eine Hilfsfunktionsgruppe aufgesammelten (Suchlauf) oder ausgegebenen Hilfsfunktion. Hilfsfunktionen sind Gruppen zugeordnet. Der Index entspricht der um eins dekrementierten Gruppennummer. Der Index 0 ermittelt also die Extension der zuletzt ausgegebenen Hilfsfunktion der 1. Gruppe. Ist für die spezifizierte Gruppe noch keine Hilfsfunktion ausgegeben worden, so liefert die Variable den Wert -1. Der zugehörige Wert der Hilfsfunktion kann mit der Variablen $AC_AUXFU_VALUE[n] ermittelt werden. Die Variable $AC_AUXFU_STATE[n] ermittelt den aktuellen Ausgabestatus.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_AUXFU_STATE</name>
<brief>Ausgabestatus der aktiven Hilfsfunktion</brief>
<description>Die Feldvariable $AC_AUXFU_STATE[n] dient zum Lesen des Ausgabestatuses der zuletzt für eine Hilfsfunktionsgruppe aufgesammelten (Suchlauf) oder ausgegebenen Hilfsfunktion. Hilfsfunktionen sind Gruppen zugeordnet. Der Index entspricht der um eins dekrementierten Gruppennummer. Der Index 0 ermittelt also den Status der zuletzt ausgegebenen Hilfsfunktion der 1. Gruppe. Ist für die spezifizierte Gruppe noch keine Hilfsfunktion ausgegeben worden, so liefert die Variable den Wert 0. Ist der Wert größer Null, dann kann der zugehörige Hilfsfunktionswert mit der Variablen $AC_AUXFU_VALUE[n] ermittelt werden. Die Variable $AC_AUXFU_EXT[n] ermittelt die aktuellen Erweiterung der Hilfsfunktion.

Die Variable liefert folgende Werte:
0: Hilfsfunktion ist nicht vorhanden
1: Hilfsfunktion wurde per Suchlauf aufgesammelt
2: Hilfsfunktion wurde an die PLC ausgegeben
3: Hilfsfunktion wurde an die PLC ausgegeben und die Transportquittierung ist erfolgt.
4: Hilfsfunktion wird von der PLC verwaltet und ist von der PLC übernommen worden.
5: Hilfsfunktion wird von der PLC verwaltet und die Funktionsquittierung ist erfolgt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_AUXFU_VALUE</name>
<brief>Wert der aktiven Hilfsfunktion</brief>
<description>Die Feldvariable $AC_AUXFU_VALUE[n] dient zum Lesen des Wertes der zuletzt für eine Hilfsfunktionsgruppe aufgesammelten (Suchlauf) oder ausgegebenen Hilfsfunktion. Hilfsfunktionen sind Gruppen zugeordnet. Der Index entspricht der um eins dekrementierten Gruppennummer. Der Index 0 ermittelt also den Wert der zuletzt ausgegebenen Hilfsfunktion der 1. Gruppe. Ist für die spezifizierte Gruppe noch keine Hilfsfunktion ausgegeben worden, so liefert die Variable den Wert -1. Die zugehörige Extension kann mit der Variablen $AC_AUXFU_EXT[n] ermittelt werden. Die Variable $AC_AUXFU_STATE[n] ermittelt den aktuellen Ausgabestatus.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AC_AUXFU_TICK</name>
<brief>Ausgabezähler der aktiven Hilfsfunktion</brief>
<description>Die Feldvariable $AC_AUXFU_TICK[groupIndex, n] dient zum Lesen der drei Ausgabezähler der zuletzt für eine Hilfsfunktionsgruppe auf gesammelten (Suchlauf) oder ausgegebenen Hilfsfunktion. Die Variable wird bei jeder Ausgabe einer Hilfsfunktion verändert.
n = 0:    Ausgabesequenzzähler (Alle Ausgaben innerhalb eines IPO-Taktes)
n = 1:    Paket-Zähler innerhalb einer Ausgabesequenz im Interpolationstakt
n = 2:    Hilfsfunktionszähler innerhalb eines Paketes
Ein Hilfsfunktionspaket besteht aus max. 10 Hilfsfunktionen. Pro Kanal können während SERUPRO zwei Pakete pro IPO-Takt abgearbeitet werden. Innerhalb eines IPO-Taktes können über alle Kanäle eine Ausgabesequenz von bis zu 20 Paketen abgearbeitet werden. Hilfsfunktionen, die in einem IPO-Takt aufgesammelt wurden, haben alle den gleichen Sequenzzähler. Hilfsfunktionen, die in einem Paket (Satz oder Synact) aufgesammelt wurden, haben alle den gleichen Paketzähler. Der Hilfsfunktionszähler wird bei jeder aufgesammelten Hilfsfunktion inkrementiert.
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>$AC_AUXFU_TYPE</name>
<brief>Typ der aktiven Hilfsfunktion</brief>
<description>Die Feldvariable $AC_AUXFU_TYPE[n] dient zum Lesen des Typs M, H, S, T, D, F, L der zuletzt für eine Hilfsfunktionsgruppe aufgesammelten (Suchlauf) oder ausgegebenen Hilfsfunktion. Hilfsfunktionen sind Gruppen zugeordnet. Der Index entspricht der um eins dekrementierten Gruppennummer. Der Index 0 ermittelt also den Type der zuletzt ausgegebenen Hilfsfunktion der 1. Gruppe. Ist für die spezifizierte Gruppe noch keine Hilfsfunktion ausgegeben worden, so liefert die Variable den Wert "". Der zugehörige Wert der Hilfsfunktion kann mit der Variablen $AC_AUXFU_VALUE[n] ermittelt werden. Die Variable $AC_AUXFU_STATE[n] ermittelt den aktuellen Ausgabestatus.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_AUXFU_PREDEF_INDEX</name>
<brief>Predef-Index der aktiven Hilfsfunktion</brief>
<description>Die Feldvariable $AC_AUXFU_PREDEF_INDEX[n] dient zum Lesen des vordefinierten Index der zuletzt für eine Hilfsfunktionsgruppe auf gesammelten (Suchlauf) oder ausgegebenen Hilfsfunktion. Hilfsfunktionen sind Gruppen zugeordnet. Der Feldindex entspricht der um eins dekrementierten Gruppennummer. Der Index 0 ermittelt also den vordefinierten Index der zuletzt ausgegebenen Hilfsfunktion der 1. Gruppe. Ist für die spezifizierte Gruppe noch keine Hilfsfunktion ausgegeben worden oder ist die Hilfsfunktion eine anwenderdefinierte Hilfsfunktion, so liefert die Variable den Wert -1. Der zugehörige Wert der Hilfsfunktion kann mit der Variablen $AC_AUXFU_VALUE[n] ermittelt werden. Die Variable $AC_AUXFU_STATE[n] ermittelt den aktuellen Ausgabestatus.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_AUXFU_SPEC</name>
<brief>Ausgabespezifikation der aktiven Hilfsfunktion</brief>
<description>Die Feldvariable $AC_AUXFU_SPEC[n] dient zum Lesen der Ausgabe-Spezifikation, entsprechend $MC_AUXFU_PREDEF_SPEC[n], $MC_AUXFU_ASSIGN_SPEC[n] der zuletzt für eine Hilfsfunktionsgruppe aufgesammelten (Suchlauf) oder ausgegebenen Hilfsfunktion. Hilfsfunktionen sind Gruppen zugeordnet. Der Index entspricht der um eins dekrementierten Gruppennummer. Der Index 0 ermittelt also die Spezifikation der zuletzt ausgegebenen Hilfsfunktion der 1. Gruppe. Der zugehörige Wert der Hilfsfunktion kann mit der Variablen $AC_AUXFU_VALUE[n] ermittelt werden. Die Variable $AC_AUXFU_STATE[n] ermittelt den aktuellen Ausgabestatus.

Die Ausgabe-Spezifikation ist bit-kodiert:
Bit 0 = 1  Quittierung "normal" nach einen OB1-Takt
Bit 1 = 1  Quittierung "quick" mit OB40
Bit 2 = 1  keine vordefinierte Hilfsfunktion
Bit 3 = 1  keine Ausgabe an die PLC
Bit 4 = 1  Spindelreaktion nach der Quittung durch die PLC
Bit 5 = 1  Ausgabe vor der Bewegung
Bit 6 = 1  Ausgabe während der Bewegung
Bit 7 = 1  Ausgabe am Satzende
Bit 8 = 1  keine Ausgabe nach Satzsuchlauf Type 1,2,4
Bit 9 = 1  Aufsammlung während Satzsuchlauf Type 5 (SERUPRO)
Bit 10 = 1 keine Ausgabe während Satzsuchlauf Type 5 (SERUPRO)
Bit 11 = 1 kanalübergreifende Hilfsfunktion (SERUPRO)
Bit 12 = 1 Ausgabe erfolgte über Synchronaktion
Bit 13 = 1 implizite Hilfsfunktion
Bit 14 = 1 aktives M01
Bit 15 = 1 keine Ausgabe während Einfahr-/Testlauf
Bit 16 = 1 Nibbeln aus
Bit 17 = 1 Nibbeln ein
Bit 18 = 1 Nibbeln
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_TRAFRAME_P</name>
<brief>Frame des Werkstückanteils einer aktiven Orientierungstransformation</brief>
<description>Diese Variable liefert den Frame, der die aktuelle Drehung und Verschiebung des Werkstückanteils einer aktiven kinematischen Orientierunstransformation beschreibt. Unter Werkstückanteil wird hier die kinematische Kette verstanden, die vom Maschinennullpunkt zum Werkstückbezugspunkt definiert ist.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_TRAFRAME_T</name>
<brief>Frame des Werkstückanteils einer aktiven Orientierungstransformation</brief>
<description>Diese Variable liefert den Frame, der die aktuelle Drehung und Verschiebung des Werkzeuganteils einer aktiven kinematischen Orientierunstransformation beschreibt. Unter Werkzeuganteil wird hier die kinematische Kette verstanden, die vom Maschinennullpunkt zum Werkzeugbezugspunkt definiert ist.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_FZ</name>
<brief>Programmierter Zahnvorschub</brief>
<description>Die Variable $P_FZ dient zum Lesen des zuletzt programmierten Zahnvorschub FZ.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_FZ</name>
<brief>Programmierter, wirksamer Zahnvorschub</brief>
<description>Die Variable $AC_FZ dient zum Lesen des programmierten wirksamen Zahnvorschubes FZ.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_F_TYPE</name>
<brief>Typ des programmierten Vorschubes</brief>
<description>Die Variable $P_F_TYPE dient zum Lesen des Typs des zuletzt programmierten Vorschubes.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_F_TYPE</name>
<brief>Typ des programmierten, wirksamen Vorschubes</brief>
<description>Die Variable $AC_F_TYPE dient zum Lesen des Typs des programmierten wirksamen Vorschubes.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_SVC</name>
<brief>Programmierte Schnittgeschwindigkeit</brief>
<description>Die Variable $P_SVC[&lt;SpindelNr&gt;] dient zum Lesen der zuletzt programmierten Schnittgeschwindigkeit SVC.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_SVC</name>
<brief>Programmierter, wirksamer Schnittgeschwindigkeit</brief>
<description>Die Variable $AC_SVC[&lt;SpindelNr&gt;] dient zum Lesen der programmierten wirksamen Schnittgeschwindigkeit SVC.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_S_TYPE</name>
<brief>Typ der Spindelprogrammierung</brief>
<description>Die Variable $P_S_TYPE dient zum Lesen des Typs der Spindelprogrammierung.
   0 Spindel nicht programmiert
   1 Spindeldrehzahl, S in U/min
   2 Schnittgeschwindigkeit, SVC in m/min bzw. ft/min
   3 konstante Schnittgeschwindigkeit, S in m/min bzw. ft/min
   4 konstante Scheibenumfangsgeschwindigkeit, S in m/s bzw. ft/s
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_S_TYPE</name>
<brief>Typ der wirksamen Spindelprogrammierung</brief>
<description>Die Variable $P_S_TYPE dient zum Lesen des wirksamen Typs der Spindelprogrammierung.
   0  Spindel nicht programmiert
   1  Spindeldrehzahl, S in U/min
   2 Schnittgeschwindigkeit, SVC in m/min bzw. ft/min
   3 konstante Schnittgeschwindigkeit, S in m/min bzw. ft/min
   4 konstante Scheibenumfangsgeschwindigkeit, S in m/s bzw. ft/s
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VC_SGEAR</name>
<brief>Aktuell eingelegte Spindelgetriebestufe</brief>
<description>Die Variable $VC_SGEAR[&lt;SpindelNr&gt;] ermittelt die aktuell eingelegte Spindelgetriebestufe. $AC_SGEAR[&lt;SpindelNr&gt;] ermittelt die Soll-Getriebestufe im Hauptlauf. Bei Suchlauf kann sich die Ist-Getriebestufe von der Soll-Getriebestufe unterscheiden, da während des Suchlaufes kein Getriebestufenwechsel stattfindet. Mit Hilfe von $VC_SGEAR[&lt;SpindelNr&gt;] und $AC_SGEAR[&lt;SpindelNr&gt;] kann also abgefragt werden, ob ein Getriebestufenwechsel nach einem Suchlauf erfolgen soll.

Folgende Werte sind möglich:
1: 1. Getriebestufe ist aktiv
....
5: 5. Getriebestufe ist aktiv
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_ORI_POS</name>
<brief>Positionen der Orientierungsachsen bei Orientierungsprogrammierung</brief>
<description>Die Winkel der Orientierungsachsen, die sich bei Orientierungsprogrammierung ergeben.
Dabei verweist der erste Index (0 oder 1) auf die Lösung, der zweite Index (0..2) auf die Orientierungsachse, siehe dazu auch $P_ORI_SOL und $P_ORI_STAT. Beim Aufruf der Funktion ORISOLH im Modus "Werkzeug ausrichten direkt" enthalten die Variablen $P_ORI_POS[0 /1, 1] und P_ORI_POS[0 /1, 2] die zu den beiden Lösungen gehörenden Werte der beiden Winkel BETA und GAMMA.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_ORI_DIFF</name>
<brief>Abweichung der Achspositionen vom theor. Wert bei Orientierungsprogr.</brief>
<description>Die Differenz zwischen den exakten und den in $P_ORI_POS zur Verfügung gestellten Positionen der Orientierungsachsen, die sich bei Orientierungsprogrammierung ergeben. Der Inhalt kann nur dann ungleich Null sein, wenn der Positionen gerastert werden (Hirth-Verzahnung), d.h wenn das Systemdatum $NT_HIRTH_INCR der betreffenden Achse ungleich Null ist und wenn diese Achse eine manuelle Rundachse ist. Dabei verweist der erste Index (0 oder 1) auf die Lösung, der zweite Index (0..2) auf die Orientierungsachse, siehe dazu auch $P_ORI_SOL.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_ORI_SOL</name>
<brief>Zahl der Lösungen bei Orientierungsprogrammierung</brief>
<description>Werden bei einer Orientierungstransformation mit mehr als einer Orientierungsachse die Achspositionen berechnet, die zu einer vorgegebenen Orientierung führen sollen, gibt es im Allgemeinen mehr als eine Lösung. In diesem Systemdatum ist die Anzahl der gültigen Lösungen zusammen mit zusätzlichen Statusinformationen enthalten. Der Inhalt von $P_ORI_SOL ist folgendermaßen codiert:

Negative Werte: Allgemeine Fehlerzustände.
-1:   Für die aktive Transformation wurden noch keine Lösungen berechnet (fehlender Aufruf von ORISOL).
-2:   Es ist keine Transformation aktiv, oder die aktive Transformation ist keine Orientierungstransformation, die Positionen zu einer vorgegebenen Orientierungsprogrammierung liefern kann.
-5:   Beim Aufruf von ORISOLH für "Schwenken direkt" wurde keine Lösung gefunden.
-6:   Beim Aufruf von ORISOLH für "Schwenken direkt" ist der Winkel GAMMA zu groß.
-7:   Beim Aufruf von ORISOLH für "Schwenken direkt" wurde ein Winkel vorgegeben, der aufgrund der Hirthverzahnung nicht einstellbar ist.

Einerstelle: Anzahl der mathematisch möglichen Lösungen ohne Berücksichtigung von Achsgrenzen und evtl. Fehlerbedingungen.
0:    Es existiert keine Lösung, d.h. die verlangte Orientierung ist nicht einstellbar.
1:    Es existiert eine Lösung.
2:    Es existieren zwei Lösungen.
9:    Es existieren unendlich viele Lösungen, d.h. die Position mindestens einer Orientierungsachse ist unbestimmt. Die unbestimmte Achse kann aus der Hunderterstelle oder aus der Systemvariablen $P_ORI_STAT ermittelt werden.

Zehnerstelle: Bitcodierte Anzeige für verletzte Achsgrenzen. Die genaue Fehlerursache kann aus der Systemvariablen $P_ORI_STAT ermittelt werden.
Bit 0 (Wert 10):   Für mindestens eine Lösung ist mindestens eine Achsgrenze der 1. Orientierungsachse verletzt.
Bit 1 (Wert 20):   Für mindestens eine Lösung ist mindestens eine Achsgrenze der 2. Orientierungsachse verletzt.
Bit 2 (Wert 40):   Für mindestens eine Lösung ist mindestens eine Achsgrenze der 3. Orientierungsachse verletzt.

Hunderterstelle: Bitcodierte Anzeige für nicht definierte Achspositionen (kann nur auftreten, wenn es unendlich viele Lösungen gibt, d.h. wenn die Einerstelle gleich 9 ist).
Bit 0 (Wert 100): Die Position der 1. Orientierungsachse ist nicht definiert.
Bit 1 (Wert 200): Die Position der 2. Orientierungsachse ist nicht definiert.
Bit 2 (Wert 400): Die Position der 3. Orientierungsachse ist nicht definiert.

Die Bezeichnungen 1., 2. und 3. Orientierungsachse beziehen sich auf die Definition der Achsen in den Trafodaten $NT_ROT_AX_NAME.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_ORI_STAT</name>
<brief>Status der Orientierungsachsen</brief>
<description>Die Systemvariable enthält für jede Orientierungsachse deren Status nach dem Aufruf von ORISOL.
Der Index n von $P_ORI_STAT[n] entspricht dabei dem Index der betreffenden Orientierungsachse in den Trafodaten $NT_ROT_AX_NAME[n].
Der Inhalt von $P_ORI_SOL ist folgendermaßen codiert:

Negative Werte: Allgemeine Fehlerzustände.
-1:   Der Status ist nicht definiert (fehlender Aufruf von ORISOL).
-2:   Es ist keine Transformation aktiv, oder die aktive Transformation ist keine Orientierungstransformation, die Positionen zu einer vorgegebenen Orientierungsprogrammierung liefern kann.
-3:   Die Achse ist in der aktiven Transformation nicht enthalten.
-4:   Die Position der Achse kann nicht berechnet werden weil mit der gegebenen Kinematik die verlangte Orientierung auch bei beliebig angenommenem Verfahrbereich der Achse nicht erreichbar ist.
-5:   Beim Aufruf der Funktion ORISOLH für "Schwenken direkt", wurden Achspositionen derart vorgegeben, dass entweder der Orientierungsvektor oder der Orientierungsnormalenvektor des Werkzeugs parallel zur ersten Orientierungsachse, deren Position berechnet werden soll, ausgerichtet ist. Die Position dieser Achse ist in diesen Fällen nicht definiert.
-6:   Beim Aufruf von ORISOLH für "Schwenken direkt" ist der Winkel GAMMA zu groß.
-7:   Beim Aufruf von ORISOLH für "Schwenken direkt" wurde ein Winkel vorgegeben, der aufgrund der Hirthverzahnung nicht einstellbar ist.
-8:   Die erste Orientierungsachse darf nicht als Hirthachse parametriert sein.
-9:   Sowohl die zweite als auch die dritte Rundachse ist als Hirthachse parametriert. Es darf nur max. eine der beiden Achsen Hirthachse sein
-10:  Es wurde keine Anpassung an die Hirthachsverzahnung gefunden.

Einerstelle: Bitcodierte Anzeige für verletzte Achsgrenzen der ersten Lösung.
Bit 0 (Wert 1):    Die erste Lösung verletzt die untere Achsgrenze.
Bit 1 (Wert 2):    Die erste Lösung verletzt die obere Achsgrenze.

Zehnerstelle: Bitcodierte Anzeige für verletzte Achsgrenzen der zweiten Lösung.
Bit 0 (Wert 10):   Die zweite Lösung verletzt die untere Achsgrenze.
Bit 1 (Wert 20):   Die zweite Lösung verletzt die obere Achsgrenze.

Hunderterstelle: Anzeige einer nicht definierten Achsposition.
Bit 0 (Wert 100):  Die Position der Orientierungsachse ist nicht definiert, d.h. die verlangte Orientierung wird mit jeder beliebigen Einstellung der Rundachse erreicht (Polstellung). Diese Information ist auch in der Systemvariablen $P_ORI_SOL enthalten.

Von den Fehlercodes, die eine Verletzung der Achsgrenzen anzeigen, können mehrere gleichzeitig auftreten. Da bei der Verletzung einer Achsgrenze versucht wird, durch Addition bzw. Subtraktion von Vielfachen von 360 Grad eine Position innerhalb der erlaubten Achsgrenzen zu erreichen, ist  - falls dies nicht möglich ist - nicht eindeutig definiert, ob die untere oder die obere Achsgrenze verletzt wurde. Gibt es für die verlangte Orientierung keine Lösung ($P_ORI_SOL gleich 0), ist der Status der in der Transformation enthaltenen Orientierungsachsen 0.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_MTOOLN</name>
<brief>Anzahl definierter Multitools</brief>
<description>Anzahl definierter Multitools, die dem Kanal zugeordnet sind
BTSS-Bausteintyp= MTV
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_MTOOLMT</name>
<brief>Multitoolnummer</brief>
<description>$P_MTOOLMT[i]
i-te Multitoolnummer
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_MTOOLNT</name>
<brief>Anzahl der Werkzeuge im Multitool</brief>
<description>Anzahl der Werkzeuge im Multitool
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$P_MTOOLT</name>
<brief>T-Nummer des i-ten WZs im MT</brief>
<description>T-Nummer des i-ten Werkzeugs im Multitool
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_MYMTN</name>
<brief>MT-Nummer des Eigentümermultitools      eines Werkzeugs</brief>
<description>Die Variable $A_MYMTN[t] liefert die MT-Nummer des Eigentümermultitools des Werkzeugs mit der T-Nr. t.
&gt;0  Das WZ mit der T-Nummer t befindet sich Multitool mit der MT-Nummer
=0      Das WZ mit der T-Nummer t ist nicht in einem Multitool
= -1 Funktion WZMG nicht aktiv
= -2 Funktion Multitool nicht aktiv
= -3 t ist kein WZ_T_Nr.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_TOOLMTN</name>
<brief>Multitool-Nummer des WZ</brief>
<description>$A_TOOLMTN[t]
Multitool-Nummer von WZ t
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_MYMTLN</name>
<brief>Eigentümermultitoolplatzes des WZ</brief>
<description>$A_MYMTLN[t]
Nummer des Eigentümermultitoolplatzes des Werkzeugs mit der T-Nr. t.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_TOOLMTLN</name>
<brief>Multitoolplatz-Nummer</brief>
<description>$A_TOOLMTLN[t]
Multitoolplatz-Nummer von WZ t
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_TOOLIS</name>
<brief>wird ein Einfach-WZ oder ein Multitool  transportiert?</brief>
<description>-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
0: das transportierte WZ ist ein Einzel-WZ.
1: das transportierte WZ ist ein MT mit Platznummer als Distanzkodierung.
2: das transportierte WZ ist ein MT mit Längenabstand als Distanzkodierung.
3: das transportierte WZ ist ein MT mit Winkelabstand als Distanzkodierung.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_TC_MTDIST</name>
<brief>Abstand des WZs im Multitool vom Referenzplatz</brief>
<description>Abstand des WZs im Multitool vom Referenzplatz.
-1.0: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_MTNLOC</name>
<brief>Anzahl der Plätze des im WZ-Wechsel bzw. WZ-Transport befindlichen MT</brief>
<description>Anzahl der Plätze des im WZ-Wechsel bzw. WZ-Transport befindlichen Multitools.
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
 0: Das Neu-WZ des Kommandos an PLC ist ein Einzel-WZ.
&gt;=2: Das Neu-WZ des Kommandos an PLC ist ein MT mit der genannten Anzahl von Plätzen.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_MTTN</name>
<brief>Nummer des Multitools in dem das Neu-WZ ist</brief>
<description>Nummer des Multitools in dem das Neu-WZ ist
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
 0: Das Neu-WZ des Kommandos an PLC ist ein Einzel-WZ.
&gt;0: Das Neu-WZ des Kommandos an PLC ist ein MT mit dieser Nummer.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_TC_MTLTN</name>
<brief>Nummer des Multitoolplatzes mit dem       Neu-WZ</brief>
<description>Nummer des Multitoolplatzes mit dem Neu-WZ.
-1: Zum Lesezeitpunkt ist kein Kommando der WZV aktiv.
 0: Das Neu-WZ des Kommandos an PLC ist ein Einzel-WZ.
&gt;0: MT-Platz-Nummer des Zielplatzes des Neu-WZs.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_PRTIME_B</name>
<brief>Programmlaufzeit pro Satz</brief>
<description>Die Variable $AC_PRTIME_B "ProgramRunTIME-Block" ermittelt die Programmlaufzeit pro Satz.
Während der Simulation wird die zu erwartende Bearbeitungszeit der Sätze des Teileprogrammes berechnet und in dieser Systemvariablen und der BTSS-Variablen 'acPRTimeB' zur Verfügung gestellt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_STOLF</name>
<brief>Aktiver G00 Toleranz Faktor</brief>
<description>$AC_STOLF nennt den G00 Toleranz Faktor für Kompressor und Überschleifen, mit welcher der aktuelle Hauptlaufsatz aufbereitet wurde.
Wurde kein G00 Toleranz Faktor mit STOLF = &lt;... &gt; programmiert, so wird der Wert des Maschinendatums $MC_G0_TOLERANCE_FACTOR gelesen.
Ist kein Eilgang (G00) aktiv, so liefert diese Variable auf jeden Fall den Wert 1.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_STOLF</name>
<brief>Programmierter G00 Toleranz Faktor</brief>
<description>$P_STOLF nennt die mit STOLF im Teileprogramm programmierten G00-Toleranz Faktor für Kompressor und Überschleifen. Ist kein Wert programmiert, liefert die Variable den Wert des MD $MC_G0_TOLERANCE_FACTOR. Ist kein Eilgang (G00) aktiv, so liefert diese Variable auf jeden Fall den Wert 1.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_TMNOIS</name>
<brief>Ist Nummer T-Nummer, Magazinnummer, oder MT-Nummer</brief>
<description>$P_TMNOIS[t]
 3 = Index ist die Nummer eines definierten WZs und die Nummer eines definierten Magazins
 2 = Index ist die Nummer eines definierten Magazins
 1 = Index ist die T-Nummer eines definierten WZs
 0 = Index ist die MT-Nummer eines definierten Multitools
-3 = ungültiger Index. Ist weder die Nummer eines WZs noch die Nummer eines Multitools.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_BLOCK_PROGINFO</name>
<brief>Satzinformationen</brief>
<description>Die Variable $AC_BLOCK_PROGINFO liefert Informationen über den aktuellen Hauptlaufsatz.
Die Variable ist bitcodiert.
Bit 0: Satz ist Hauptprogrammende ( M02, M17, M30 oder RET(ASUP) )
Bit 1: Satz ist Unterprogrammende
Bit 2: Satz ist letzter Initialisierungssatz
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_WP_STAT</name>
<brief>Fehlerstatus nach Aufruf der Prozedur WORKPIECE</brief>
<description>Enthält den Fehlerstatus des letzten Aufrufs der Prozedur WORKPIECE.
Die Variable ist folgendermaßen codiert:
0:  Beim Aufruf der Funktion ist kein Fehler aufgetreten.
1:  Es ist kein Speicherplatz zum Anlegen eines Werkstückschutzbereich vorhanden.
2:  Der Name der angegebenen kinematischen Kette wurde nicht gefunden.
3:  Der Name des angegebenen kinematischen Kettengliedes wurde nicht gefunden.
4:  Es wurde ein ungültiger Framename angegeben (es sind nur die Bezeichner programmierbarer Frames zugelassen).
5:  Der angegebene Schutzbereichstyp kann von NCK nicht interpretiert werden.
6:  Unzulässiger Name des Werkstückschutzbereichs. Werkstückschutzbereiche müssen mit __WORKP beginnen.
7:  Es wurde keine Schutzbereichsdefinition mit dem angegebenen Namen gefunden.
8:  Reserviert (Fehlercode nicht belegt).
9:  Reserviert (Fehlercode nicht belegt).
10: Die Angabe des Schutzbereichstyps fehlt.
11: Für den Schutzbereich des Typs "Box" wurden weniger als drei Parameter angegeben.
12: Für den Schutzbereich des Typs "CYLINDER" wurden weniger als zwei Parameter angegeben.
n:  Ungültige(r) Parameter (die genaue Bedeutung der möglichen Fehlercodes muss noch festgelegt / erweitert werden).
Der Fehlerstatus wird bei Reset auf 0 zurückgesetzt, wird im Übrigen aber nur bei einem erneuten Aufruf der Prozedur WORKPIECE verändert.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_FIX_STAT</name>
<brief>Fehlerstatus nach Aufruf der Prozedur Fixture</brief>
<description>Enthält den Fehlerstatus des letzten Aufrufs der Prozedur FIXTURE.
Die Variable ist folgendermaßen codiert:
0:  Beim Aufruf der Funktion ist kein Fehler aufgetreten.
1:  Es ist kein Speicherplatz zum Anlegen eines Spannmittelschutzbereichs vorhanden.
2:  Der Name der angegebenen kinematischen Kette wurde nicht gefunden.
3:  Der Name des angegebenen kinematischen Kettengliedes wurde nicht gefunden.
4:  Es wurde ein ungültiger Framename angegeben (es sind nur die Bezeichner programmierbarer Frames zugelassen).
5:  Der angegebene Schutzbereichstyp kann von NCK nicht interpretiert werden.
6:  Reserviert (Fehlercode nicht belegt).
7:  Es wurde keine Schutzbereichsdefinition mit dem angegebenen Namen gefunden.
8:  Der Name des Spannmittelschutzbereichs wurde nicht angegeben.
9:  Unzulässiger Name des Spannmittelschutzbereichs. Spannmittelschutzbereiche müssen mit __FIXTURE beginnen.
10: Die Angabe des Schutzbereichstyps fehlt.
11: Für den Schutzbereich des Typs "Box" wurden weniger als drei Parameter angegeben.
12: Für den Schutzbereich des Typs "CYLINDER" wurden weniger als zwei Parameter angegeben.
n:  Ungültige(r) Parameter (die genaue Bedeutung der möglichen Fehlercodes muss noch festgelegt / erweitert werden).
Der Fehlerstatus wird bei Reset auf 0 zurückgesetzt, wird im Übrigen aber nur bei einem erneuten Aufruf der Prozedur FIXTURE verändert.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$PC_TRAFO_ROT_CHAIN_INDEX</name>
<brief>Index der i-ten Rundachse in der kinematischen Kette</brief>
<description>Liefert die Stellung einer Rundachse (Orientierungsachse) in der internen Repräsentation einer Transformation.
Die Stellung einer Orientierungsachse ist dabei folgendermaßen definiert:
Durchläuft man die kinematische Kette einer aktiven Transformation vom Tisch zum Werkzeug, so erhält die erste Orientierungsachse den Index 0, die zweite den Index 1 usw. Diese Systemvariable ist (derzeit) nur dann sinnvoll anwendbar, wenn eine mit kinematischen Ketten definierte Orientierungstransformation aktiv ist. Ist diese Bedingung nicht erfüllt, ist der Rückgabewert -1.

Beispiel:
$NT_ROT_AX_NAME[n, 0] = "ORI_TOOL"
$NT_ROT_AX_NAME[n, 1] = "ORI_PART"
$NT_ROT_AX_NAME[n, 2] = ""

Wenn "ORI_TOOL" - wie der Name nahelegt - das Werkzeug dreht und "ORI_PART" das Werkstück, erhält man als Ergebnis beim Auslesen von $PC_TRAFO_ROT_CHAIN_INDEX die folgenden Werte:
_INDEX = $PC_TRAFO_ROT_CHAIN_INDEX[0] = 1  ; _INDEX = 1, da die erste Orientierungsachse die zweite Orientierungsachse in der kinematischen Kette ist.
_INDEX = $PC_TRAFO_ROT_CHAIN_INDEX[1] = 0  ; _INDEX = 0, da die zweite Orientierungsachse die erste Orientierungsachse in der kinematischen Kette ist.
_INDEX = $PC_TRAFO_ROT_CHAIN_INDEX[2] = -1 ; _INDEX = -1 da keine dritte Orientierungsachse definiert ist (5-Achs-Transformation).
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>$PC_TRAFO_ROT_CHAN_AX_IN</name>
<brief>Kanalachse der n-ten Rundachse einer Trafo</brief>
<description>Liefert den Kanalachsbezeichner der i-ten Rundachse (Orientierungsachse) in der internen Repräsentation einer Transformation.
Die i-te Orientierungsachse ist dabei folgendermaßen definiert:
Durchläuft man die kinematische Kette einer aktiven Transformation vom Werkstück zum Werkzeug, so erhält die erste Orientierungsachse den Index 0, die zweite den Index 1 usw. Der Index i kann mit Hilfe der Systemvariablen $PC_TRAFO_ROT_CHAIN_INDEX aus dem Eintrag im Systemdatum $NT_ROT_AX_NAME[n, j] ermittelt werden.

Beispiel:
DEF AXIS B_AX_CHAN DEF INT CHAIN_INDEX
.
.
; Verweist z.B. auf ein kin. Kettenelement, das die Maschinenachse B11 beschreibt.
$NT_ROT_AX_NAME[n, 0] = "ROT_TOOL_B"
.
.
; Orientierungstransformation aktivieren CHAIN_INDEX = $PC_TRAFO_ROT_CHAIN_INDEX[0]
; Liefert z.B. den Wert 1, wenn B11 bei einer 5-Achstransformation das Werkzeug dreht.
TRAFOON("ORI_TRAFO_TEST")
.
.
; Kanalachsbezeichner der Maschinenachse B11 ermitteln G0 AX[B_AX_CHAN] = 45.
; Achse als Kanalachse verfahren
B_AX_CHAN = $PC_TRAFO_ROT_CHAN_AX[CHAIN_INDEX]

Diese Systemvariable ist (derzeit) nur dann sinnvoll anwendbar, wenn Orientierungstransformation aktiv ist. Ist diese Bedingung nicht erfüllt, wird der Alarm 14782 ausgegeben.
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>$PC_TRAFO_ROT_CHAN_AX_EX</name>
<brief>Kanalachse der n-ten Rundachse einer Trafo</brief>
<description>Liefert den Kanalachsbezeichner der Rundachse (Orientierungsachse), die im Transformationsdatum $NT_ROT_AX_NAME[n, i] der aktuell aktiven Transformation definiert ist. Ist die aktuell aktive Orientierungstransformation nicht mit Hilfe kinematischer Ketten definiert, ist der Rückgabewert dieser Systemvariablen der gleiche wie der der Systemvariablen $PC_TRAFO_ROT_CHAN_AX_IN. Diese Systemvariable ist (derzeit) nur dann sinnvoll anwendbar, wenn Orientierungstransformation aktiv ist. Ist diese Bedingung nicht erfüllt, wird der Alarm 14782 ausgegeben.
</description>
</parameter>

<parameter type="STRING" dim="0">
<name>$AC_TRAFO_TYPE_NAME</name>
<brief>Transformationstyp (String)</brief>
<description>Beispiele:"TRANSMIT" oder "TRAORI_STAT"
</description>
</parameter>

<parameter type="STRING" dim="0">
<name>$PC_TRAFO_TYPE_NAME</name>
<brief>Transformationstyp (String)</brief>
<description>Beispiele:"TRANSMIT" oder "TRAORI_STAT"
</description>
</parameter>

<parameter type="STRING" dim="0">
<name>$P_CUTMODK</name>
<brief>Zuletzt programmierter Wert von CUTMODK</brief>
<description>Liest den aktuell gültigen Wert der zuletzt mit dem Sprachbefehl CUTMODK programmiert wurde (Name der mit kinematischen Ketten definierten Orientierungstransformation, für die die Schneidendatenmodifikation aktiviert werden soll).
</description>
</parameter>

<parameter type="STRING" dim="0">
<name>$AC_CUTMODK</name>
<brief>Im aktuellen Satz gültiger Wert von CUTMODK</brief>
<description>Liest den im aktuellen Satz aktuell gültigen Wert der des Sprachbefehls CUTMODK (Name der mit kinematischen Ketten definierten Orienteriungstransformation, für die die Schneidendatenmodifikation aktiviert werden soll).
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_SIM_TIME_STEP</name>
<brief>Zeitschritt in der Simulation</brief>
<description>Die Variable $AC_SIM_TIME_STEP ermittelt während der Simulation den aktuellen Zeitschritt in Sekunden. Ein Zeitschritt entspricht 1..n IPO-Takte in der realen Bearbeitungszeit. Jeder Zeitschritt in der Simulation wird in einem IPO-Takt abgearbeitet. Der Wert der Variablen ist größer Null, wenn das Bit4 in $MN_PROG_TEST_MASK gesetzt ist und die Simulation angewählt ist.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_SIM_TIME_BLOCK</name>
<brief>Aktuelle reale Bearbeitungszeit eines Satzes</brief>
<description>Die Variable $AC_SIM_TIME_BLOCK ermittelt während der Simulation die aktuelle reale Bearbeitungszeit eines Satzes in Sekunden. Die reale Bearbeitungszeit eines Satzes ist die Zeit, die bei normaler Programmbearbeitung verstreicht und nicht die Zeit, die während der Simulation vergeht. Der Wert der Variablen ist größer Null, wenn das Bit4 in $MN_PROG_TEST_MASK gesetzt ist und die Simulation angewählt ist.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_SIM_MODE</name>
<brief>Simulationsmode</brief>
<description>Die Variable $P_SIM_MODE ermittelt den Simulationsmode.

Es sind folgende Werte möglich:
0: Keine Simulation aktiv.
1: Simulationsmode ist aktiv.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_SIM_MODE</name>
<brief>Simulationsmode</brief>
<description>Die Variable $AC_SIM_MODE ermittelt den Simulationsmode.

Es sind folgende Werte möglich:
0: Keine Simulation aktiv.
1: Simulationsmode ist aktiv.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_COLLPOS</name>
<brief>Kollisionsposition im Weltkoordinatensystem.</brief>
<description>Berührungspunkt zweier Kollisionskörper beim Auftreten eines Kollisionsalarms.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_CUTMOD_ERR</name>
<brief>Fehlerzustand nach letztem Aufruf von CUTMOD</brief>
<description>Fehlerzustand nach dem letzten Aufruf der CUTMOD-Funktion (die CUTMOD-Funktion kann auch implizit bei Werkzeugwechsel aufgerufen werden). Die Variable wird bei RESET auf Null zurückgesetzt. Sie wird bei jedem Werkzeugwechsel zunächst zurückgesetzt und gegebenenfalls neu beschrieben.

Die Variable ist Bit-codiert. Die Bits haben die folgenden Bedeutungen:
Bit 0:   Für das aktive Werkzeug ist keine gültige Schnittrichtung definiert.
Bit 1:   Die Schneidenwinkel (Freiwinkel und Halterwinkel) des aktiven Werkzeugs sind beide Null.
Bit 2:   Der Freiwinkel des aktiven Werkzeugs hat einen unzulässigen Wert (kleiner 0 Grad oder größer 180 Grad).
Bit 3:   Der Halterwinkel des aktiven Werkzeugs hat einen unzulässigen Wert (kleiner 0 Grad oder größer 90 Grad).
Bit 4:   Der Plattenwinkel des aktiven Werkzeugs hat einen unzulässigen Wert (kleiner 0 Grad oder größer 90 Grad).
Bit 5:   Die Kombination Schneidenlage - Halterwinkel des aktiven Werkzeugs ist unzulässig (bei den Schneidenlagen 1 bis 4 muss der Halterwinkel kleiner oder gleich 90 Grad sein, bei den Schneidenlagen 5 bis 8 muss er größer oder gleich 90 Grad sein).
Bit 6:   Unzulässige Drehung des aktiven Werkzeugs (das Werkzeug wurde um +/-90 Grad (mit einer Toleranz von etwa 1 Grad) aus der aktiven Bearbeitungsebene herausgedreht). Dadurch ist die Schneidenlage in der Bearbeitungsebene nicht mehr definiert.
Bit 7:   Die Scheidplatte liegt nicht in der Bearbeitungsebene, und der Winkel zwischen Schneidplatte und Bearbeitungsebene überschreitet die mit dem Settingdatum $SC_CUTMOD_PLANE_TOL vorgegebene Obergrenze.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_ATD</name>
<brief>Schneiden-Parameter der angegebenen Schneide, aktives Werkzeug</brief>
<description>$P_ATD[n, dNo]
Aktive Werkzeugkorrekturen der Schneide dNo
n: Parameternummer 1 - 36
n = 1-25  $TC_DP1 bis $TC_DP25
n = 26    $TC_DPCE  CuttingeEdge-Nummer der Schneide (Funktion: Eindeutige D-Nummer)
n = 27    $TC_DPH   H-Nummer der Schneide (Funktion: ISO-Mode)
n = 28    $TC_DPV   Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 29    $TC_DPV3  Komponente 1 der Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 30    $TC_DPV4  Komponente 2 der Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 31    $TC_DPV5  Komponente 3 der Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 32    $TC_DPVN3 Normalen Vektor-Komponente 1 (Funktion: WZ-Orientierung)
n = 33    $TC_DPVN4 Normalen Vektor-Komponente 2 (Funktion: WZ-Orientierung)
n = 34    $TC_DPVN5 Normalen Vektor-Komponente 3 (Funktion: WZ-Orientierung)
n = 35    $TC_DPNT  Anzahl der Zähne der Schneide
n = 36    $TC_DPROT Grunddrehwinkel der Schneide
Gehört ein Korrekturparameter zu einer Funktion, die nicht aktiv ist, kommt ein Alarm.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_ATDT</name>
<brief>Aktive Werkzeugkorrekturen der angegebenen Schneide (aktives Werkzeug)</brief>
<description>$P_ATDT[n]
Aktive Werkzeugkorrekturen
n: Parameternummer 1 - 36
n = 1-25  $TC_DP1 bis $TC_DP25
n = 26    $TC_DPCE  CuttingeEdge-Nummer der Schneide (Funktion: Eindeutige D-Nummer)
n = 27    $TC_DPH   H-Nummer der Schneide (Funktion: ISO-Mode)
n = 28    $TC_DPV   Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 29    $TC_DPV3  Komponente 1 der Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 30    $TC_DPV4  Komponente 2 der Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 31    $TC_DPV5  Komponente 3 der Werkzeug-Orientierung (Funktion: WZ-Orientierung)
n = 32    $TC_DPVN3 Normalen Vektor-Komponente 1 (Funktion: WZ-Orientierung)
n = 33    $TC_DPVN4 Normalen Vektor-Komponente 2 (Funktion: WZ-Orientierung)
n = 34    $TC_DPVN5 Normalen Vektor-Komponente 3 (Funktion: WZ-Orientierung)
n = 35    $TC_DPNT  Anzahl der Zähne der Schneide
n = 36    $TC_DPROT Grunddrehwinkel der Schneide
Gehört ein Korrekturparameter zu einer Funktion, die nicht aktiv ist, kommt ein Alarm.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$PC_GCC_STATE</name>
<brief>Status des G-Code-Converters</brief>
<description>Die Variable $PC_GCC_STATUS zeigt den Status des G-CodeConverters an.

Der Wert der Variable ist wie folgt zu interpretieren:
0 = G-Codekonverter ist nicht angewählt.
1 = Der G-Codekonverter ist per HMI selektiert, mit dem nächsten NC-Start wird das aktive Programm konvertiert.
2 = Die G-Codekonvertierung ist aktiv, das angewählte Programm ist in Bearbeitung.
3 = Der G-Codekonverter ist mit dem Sprachbefehl GCCDISABLE unterbrochen, keine Trace-Ausgabe in die GCC-Datei.

Hinweis:
Die Variable wird bei Reset automatisch auf 0 gesetzt. Wird die Variable bei laufender Konvertierung über BTSS auf 0 gesetzt, wird die Konvertierung beendet.
</description>
</parameter>

<parameter type="STRING" dim="0">
<name>$AC_TRAFO_NAME</name>
<brief>Transformationsname (String)</brief>
<description>Beispiel: "6-Axes-Transformation"
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_TH_OF_D</name>
<brief>Werkzeughalter bzw. Spindel, der die aktive Korrektur D bestimmt</brief>
<description>Werkzeughalter bzw. Spindel auf der das aktive Werkzeug sitzt, das die aktive D-Korrektur enthält.
&gt;0:  erfolgreicher Lesezugriff
 0:  Kein Werkzeughalter bzw. Spindel als Bezug verfügbar, weil z.B. keine D-Korrektur aktiv ist.
-1:  Funktion ist nicht verfügbar, weil WZFD aktiv ist.
Wenn als BTSS-Variable gelesen, gilt dies für den Zustand im aktuellen Hauptlauf-Satz
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_MTHNUM_BEFORE_SEARCH</name>
<brief>Master-Toolholder bzw. -Spindel vor dem Suchlauf</brief>
<description>Werkzeughalter bzw. -spindel bevor der Suchlauf bzw. Testbetrieb begonnen wurde.
&gt;0:  erfolgreicher Lesezugriff
 0:  Kein Werkzeughalter bzw. Spindel als Bezug verfügbar, weil z.B. keine D-Korrektur aktiv ist.
-1:  Funktion ist nicht verfügbar, weil WZFD aktiv ist.
Wenn der Suchlauf bzw. Testbetrieb beendet ist, enthält diese Variable ab der nächsten D-Programmierung den gleichen Wert wie $P_MTHNUM.
Wenn als BTSS-Variable gelesen, gilt dies für den Zustand im aktuellen Hauptlauf-Satz.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_D_BEFORE_SEARCH</name>
<brief>aktive Korrektur D vor Suchlauf</brief>
<description>Die aktive D-Korrektur bevor der Suchlauf bzw. Testbetrieb begonnen wurde.
&gt;0:  erfolgreicher Lesezugriff
 0:  Kein Werkzeughalter bzw. Spindel als Bezug verfügbar, weil z.B. keine D-Korrektur aktiv war bzw. ist.
-1:  Funktion ist nicht verfügbar, weil WZFD aktiv ist.
Wenn der Suchlauf bzw. Testbetrieb beendet ist, enthält diese Variable ab der nächsten D-Programmierung den gleichen Wert wie $P_TOOL.
Wenn als BTSS-Variable gelesen, gilt dies für den Zustand im aktuellen Hauptlauf-Satz.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_DL_BEFORE_SEARCH</name>
<brief>aktive Korrektur DL vor Suchlauf</brief>
<description>Die aktive Einricht- bzw. Summenkorrektur bevor der Suchlauf bzw. Testbetrieb begonnen wurde.
&gt;0:  erfolgreicher Lesezugriff
 0:  Kein Werkzeughalter bzw. Spindel als Bezug verfügbar, weil z.B. keine DL-Korrektur aktiv war bzw. ist.
-1:  Funktion ist nicht verfügbar, weil WZFD aktiv ist.
Wenn der Suchlauf bzw. Testbetrieb beendet ist, enthält diese Variable ab der nächsten D- bzw. DL-Programmierung den gleichen Wert wie $P_DLNO.
Wenn als BTSS-Variable gelesen, gilt dies für den Zustand im aktuellen Hauptlauf-Satz.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TOOL_O_ACT</name>
<brief>Aktive Sollorientierung</brief>
<description>$AC_TOOL_O_ACT[n,i]
Aktive Sollorientierung in verschiedenen Koordinatensystemen.
n = 1, 2, 3: Komponenten des Vektors
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TOOL_O_END</name>
<brief>Endorientierung des aktiven Satzes</brief>
<description>$AC_TOOL_O_END[n,i]
Endorientierung des aktiven Satzes in verschiedenen Koordinatensystem:
n = 1, 2, 3: Komponenten des Vektors
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOL_O_DIFF</name>
<brief>Restwinkel der Orientierung im aktiven Satz</brief>
<description>$AC_TOOL_O_DIFF[i]
Restwinkel der Werkzeugorientierung im aktiven Satz in verschiedenen Koordinatensystemen:
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
Restwinkel der Werkzeugorientierung im aktiven Satz
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_TOOL_O</name>
<brief>Aktive Werkzeugorientierung</brief>
<description>$P_TOOL_O[n,i]
Aktive Werkzeugorientierung in verschiedenen Koordinatensystemen:
n = 1, 2, 3: Komponenten des Vektors
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VC_TOOL_O</name>
<brief>Istorientierung</brief>
<description>$VC_TOOLO[n,i]
Istorientierung in verschiedenen Koordinatensystemen
n = 1, 2, 3: Komponenten des Vektors
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VC_TOOL_O_DIFF</name>
<brief>Winkel zwischen Soll- und Istorientierung</brief>
<description>$VC_TOOL_O_DIFF[i]
Winkel zwischen Soll- und Istorientierung in verschiedenen Koordinatensystemen:
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TOOL_R_ACT</name>
<brief>Aktive Werkzeugdrehrichtung</brief>
<description>$AC_TOOL_R_ACT[n,i]
Aktiver Solldrehrichtungsvektor in verschiedenen Koordinatensystemen
Auf Länge 1 normierter Vektor mit den Komponenten (n = 1, 2, 3) mit dem Wertebereich -1, ..., 1.
1: x-Komponente
2: y-Komponente
3: z-Komponente
Falls kein Werkzeug aktiv ist, wird abhängig von der aktiven Ebene folgender Richtungsvektor geliefert:
G17: (0, 1, 0)
G18: (1, 0, 0)
G19: (0, 0, 1)
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
G19: (0, 0, 1)
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TOOL_R_END</name>
<brief>Enddrehrichtungsvektor</brief>
<description>$AC_TOOL_R_END[n,i]
Enddrehrichtungsvektor des aktiven Satzes in verschiedenen Koordinatensystemen
Auf Länge 1 normierter Vektor mit den Komponenten (n = 1, 2, 3) mit dem Wertebereich -1, ..., 1.
1: x-Komponente
2: y-Komponente
3: z-Komponente
Falls kein Werkzeug aktiv ist, wird abhängig von der aktiven Ebene folgender Richtungsvektor geliefert:
G17: (0, 1, 0)
G18: (1, 0, 0)
G19: (0, 0, 1)
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOL_R_DIFF</name>
<brief>Restwinkel der Werkzeugdrehrichtung</brief>
<description>$AC_TOOL_R_DIFF[i]
Restwinkel der Werkzeugdrehrichtung im aktiven Satz in Grad, Wertebereich 0 ... 180 Grad in verschiedenen Koordinatensystemen:
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
Restwinkel der Werkzeugdrehrichtung im aktiven Satz in Grad, Wertebereich 0 ... 180 Grad.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_TOOL_R</name>
<brief>Programmierte Werkzeugdrehrichtung</brief>
<description>$P_TOOL_R[n,i]
Programmierte Werkzeugdrehrichtung in verschiedenen Koordinatensystemen
Auf Länge 1 normierter Vektor mit den Komponenten (n = 1, 2, 3) mit dem Wertebereich -1, ..., 1.
1: x-Komponente
2: y-Komponente
3: z-Komponente
Falls kein Werkzeug aktiv ist, wird abhängig von der aktiven Ebene folgender Richtungsvektor geliefert:
G17: (0, 1, 0)
G18: (1, 0, 0)
G19: (0, 0, 1)
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
G19: (0, 0, 1)
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VC_TOOL_R</name>
<brief>Istdrehrichtungvektor</brief>
<description>$VC_TOOL_R[n,i]
Istdrehrichtungvektor des Werkzeugs in verschiedenen Koordinatensystemen
Auf Länge 1 normierter Vektor mit den Komponenten (n = 1, 2, 3) mit dem Wertebereich -1, ..., 1.
1: x-Komponente
2: y-Komponente
3: z-Komponente
Falls kein Werkzeug aktiv ist, wird abhängig von der aktiven Ebene folgender Richtungsvektor geliefert:
G17: (0, 1, 0)
G18: (1, 0, 0)
G19: (0, 0, 1)
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VC_TOOL_R_DIFF</name>
<brief>Winkel zwischen Soll- und Istdrehung</brief>
<description>$VC_TOOL_R_DIFF[i]
Winkel zwischen Soll- und Istdrehrichtung des Werkzeugs in Grad, Wertebereich 0 ... 180 Grad in verschiedenen Koordinatensystemen:
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
Winkel zwischen Soll- und Istdrehrichtung des Werkzeugs in Grad, Wertebereich 0 ... 180 Grad.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$P_EXTBUF</name>
<brief>Name des Nachladepuffers einer Programmebene für Abarbeiten von extern</brief>
<description>$P_EXTBUF[n]
Liefert für Programmebene n den Namen des Nachladepuffers für Abarbeiten von extern im passiven Filesystem. Wird die Programmebenen nicht im Modus "Abarbeiten von extern" bearbeitet, liefert $P_EXTBUF[n] einen Leerstring.

Beispiele:
Das Hauptprogramm MAIN.MPF wird im ersten Kanal per HMI Operate für Abarbeiten von extern angewählt:
$P_EXTBUF[0] liefert den Programmnamen "_N_MAIN_MPF".

In der ersten Unterprogrammebene wird ein Teileprogramm per EXTCALL-Befehl abgearbeitet:
$P_EXTBUF[1] liefert den Programmnamen "_N_EXTBUF11_SYF".
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$P_EXTPATH</name>
<brief>Pfad des Nachladepuffers einer Programmebene für Abarbeiten von extern</brief>
<description>$P_EXTPATH[n]
Liefert für Programmebene n den Pfad des Nachladepuffers für Abarbeiten von extern im passiven Filesystem. Wird die Programmebenen nicht im Modus "Abarbeiten von extern" bearbeitet, liefert $P_EXTPATH[n] einen Leerstring.

Beispiele:
Das Hauptprogramm wird im ersten Kanal per HMI Operate für Abarbeiten von extern angewählt:
$P_EXTPATH[0] liefert den Pfad "/_N_EXT_DIR/_N_EXTMOD_DIR/_N_CHAN1_DIR/".

In der ersten Unterprogrammebene wird ein Teileprogramm per EXTCALL-Befehl abgearbeitet:
$P_EXTPATH[1] liefert den Pfad "/SYF_DIR/".
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_OFF_O</name>
<brief>Programmierter Offset für Werkzeugorientierung</brief>
<description>$P_OFF_O[n]
Programmierter Offset für die Werkzeugorientierung
n = 1, 2, 3
1: x-Komponente des Vektors
2: y-Komponente des Vektors
3: z-Komponente des Vektors
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_OFF_R</name>
<brief>Programmierter Offset für Drehung des Werkzeugs</brief>
<description>$P_OFF_R[n]
Programmierter Offset für die Drehung des Werkzeugs (nur bei 6-Achs-Kinematiken)
n = 1, 2, 3
1: x-Komponente des Vektors
2: y-Komponente des Vektors
3: z-Komponente des Vektors
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_OFF_LEAD</name>
<brief>Programmierter Offset für LEAD Winkel</brief>
<description>Programmierter Offset für den LEAD Winkel.
Die Interpretation des LEAD-Winkels wird durch das MD $MC_ORIPATH_MODE festgelegt.
Der Offset Winkel kommt nur dann zur Wirkung, falls sich die GEO-Achsen bewegen.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_OFF_TILT</name>
<brief>Programmierter Offset für TILT Winkel</brief>
<description>Programmierter Offset für den LEAD Winkel.
Die Interpretation des LEAD-Winkels wird durch das MD $MC_ORIPATH_MODE festgelegt.
Der Offset Winkel kommt nur dann zur Wirkung, falls sich die GEO-Achsen bewegen.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_OFF_THETA</name>
<brief>Programmierter Offset für THETA Winkel</brief>
<description>Programmierter Offset für den THETA Winkel.
Der Offset Winkel THETA kommt nur dann zur Wirkung, falls sich die GEO-Achsen bewegen und es sich um eine 6-Achs-Kinematik handelt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_OFF_O</name>
<brief>Offset für Werkzeugorientierung</brief>
<description>$AC_OFF_O[n]
Offset zur aktuellen Werkzeugorientierung
n = 1, 2, 3
1: x-Komponente des Vektors
2: y-Komponente des Vektors
3: z-Komponente des Vektors
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_OFF_R</name>
<brief>Offset für  Drehung des Werkzeugs</brief>
<description>$AC_OFF_R[n]
Offset zur aktuellen Drehung des Werkzeugs
n = 1, 2, 3
1: x-Komponente des Vektors
2: y-Komponente des Vektors
3: z-Komponente des Vektors
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_OFF_LEAD</name>
<brief>Aktueller Offset für LEAD Winkel</brief>
<description>Aktueller Offset für den LEAD Winkel.
Die Interpretation des LEAD-Winkels wird durch das MD $MC_ORIPATH_MODE festgelegt.
Der Offset Winkel kommt nur dann zur Wirkung, falls sich die GEO-Achsen bewegen.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_OFF_TILT</name>
<brief>Aktueller Offset für TILT Winkel</brief>
<description>Aktueller Offset für den TILT Winkel.
Die Interpretation des TILT-Winkels wird durch das MD $MC_ORIPATH_MODE festgelegt.
Der Offset Winkel kommt nur dann zur Wirkung, falls sich die GEO-Achsen bewegen.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_OFF_THETA</name>
<brief>Aktueller Offset für THETA Winkel</brief>
<description>Aktueller Offset für den THETA Winkel.
Der Offset Winkel THETA kommt nur dann zur Wirkung, falls sich die GEO-Achsen bewegen und es sich um eine 6-Achs-Kinematik handelt.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AC_OFF_ORI_LIMIT</name>
<brief>Maximal mögliche Überlagerung der Werkzeugorientierung erreicht</brief>
<description>$AC_ORI_OFF_LIMIT[i]
Maximale mögliche Überlagerung der Werkzeugorientierung ist erreicht.
Die maximal mögliche Abweichung wird durch die Winkel in $SC_OFF_ORI_LIMIT[i] eingestellt.
i = 0: Maximale Abweichung der Werkzeugorientierung ist erreicht.
i = 1: Maximale Abweichung des Drehvektors ist erreicht (nur bei 6-Achs-Kinematiken).
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TOOL_O_CORR</name>
<brief>Gesamte Sollorientierung</brief>
<description>$AC_TOOL_O_CORR[n,i]
Gesamte aktuelle Sollorientierung in verschiedenen Koordinatensystemen, inkl. evtl. vorhandener Überlagerungen der Orientierung:
n = 1, 2, 3: Komponenten des Vektors
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
Der Vektor ist auf die Länge 1 normiert.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TOOL_R_CORR</name>
<brief>Gesamte Werkzeugdrehrichtung</brief>
<description>$AC_TOOL_O_CORR[n,i]
Gesamte aktive Drehrichtung des Werkzeugs in verschiedenen Koordinatensystemen, inkl. evtl. vorhandener Überlagerungen:
n = 1, 2, 3: Komponenten des Vektors
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
Der Vektor ist auf die Länge 1 normiert.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TOOL_O_CORRD</name>
<brief>Aktive Überlagerung der Orientierung</brief>
<description>$AC_TOOL_O_CORRD[n,i]
Aktive Überlagerung der Werkzeugorientierung in verschiedenen Koordinatensystemen:
n = 1, 2, 3: Komponenten des Vektors
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
Dieser Vektor ist die Differenz der beiden Vektoren $AC_TOOL_O_CORR und $AC_TOOL_O_ACT.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TOOL_R_CORRD</name>
<brief>Aktive Überlagerung der Drehung des Werkzeugs</brief>
<description>$AC_TOOL_R_CORRD[n,i]
Aktive Überlagerung der Drehung des Werkzeugs in verschiedenen Koordinatensystemen.
n = 1, 2, 3: Komponenten des Vektors
i = 0, 1, 2: Koordinatensystem (0 : BCS, 1: PCS, 2: ENS)
Dieser Vektor ist die Differenz der beiden Vektoren $AC_TOOL_R_CORR und $AC_TOOL_R_ACT.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_SEARCH_SMODE</name>
<brief>Satzsuchlauf: Spindelbetriebsart</brief>
<description>$P_SEARCH_SMODE[n]
n: Nummer der Spindel
Es wird die sich aus der letzten Spindelprogrammierung im Satzsuchlauf ergebende Spindelbetriebsart zurückgegeben.
0: keine Spindel im Kanal vorhanden oder Spindel ist in einem anderen Kanal aktiv oder wird von PLC (FC18) bzw. von Synchronaktionen benutzt.
1: Drehzahlsteuerbetrieb
2: Positionierbetrieb
3: Synchronbetrieb
4: Achsbetrieb
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$P_IS_EES_PATH</name>
<brief>Typ der Pfad-Notation ermitteln</brief>
<description>$P_IS_EES_PATH[n]
Abfrage ob der von $P_PATH[n] gelieferte Pfad bzw. der von $P_PROG[n] gelieferte Programmname der NCK-Notation (FALSE) oder der
EES-Notation (TRUE) entspricht (EES: Execution from External Storage):

FALSE:
$P_PATH[n] und $P_PROG[n] liefern NCK-Notation. D.h. jedem Bezeichner ist eine Prefix "_N_" vorangestellt. Das Trennzeichen für die Extension ist "_".
Beispiel für Pfad bzw. Programmnamen in NCK-Notation: "/_N_WKS_DIR/_N_MYWPD_WPD/" bzw. "_N_MYPROG_MPF"

Hinweis: ein Pfad in NCK-Notation kann sich sowohl auf das passive Filesystem als auch auf den globalen Teileprogrammspeicher (GDIR)
im EES-Betrieb beziehen.

TRUE:
$P_PATH[n] und $P_PROG[n] liefern EES-Notation. D.h. den Bezeichnern ist kein Prefix "_N_" vorangestellt. Das Trennzeichen für die Extension ist ".".
Beispiel für Pfad bzw. Programmnamen in EES-Notation: "//DEV1:/WKS.DIR/MYWPD.WPD/" bzw. "MYPROG.MPF"
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$P_CUTMODKA</name>
<brief>Schneidenlagenmodifikation mit CUTMODK aktiv</brief>
<description>Schneidenlagenmodifikation für eine mit kinematischen Ketten definierte Transformation aktiv.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$AC_CUTMODKA</name>
<brief>Schneidenlagenmodifikation mit CUTMODK aktiv</brief>
<description>Schneidenlagenmodifikation für eine mit kinematischen Ketten definierte Transformation aktiv.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_M_TOOL_LENGTH_INDEX</name>
<brief>Zuordnung Werkzeuglängenkomponenten für Fräswerkzeuge</brief>
<description>Die Systemvariable liefert die Nummer der Werkzeuglängenkomponenten (1, 2 oder 3 entsprechend den Längenkomponenten L1, L2, L3) für Fräswerkzeuge, die der Geometrieachse, die als Index übergeben wurde, zugeordnet ist. Fräswerkzeuge in diesem Sinne sind alle Werkzeuge, deren Werkzeugtyp nicht zwischen 400 und 599 liegt. Die Zuordnung berücksichtigt keine Drehungen (z.B. durch kinematischen Transformationen) oder Frames. Sie hängt ab von der aktiven Ebene und den Settingdaten SD42950 $SC_TOOL_LENGTH_TYPE und SD42940 $SC_TOOL_LENGTH_CONST. Aktive Spiegelungen eines Frames können bei gesetztem Settingdatum SD42900 $SC_MIRROR_TOOL_LENGTH den Ausgabewert beeinflussen, siehe unten. Wirkt die Werkzeuglängenkomponente mit negativem Vorzeichen, wird der Index mit negativem Vorzeichen ausgegeben.Dieser Fall kann dann auftreten, wenn die Hunderterstelle des Settingdatums SD42940 $SC_TOOL_LENGTH_CONST gleich 1 ist, oder wenn eine Spiegelung der betreffenden Achse auf Grund des Settingdatums $SC_MIRROR_TOOL_LENGTH wirksam ist. Sind beide Ursachen gleichzeitig wirksam, ist das resultierende Vorzeichen wieder positiv. Adaptertransformationen werden nicht berücksichtigt, da diese werkzeugspezifisch sind.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_M_TOOL_LENGTH_INDEX</name>
<brief>Zuordnung Werkzeuglängenkomponenten für Fräswerkzeuge</brief>
<description>Die Systemvariable liefert die Nummer der Werkzeuglängenkomponenten (1, 2 oder 3 entsprechend den Längenkomponenten L1, L2, L3) für Fräswerkzeuge, die der Geometrieachse, die als Index übergeben wurde, zugeordnet ist. Fräswerkzeuge in diesem Sinne sind alle Werkzeuge, deren Werkzeugtyp nicht zwischen 400 und 599 liegt. Die Zuordnung berücksichtigt keine Drehungen (z.B. durch kinematischen Transformationen) oder Frames. Sie hängt ab von der aktiven Ebene und den Settingdaten SD42950 $SC_TOOL_LENGTH_TYPE und SD42940 $SC_TOOL_LENGTH_CONST. Aktive Spiegelungen eines Frames können bei gesetztem Settingdatum SD42900 $SC_MIRROR_TOOL_LENGTH den Ausgabewert beeinflussen, siehe unten. Wirkt die Werkzeuglängenkomponente mit negativem Vorzeichen, wird der Index mit negativem Vorzeichen ausgegeben.Dieser Fall kann dann auftreten, wenn die Hunderterstelle des Settingdatums SD42940 $SC_TOOL_LENGTH_CONST gleich 1 ist, oder wenn eine Spiege lung der betrefffenden Achse auf Grund des Settingdatums $SC_MIRROR_TOOL_LENGTH wirksam ist. Sind beide Ursachen gleichzeitig wirksam, ist das resultierende Vorzeichen wieder positiv. Adaptertransformationen werden nicht berücksichtigt, da diese werkzeugspezifisch sind.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_T_TOOL_LENGTH_INDEX</name>
<brief>Zuordnung Werkzeuglängenkomponenten für Drehwerkzeuge</brief>
<description>Die Systemvariable liefert die Nummer der Werkzeuglängenkomponenten (1, 2 oder 3 entsprechend den Längenkomponenten L1, L2, L3) für Dreh- und Schleifwerkzeuge, die der Geometrieachse, die als Index übergeben wurde, zugeordnet ist. Dreh- und Schleifwerkzeuge in diesem Sinne sind alle Werkzeuge, deren Werkzeugtyp zwischen 400 und 599 liegt. Die Zuordnung berücksichtigt keine Drehungen (z.B. durch kinematischen Transformationen) oder Frames. Sie hängt ab von der aktiven Ebene und den Settingdaten SD42950 $SC_TOOL_LENGTH_TYPE, SD42940 $SC_TOOL_LENGTH_CONST und SD42942 $SC_TOOL_LENGTH_CONST_T. Aktive Spiegelungen eines Frames können bei gesetztem Settingdatum SD42900 $SC_MIRROR_TOOL_LENGTH den Ausgabewert beeinflussen, siehe unten. Wirkt die Werkzeuglängenkomponente mit negativem Vorzeichen, wird der Index mit negativem Vorzeichen ausgegeben. Dieser Fall kann dann auftreten, wenn die Hunderterstelle des Settingdatums SD42940 $SC_TOOL_LENGTH_CONST bzw. die Hunderterstelle des Set tingdatums SD42942 $SC_TOOL_LENGTH_CONST_T gleich 1 ist, oder wenn eine Spiegelung der betreffenden Achse auf Grund des Settingdatums $SC_MIRROR_TOOL_LENGTH wirksam ist. Sind beide Ursachen gleichzeitig wirksam, ist das resultierende Vorzeichen wieder positiv. Adaptertransformationen werden nicht berücksichtigt, da diese werkzeugspezifisch sind.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_T_TOOL_LENGTH_INDEX</name>
<brief>Zuordnung Werkzeuglängenkomponenten für Drehwerkzeuge</brief>
<description>Die Systemvariable liefert die Nummer der Werkzeuglängenkomponenten (1, 2 oder 3 entsprechend den Längenkomponenten L1, L2, L3) für Dreh- und Schleifwerkzeuge, die der Geometrieachse, die als Index übergeben wurde, zugeordnet ist. Dreh- und Schleifwerkzeuge in diesem Sinne sind alle Werkzeuge, deren Werkzeugtyp zwischen 400 und 599 liegt. Die Zuordnung berücksichtigt keine Drehungen (z.B. durch kinematischen Transformationen) oder Frames. Sie hängt ab von der aktiven  Ebene und den Settingdaten SD42950 $SC_TOOL_LENGTH_TYPE, SD42940 $SC_TOOL_LENGTH_CONST und SD42942 $SC_TOOL_LENGTH_CONST_T. Aktive Spiegelungen eines Frames können bei gesetztem Settingdatum SD42900 $SC_MIRROR_TOOL_LENGTH den Ausgabewert beeinflussen, siehe unten. Wirkt die Werkzeuglängenkomponente mit negativem Vorzeichen, wird der Index mit negativem Vorzeichen ausgegeben.Dieser Fall kann  dann auftreten, wenn die Hunderterstelle des Settingdatums SD42940 $SC_TOOL_LENGTH_CONST bzw. die Hunderterstelle des Settingdatums SD42942 $SC_TOOL_LENGTH_CONST_T gleich 1 ist, oder wenn eine Spiegelung der betreffenden Achse auf Grund des Settingdatums $SC_MIRROR_TOOL_LENGTH wirksam ist. Sind beide Ursachen gleichzeitig wirksam, ist das resultierende Vorzeichen wieder positiv. Adaptertransformationen werden nicht berücksichtigt, da diese werkzeugspezifisch sind.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_ACT_TOOL_LENGTH_INDEX</name>
<brief>Zuordnung Werkzeuglängenkomponenten für das aktive Werkzeug</brief>
<description>Die Systemvariable liefert die Nummer der Werkzeuglängenkomponenten (1, 2 oder 3 entsprechend den Längenkomponenten L1, L2, L3) des aktiven Werkzeugs die der Geometrieachse, die als Index übergeben wurde, zugeordnet ist. Die Zuordnung berücksichtigt keine Drehungen (z.B. durch kinematischen Transformationen) oder Frames. Sie hängt ab vom Typ des aktiven Werkzeugs, von der aktiven Ebene, einer eventuell aktiven Adaptertransformation und den Settingdaten SD42950 $SC_TOOL_LENGTH_TYPE, SD42940 $SC_TOOL_LENGTH_CONST und SD42942 $SC_TOOL_LENGTH_CONST_T. Aktive Spiegelungen eines Frames können bei gesetztem Settingdatum SD42900 $SC_MIRROR_TOOL_LENGTH den Ausgabewert beeinflussen, siehe unten. Wirkt die Werkzeuglängenkomponente mit negativem Vorzeichen, wird der Index mit negativem Vorzeichen ausgegeben.Dieser Fall kann dann auftreten, wenn die Hunderterstelle des Settingdatums SD42940 $SC_TOOL_LENGTH_CONST bzw. die Hunderterstelle des Settingdatums SD42942 $SC_TOOL_LENGTH_CONST_T gleich 1 ist, oder wenn eine Spigelung der betreffenden Achse auf Grund des Settingdatums $SC_MIRROR_TOOL_LENGTH wirksam ist. Sind beide Ursachen gleichzeitig wirksam, ist das resultierende Vorzeichen wieder positiv.Diese Systemvariable berücksichtigt auch Adaptertransformationen. Ist kein Werkzeug aktiv, wird der Wert 0 zurückgegeben.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_ACT_TOOL_LENGTH_INDEX</name>
<brief>Zuordnung Werkzeuglängenkomponenten für das aktive Werkzeug</brief>
<description>Die Systemvariable liefert die Nummer der Werkzeuglängenkomponenten (1, 2 oder 3 entsprechend den Längenkomponenten L1, L2, L3) des aktiven Werkzeugs die der Geometrieachse, die als Index übergeben wurde, zugeordnet ist. Die Zuordnung berücksichtigt keine Drehungen (z.B. durch kinematischen Transformationen) oder Frames. Sie hängt ab vom Typ des aktiven Werkzeugs, von der aktiven Ebene, einer eventuell aktiven Adaptertransformation und den Settingdaten SD42950 $SC_TOOL_LENGTH_TYPE, SD42940 $SC_TOOL_LENGTH_CONST und SD42942 $SC_TOOL_LENGTH_CONST_T. Aktive Spiegelungen eines Frames können bei gesetztem Settingdatum SD42900 $SC_MIRROR_TOOL_LENGTH den Ausgabewert beeinflussen, siehe unten. Wirkt die Werkzeuglängenkomponente mit negativem Vorzeichen, wird der Index mit negativem Vorzeichen ausgegeben.Dieser Fall kann dann auftreten, wenn die Hunderterstelle des Settingdatums SD42940 $SC_TOOL_LENGTH_CONST bzw. die Hunderterstelle des Settingdatums SD42942 $SC_TOOL_LENGTH_CONST_T gleich 1 ist, oder wenn eine Spiegelung der betreffenden Achse auf Grund des Settingdatums $SC_MIRROR_TOOL_LENGTH wirksam ist. Sind beide Ursachen gleichzeitig wirksam, ist das resultierende Vorzeichen wieder positiv. Diese Systemvariable berücksichtigt auch Adaptertransformationen. Ist kein Werkzeug aktiv, wird der Wert 0 zurückgegeben.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_TOOLBIN</name>
<brief>Aktiver Binormalenvektor der Werkzeugorientierung</brief>
<description>Diese Systemvariable liefert den auf die Länge 1 normierten Binormalenvektor der Werkzeugorientierung. Der Vektor ist gleich dem (normierten) Kreuzprodukt aus dem Vektor $P_TOOLROT (Werkzeugnormalenvektor) und $P_TOOLO (Werkzeugorientierung). Stehen $P_TOOLROT und $P_TOOLO aufeinander senkrecht, so bilden $P_TOOLBIN (Abszisse), $P_TOOLROT (Ordinate) und $P_TOOLO (Applikate) ein rechtshändiges, orthogonales Koordinatensystem. Diese Bedingung ist nur dann nicht notwendigerweise erfüllt, wenn Werkzeugorientierung und Werkzeugnormalenvektor mit den Werkzeugdaten $TC_DPV... bzw. $TC_DPVN explizit abweichend vorgegeben wurden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_GFR</name>
<brief>Frameauswahl für Grinding Frames</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Für die Umrechnung einer Position in eine Position eines anderen Koordinatensystems kann mit Hilfe der Variablen $AC_MEAS_GFR die Zusammensetzung der gewünschten Framekette vorgegeben werden. Der Wert der Variable reicht von 1 bis 100 für die bis zu 100 ein stellbaren Frames.

Anwendung:
$AC_MEAS_GFR = 1
Es wird das GS1-Frame mit in die Berechnung des neuen Gesamtframes einbezogen.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_GFRAME</name>
<brief>Aktives Grinding Frame</brief>
<description>Die Variable $P_GFRAME dient zur Programmierung des aktiven Grinding Frames. Ein Grinding-Datenhaltungsframe $P_GFR[n] wird durch die Ausführung von GFRAME0 bis GFRAME100 zum aktiven Grinding Frame.

Bei Reset ist die Aktivierung eines Grinding Frames abhängig von folgenden Maschinendaten:
Bit0 in $MC_RESET_MODE_MASK
$MC_GCODE_RESET_MODE[63]
$MC_GCODE_RESET_VALUES[63]
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_GFRNUM</name>
<brief>Nummer des aktiven Grinding Frames</brief>
<description>Die Variable $P_GFRNUM ermittelt die Nummer des aktiven Grinding Frames. Ein Grinding-Datenhaltungsframe $P_GFR[n] wird durch die Ausführung von GFRAME0 bis GFRAME100 zum aktiven Grinding Frame.
GFRAME0: $P_GFRNUM = 0
GFRAME100: $P_GFRNUM = 100

Bei Reset ist die Aktivierung eines Grinding Frames abhängig von folgenden Maschinendaten:
Bit0 in $MC_RESET_MODE_MASK
$MC_GCODE_RESET_MODE[63]
$MC_GCODE_RESET_VALUES[63]
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AC_IN_KEY_G</name>
<brief>Schleifen: Einlesen des Schleifeingangs[n]</brief>
<description>Die Variable ermöglicht Einlesen des entsprechenden Wertes von der PLC für den NCK-Schleifeingang[n]. Das Schreiben durch das PLC-Anwenderprogramm ist nur erfolgreich, wenn mittels $AC_IN_KEY_G_ENABLE[n] und der PLC-Nahtstelle das Schreiben freigegeben ist.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AC_IN_KEY_G_ISENABLE</name>
<brief>Schleifen: Freigabestatus des Schleifeingangs[n]</brief>
<description>Die Variable für den jeweiligen Schleifeingang[n] die Verknüpfung (UND) der Freigabezustände von PLC und NCK.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AC_IN_KEY_G_RUN_OUT</name>
<brief>Schleifen: Status (NCK) der Schleiffunktion[n]</brief>
<description>Die Variable ermöglicht Aktivierung/Deaktivierung der jeweiligen Schleiffunktion[n] im Teileprogramm.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AC_IN_KEY_G_ENABLE</name>
<brief>Schleifen: Freigabe des Schleifeingangs[n]</brief>
<description>Die Variable erteilt die Freigabe des entsprechenden Schleifeingangs[n] seitens des NCK. Ein Programm-Reset sperrt automatisch alle Eingänge.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AC_IN_KEY_G_RUN_IN</name>
<brief>Schleifen: Status (PLC) der Schleiffunktion[n]</brief>
<description>Die Variable ermöglicht das Lesen des Statusbits der PLC der jeweiligen Schleiffunktion[n] in der PLC.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_IPO_BUFLA</name>
<brief>Füllstand IPO-Puffer in Prozent ohne Look-Ahead-Anteil</brief>
<description>Die Variable $AC_IPO_BUFLA ermittelt den nutzbaren Füllstand des IPO-Puffers in Prozent ohne den Look-Ahead-Anteil. Aus dem Teileprogramm wird der Wert ohne Vorlaufstopp gelesen.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TRAFO_CORR_ELEM_P</name>
<brief>Offset eines Korrekturelements in der Part-Kette einer Transformation.</brief>
<description>Die Variable liefert den Vektor $NK_OFF_DIR[..] eines Korrekturelements in der Part-Kette einer aktiven, mit kinematischen Ketten definierten, Orientierungstransformation. Der erste Index der Systemvariable verweist dabei auf den Abschnitt der Part-Kette mit dem angegebenen Index. Zu den Begriffen "Korrekturelement" und "Abschnitt" siehe die Dokumentation zur Messfunktion CORRTRAFO. Der zweite Index ist der Index der Vektorkomponente.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TRAFO_CORR_ELEM_T</name>
<brief>Offset eines Korrekturelements in der Tool-Kette einer Transformation.</brief>
<description>Die Variable liefert den Vektor $NK_OFF_DIR[..] eines Korrekturelements in der Tool-Kette einer aktiven, mit kinematischen Ketten definierten, Orientierungstransformation. Der erste Index der Systemvariable verweist dabei auf den Abschnitt der Tool-Kette mit dem angegebenen Index. Zu den Begriffen "Korrekturelement" und "Abschnitt" siehe die Dokumentation zur Messfunktion CORRTRAFO. Der zweite Index ist der Index der Vektorkomponente.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TRAFO_ORIAX_DIR_P</name>
<brief>Achsvektor einer Orientierungsachse in der Part-Kette einer Transformation.</brief>
<description>Die Variable liefert den Vektor $NK_OFF_DIR[..] (Richtungsvektor) einer Orientierungsachse in der Part-Kette einer aktiven, mit kinematischen Ketten definierten, Orientierungstransformation. Der erste Index der Systemvariable gibt dabei den Index der Orientierungsachse bei Zählung vom Kettenanfang zum Kettenende an. Der zweite Index ist der Index der Vektorkomponente.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TRAFO_ORIAX_DIR_T</name>
<brief>Achsvektor einer Orientierungsachse in der Tool-Kette einer Transformation.</brief>
<description>Die Variable liefert den Vektor $NK_OFF_DIR[..] (Richtungsvektor) einer Orientierungsachse in der Tool-Kette einer aktiven, mit kinematischen Ketten definierten, Orientierungstransformation. Der erste Index der Systemvariable gibt dabei den Index der Orientierungsachse bei Zählung vom Kettenanfang zum Kettenende an. Der zweite Index ist der Index der Vektorkomponente.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_TRAFO_ORIAX_LOC</name>
<brief>Index einer Orientierungsachse in der kin. Kette einer Orientierungstrafo.</brief>
<description>Die Variable liefert den dezimalcodierten Index einer Orientierungsachse in der kinematischen Kette einer Orientierungstransformation. Dabei bezeichnet die Zehnerstelle die Teilkette, in der die Orientierungsachse enthalten ist (0: Partkette; 1: Toolkette) und die Einerstelleden Index der Achse bei Zählung vom Kettenursprung zum Kettenende. Der Parameter muss der Kanalachsname (vom Typ AXIS)einer Rundachse sein, die als Orientierungsachse in einer aktiven Orientierungs transformation definiert ist.

Beim Lesen können folgende Fehlercodes auftreten:
-1 Es ist keine Transformation aktiv.
-2 Es ist keine mit kinematischen Ketten definierte Orientierungstransformation aktiv.
-3 Die angegebene Kanalachse ist keine Orientierungsachse der aktiven Transformation.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TRAFO_SECTION_P</name>
<brief>Abschnitt in der Part-Kette einer Transformation.</brief>
<description>Die Variable liefert den Vektor des Abschnitts (sector) in der Part-Kette einer aktiven, mit kinematischen Ketten definierten, Orientierungs transformation Weltkoordinaten. Der erste Index der Systemvariable verweist dabei auf den Abschnitt der Part-Kette mit dem angegebenen Index. Zum Begriffen "Abschnitt" siehe die Dokumentation zur Messfunktion CORRTRAFO. Der zweite Index ist der Index der Vektorkomponente.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TRAFO_SECTION_T</name>
<brief>Abschnitt in der Tool-Kette einer Transformation.</brief>
<description>Die Variable liefert den Vektor des Abschnitts (sector) in der Tool-Kette einer aktiven, mit kinematischen Ketten definierten, Orientierungs transformation in Weltkoordinaten. Der erste Index der Systemvariable verweist dabei auf den Abschnitt der Tool-Kette mit dem angegebenen Index. Zum Begriff "Abschnitt" siehe die Dokumentation zur Messfunktion CORRTRAFO. Der zweite Index ist der Index der Vektorkomponente.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$P_PROG_NAME</name>
<brief>Programmname einer Programmebene ohne Pre- und Suffix</brief>
<description>$P_PROG_NAME[n]
Liefert den Programmnamen des Programms in der Programmebene n ohne Prefix "_N_" und ohne Suffix (Datei-Extension) und Suffix- Separator. Wird die Programmebene im Modus "Abarbeiten von Extern" abgearbeitet, bezieht sich $P_PROG_NAME auf den Namen des Nachlade buffers.

Beispiele:
In Programmebene 0 = Hauptprogrammname wird das Programm _N_MYPROG_MPF abgearbeitet
$P_PROG_NAME[0] liefert den Programmnamen des Programms in der Programmebene 0 ohne Pre- und Suffix, also "MYPROG".
In Programmebene 1 wird im Nachladebuffer /_N_SYF_DIR/_N_EXTBUF11_SYF ein NC-Programm per EXTCALL-Befehl abgearbeitet
$P_PROG_NAME[1] liefert den Programmnamen des Programms in der Programmebene 1 ohne Pre- und Suffix, also "EXTBUF11".
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$P_PROG_SUFFIX</name>
<brief>Suffix des Programmnames einer Programmebene</brief>
<description>$P_PROG_SUFFIX[n]
Liefert die Datei-Extension (Suffix) des Programmnamens in der Programmebene n ohne Suffix-Separator. Die Datei-Extension ist immer drei Zeichen lang. Als Suffix-Separator wird im passiven File-System "_" und bei Programmnamen in EES-Notation "." verwendet (EES: Execution from External Storage). Wird die Programmebene im Modus "Abarbeiten von Extern" abgearbeitet, bezieht sich $P_PROG_SUFFIX auf den Nachladebuffer.

Beispiele:
In Programmebene 0 = Hauptprogrammname wird das Programm _N_MYPROG_MPF abgearbeitet
$P_PROG_SUFFIX[0] liefert die Datei-Extension des Programms in der Programmebene 0, also "MPF".
In Programmebene 1 wird im Nachladebuffer /_N_SYF_DIR/_N_EXTBUF11_SYF ein NC-Programm per EXTCALL-Befehl abgearbeitet
$P_PROG_SUFFIX[1] liefert die Datei-Extension des Programms in der Programmebene 1, also "SYF".
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_SYNA_STATE</name>
<brief>Status einer Synchronaktion</brief>
<description>Über die die Variable $AC_SYNA_STATE[ID] kann der Status einer Synchronaktion gelesen werden. Der Index ID ist die ID der modalen
oder statischen Synchronaktion, für die der Status gelesen werden soll. Der Wert ist bitcodiert.

Bitbeschreibung:
Bit 0 = 0: Kein Lock
Bit 0 = 1 Lock von PLC oder Synchronaktion
Bit 1 = 0: Kein Lock von PLC
Bit 1 = 1: Lock von PLC
Bit 2 = 0: Kein Lock von Synchronaktion
Bit 2 = 1: Lock von Synchronaktion
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AC_MEAS_ORIWKS</name>
<brief>Transformationsverhalten des Messinterfaces</brief>
<description>Variable für die Frametransformation von Orientierungsachskoordinaten. Die Variable $AC_MEAS_ORIWKS dient zur Vorgabe des Frametransformationsverhaltens des Messinterfaces bzgl. Orientierungsachs koordinaten.

Folgende Werte sind möglich:
0: Orientierungsachskoordinaten werden wie ORIMKS transformiert
1: Orientierungsachskoordinaten werden wie ORIWKS transformiert
2: Die Frametransformation der Orientierungsachskoordinaten ist abhängig vom aktive G-Code ORIMKS bzw. ORIWKS.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_ACT_ORI_TOOL_LENGTH</name>
<brief>Aktuelle Werkzeuglänge im BCS</brief>
<description>Die Variable liefert die Werkezuglängenkomponenten des aktvien Werkzeugs im Basiskoordinatensystem (BKS). Dabei wird die Werkzeugorientierung einschließlich Adapterdaten, Spieglungen und ein eventuell aktiver orintierbarer Werkzeugträger (TCARR) berücksichtigt.

Die Indizes bezeichnen dabei die Geometrieachsen mit der Zuordnung:
1: X-Achse (Abszisse)
2: Y-Achse (Abszisse)
3: Z-Achse (Abszisse)

Die Werkzeuglängen werden (abweichend vom Standard) vom Werkzeugbezugsbunkt zur Werkzeugspitze vermessen, d.h. die Komponten werden - falls keine zusätzliche Drehung aktiv ist - mit invertiertem Vorzeichen gegenüber den entprechenden Schneidendaten ausgegeben.
</description>
</parameter>

<parameter type="STRING" dim="0">
<name>$PC_TRAFO_NAME</name>
<brief>Transformationsname (String)</brief>
<description>Beispiel: "6-Axes-Transformation"
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_OFF_O_DIR</name>
<brief>Programmierter Drehvektor für Werkzeugorientierung</brief>
<description>$P_OFF_O_DIR[n]
Programmierter Drehvektor für Offset der Werkzeugorientierung
n = 1, 2, 3
1: x-Komponente des Vektors
2: y-Komponente des Vektors
3: z-Komponente des Vektors
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_OFF_R_DIR</name>
<brief>Programmierter Drehvektor für Drehung des Werkzeugs</brief>
<description>$P_OFF_R_DIR[n]
Programmierter Drehvektor für Offset der Drehung des Werkzeugs (nur bei 6-Achs-Kinematiken)
n = 1, 2, 3
1: x-Komponente des Vektors
2: y-Komponente des Vektors
3: z-Komponente des Vektors
Ist nur bei 6-Achs-Kinematiken relevant.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_OFF_O_ANGLE</name>
<brief>Programmierter Drehwinkel für Offset  der Orientierung</brief>
<description>Programmierter Drehwinkel für Drehung um den Vektor $P_OFF_O_DIR für Offset der Werkzeugorientierung.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$P_OFF_R_ANGLE</name>
<brief>Programmierter Drehwinkel für Drehung  der Orientierung</brief>
<description>Programmierter Drehwinkel für Drehung um den Vektor $P_OFF_R_DIR
für Offset der Drehung der Werkzeugorientierung (nur bei 6-Achs-Kinematiken).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_OFF_O_DIR</name>
<brief>Drehvektor für Offset der Werkzeugorientierung</brief>
<description>$AC_OFF_O_DIR[n]
Drehvektor für Offset zur aktuellen Werkzeugorientierung
n = 1, 2, 3
1: x-Komponente des Vektors
2: y-Komponente des Vektors
3: z-Komponente des Vektors
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_OFF_R_DIR</name>
<brief>Drehvektor für Offset für Werkzeugdrehung</brief>
<description>$AC_OFF_R_DIR[n]
Drehvektor für Offset zur aktuellen Werkzeugdrehung
n = 1, 2, 3
1: x-Komponente des Vektors
2: y-Komponente des Vektors
Ist nur bei 6-Achs-Kinematiken relevant.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_OFF_O_ANGLE</name>
<brief>Aktueller Drehwinkel für Offset der Orientierung</brief>
<description>Aktueller Drehwinkel für Drehung um den Vektor $AC_OFF_O_DIR für Offset der Orientierung.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AC_OFF_R_ANGLE</name>
<brief>Aktueller Drehwinkel für Offset des Drehvektors</brief>
<description>Aktueller Drehwinkel für Drehung um den Vektor $AC_OFF_R_DIR für Offset des Drehvektors des Werkzeugs. Ist nur relevant bei 6-Achs-Kinematiken.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$PC_TCARR_OFFSET</name>
<brief>Vektorkomponente n des Offsetvektors m des aktiven Toolcarriers</brief>
<description>Bei einem aktiven Toolcarrier sind maximal 4 Offsetvektoren (l1 bis l4) definiert. Mit dieser Systmvariable können die Vektorkomponenten ausgelesen werden. Dabei bezeichnet der erste Index den Index des Offsetvektors (1...4), der zweite Index die Vektorkomponente (0...3). Ist kein Toolcarrier aktiv, liefert jeder Lesezugriff den Wert 0.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$PC_TCARR_AX_VECT</name>
<brief>Vektorkomponente n des Rotationachsvektors m des aktiven Toolcarriers</brief>
<description>Bei einem aktiven Toolcarrier sind maximal 2 Rotationsachsen (v1 bis v2) definiert. Mit dieser Systmvariable können die Vektorkomponenten ausgelesen werden. Dabei bezeichnet der erste Index den Index des Rotationachsvektors (1...2), der zweite Index die Vektorkomponente (0...3). Ist kein Toolcarrier aktiv, liefert jeder Lesezugriff den Wert 0.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$PC_TCARR_AX_OFFSET</name>
<brief>Grundeinstellung der Rotationsachse.</brief>
<description>Bei einem aktiven Toolcarrier sind maximal 2 Rotationsachsen definiert. Mit dieser Systmvariable können die Positionen der Rundachsen bei Grundstellung ausgelesen werden. Dabei bezeichnet der Index den Index de Rotationsachse (1...2). Ist kein Toolcarrier aktiv, liefert jeder Lesezugriff den Wert 0.
</description>
</parameter>

<parameter type="FRAME" dim="1">
<name>$P_UIFR</name>
<brief>Einstellbare Datenhaltungsframes</brief>
<description>Die Feldvariable $P_UIFR[n] dient zur Programmierung von einstellbaren Datenhaltungsframes. Das entsprechende Datenhaltungsframe kann über G500, G54 .. G599 aktiviert werden. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden.
Über $MC_MM_NUM_USER_FRAMES wird die Anzahl der einstellbaren Frames projektiert.
0: G500
1: G54
2: G55
3: G56
4: G57
5: G505
6: G506
..
99: G599
</description>
</parameter>

<parameter type="FRAME" dim="1">
<name>$P_CHBFR</name>
<brief>Kanal-Basisframes in der Datenhaltung</brief>
<description>Die Feldvariable $P_CHBFR[n] dient zur Programmierung von kanalspezifischen Basisframes in der Datenhaltung. Die Datenhaltungsframes können über G500, G54 .. G599 aktiviert werden. Alle aktiven Basisframes werden dabei miteinander verkettet und ergeben das Summen-Basisframe $P_ACTBFRAME. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_SETFR</name>
<brief>Datenhaltungsframe für Istwertsetzen</brief>
<description>Die Variable $P_SETFR dient zur Programmierung des Systemframes in der Datenhaltung für Istwertsetzen und Ankratzen. Dieser Frame sollte nur über die Systemfunktion manipuliert und aktiviert werden. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden. Bei Reset kann das Systemframe über die Projektierung von Bit0 in $MC_CHSFRAME_RESET_CLEAR_MASK gelöscht werden.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_EXTFR</name>
<brief>Datenhaltungsframe für externes Frame</brief>
<description>Die Variable $P_EXTFR dient zur Programmierung des Systemframes in der Datenhaltung für die externe Nullpunktverschiebung. Dieser Frame wird über die PLC aktiviert. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden. Bei Reset kann das Systemframe über die Projektierung von Bit1 in $MC_CHSFRAME_RESET_CLEAR_MASK gelöscht werden.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_PARTFR</name>
<brief>Datenhaltungsframe für TCARR und PAROT</brief>
<description>Die Variable $P_PARTFR dient zur Programmierung des Systemframes in der Datenhaltung für TCARR und PAROT. Dieser Frame sollte nur über die Systemfunktion manipuliert und aktiviert werden. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_TOOLFR</name>
<brief>Datenhaltungsframe für TOROT und TOFRAME</brief>
<description>Die Variable $P_TOOLFR dient zur Programmierung des Systemframes in der Datenhaltung für TOROT und TOFRAME. Dieser Frame sollte nur über die Systemfunktion manipuliert und aktiviert werden. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_WPFR</name>
<brief>Datenhaltungsframe für das Werkstück</brief>
<description>Die Variable $P_WPFR dient zur Programmierung des Systemframes in der Datenhaltung für Werkstückbezugspunkte. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden. Bei Reset kann das Systemframe über die Projektierung von Bit4 in $MC_CHSFRAME_RESET_CLEAR_MASK gelöscht werden.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_CYCFR</name>
<brief>Datenhaltungsframe für Zyklen</brief>
<description>Die Variable $P_CYCFR dient zur Programmierung des Systemframes in der Datenhaltung für Zyklen. Dieser Frame sollte nur über Zyklen manipuliert und aktiviert werden. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden. Bei Reset kann das Systemframe über die Projektierung von Bit5 in $MC_CHSFRAME_RESET_CLEAR_MASK gelöscht werden.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_TRAFR</name>
<brief>Datenhaltungsframe für Transformationen</brief>
<description>Die Variable $P_TRAFR dient zur Programmierung des Systemframes in der Datenhaltung für Transformationen. Dieser Frame sollte nur über die Systemfunktion manipuliert und aktiviert werden. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_ISO1FR</name>
<brief>Datenhaltungsframe für ISO G51.1 Spiegeln</brief>
<description>Die Variable $P_ISO1FR dient zur Programmierung des Systemframes in der Datenhaltung für den ISO-Gcode G51.1 Spiegeln. Dieses Frame sollte nur über die Systemfunktion manipuliert und aktiviert werden. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden. Bei Reset kann das Systemframe über die Projektierung von Bit0 in $MC_CHSFRAME_RESET_CLEAR_MASK gelöscht werden.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_ISO2FR</name>
<brief>Datenhaltungsframe für ISO G68 2DROT</brief>
<description>Die Variable $P_ISO2FR dient zur Programmierung des Systemframes in der Datenhaltung für den ISO-Gcode G68 2DROT. Dieses Frame sollte nur über die Systemfunktion manipuliert und aktiviert werden. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden. Bei Reset kann das Systemframe über die Projektierung von Bit0 in $MC_CHSFRAME_RESET_CLEAR_MASK gelöscht werden.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_ISO3FR</name>
<brief>Datenhaltungsframe für ISO G68 3DROT</brief>
<description>Die Variable $P_ISO3FR dient zur Programmierung des Systemframes in der Datenhaltung für den ISO-Gcode G68 3DROT. Dieses Frame sollte nur über die Systemfunktion manipuliert und aktiviert werden. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden. Bei Reset kann das Systemframe über die Projektierung von Bit0 in $MC_CHSFRAME_RESET_CLEAR_MASK gelöscht werden.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_ISO4FR</name>
<brief>Datenhaltungsframe für ISO G51 Scale</brief>
<description>Die Variable $P_ISO4FR dient zur Programmierung des Systemframes in der Datenhaltung für den ISO-Gcode G51 Scale. Dieses Frame sollte nur über die Systemfunktion manipuliert und aktiviert werden. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden. Bei Reset kann das Systemframe über die Projektierung von Bit0 in $MC_CHSFRAME_RESET_CLEAR_MASK gelöscht werden.
</description>
</parameter>

<parameter type="FRAME" dim="0">
<name>$P_RELFR</name>
<brief>Datenhaltungsframe für relative Koordinatensysteme</brief>
<description>Die Variable $P_RELFR dient zur Programmierung des Systemframes in der Datenhaltung für relative Koordinatensysteme. Dieser Frame sollte nur über die Systemfunktion manipuliert und aktiviert werden. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden.

Die Projektierung des Systemframes erfolgt über folgende Maschinendaten:
Bit 11 in $MC_MM_SYSTEM_FRAME_MASK
Bit 11 in $MC_MM_SYSTEM_DATAFRAME_MASK
Bit 11 in $MC_CHSFRAME_RESET_MASK
Bit 11 in $MC_CHSFRAME_RESET_CLEAR_MASK
Bit 11 in $MC_CHSFRAME_POWERON_MASK
</description>
</parameter>

<parameter type="FRAME" dim="1">
<name>$P_NCBFR</name>
<brief>Globale Basisframes in der Datenhaltung</brief>
<description>Die Feldvariable $P_NCBFR[n] dient zur Programmierung von globalen Basisframes in der Datenhaltung. Die Datenhaltungsframes können über G500, G54 .. G599 aktiviert werden. Alle aktiven Basisframes werden dabei miteinander verkettet und ergeben das Summen-Basisframe $P_ACTBFRAME. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden.
</description>
</parameter>

<parameter type="FRAME" dim="1">
<name>$P_GFR</name>
<brief>Datenhaltungsframes für Schleifapplikationen</brief>
<description>Die Feldvariable $P_GFR[n] dient zur Programmierung von Datenhaltungsframes für Schleifapplikationen. Das entsprechende Datenhaltungsframe kann über GFRAME1 .. GFRAME100 aktiviert werden. Die Datenhaltungsframes werden im SRAM gespeichert und können über die Datensicherung ein- und ausgelesen werden.

Über $MC_MM_NUM_G_FRAMES wird die Anzahl der Grinding Frames projektiert.
0: GFRAME0 kein Grinding Frame ist aktiv
1: GFRAME1
..
100: GFRAME100
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$SC_PA_ACTIV_IMMED</name>
<brief>Schutzbereich sofort aktiv</brief>
<description>$SC_PA_ACTIV_IMMED[n]
n: Nummer des Schutzbereichs
Schutzbereich sofort nach Hochlauf aktiv

TRUE: Der Schutzbereich ist nach dem Hochlaufen der
Steuerung und dem Referenzieren der Achsen sofort aktiv

FALSE: Der Schutzbereich ist nicht sofort aktiv
Hinweis: Diese Variable ist nur als Systemvariable beschreibbar und wird nicht durch die NC-Sprachbefehle zwischen NPROTDEF(..) und EXECUTE(n) beeinflusst.
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_NCK_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>$SC_PA_T_W</name>
<brief>Werkstück-/Werkzeugbezog. Schutzbereich</brief>
<description>$SC_PA_T_W[n]
n: Nummer des Schutzbereichs
Werkstück-/Werkzeugbezogener Schutzbereich
0: werkstückbezogener Schutzbereich
3: werkzeugbezogener Schutzbereich
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_CHAx_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
           CHAx: x=Kanal-Nr.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$SC_PA_ORI</name>
<brief>Orientierung des Schutzbereiches</brief>
<description>$SC_PA_ORI[n]
n: Nummer des Schutzbereichs
Orientierung des Schutzbereiches
0: Polygonzug in der Ebene aus der 1. und 2. Geo-Achse (G17)
1: Polygonzug in der Ebene aus der 3. und 1. Geo-Achse (G18)
2: Polygonzug in der Ebene aus der 2. und 3. Geo-Achse (G19)
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_CHAx_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
           CHAx: x=Kanal-Nr.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$SC_PA_LIM_3DIM</name>
<brief>Wirksamkeit Appl-Begrenzung Schutzbereich</brief>
<description>$SC_PA_LIM_3DIM[n]
n: Nummer des Schutzbereichs
Kennung für Begrenzung des Schutzbereichs in der Achse, die senkrecht zum Polygonzug steht
0: keine Begrenzung
1: Begrenzung in positive Richtung
2: Begrenzung in negative Richtung
3: Begrenzung in beide Richtungen
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_CHAx_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
           CHAx: x=Kanal-Nr.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$SC_PA_PLUS_LIM</name>
<brief>Begrenzung Schutzbereich-Applikate plus</brief>
<description>$SC_PA_PLUS_LIM[n]
n: Nummer des Schutzbereichs
Positive Begrenzung der Schutzbereiche in der Achse, die senkrecht zum Polygonzug steht.
Nur wirksam wenn $SC_PA_LIM_3DIM[n]=1 oder = 3.
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_CHAx_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
           CHAx: x=Kanal-Nr.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$SC_PA_MINUS_LIM</name>
<brief>Begrenzung Schutzbereich-Applikate minus</brief>
<description>$SC_PA_MINUS_LIM[n]
n: Nummer des Schutzbereichs
Negative Begrenzung des Schutzbereiches in Minus-Richtung in der Achse, die senkrecht zum Polygonzug steht Nur wirksam wenn $SC_PA_LIM_3DIM[n]=2 oder = 3.
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_CHAx_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
           CHAx: x=Kanal-Nr.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$SC_PA_CONT_NUM</name>
<brief>Anzahl der gültigen Konturelemente</brief>
<description>$SC_PA_CONT_NUM[n]
n: Nummer des Schutzbereichs
Anzahl der gültigen Konturelemente Schutzbereiche sind erst mit mindestens 2 Konturelemente vollständig beschrieben.
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_CHAx_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
           CHAx: x=Kanal-Nr.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$SC_PA_CONT_TYP</name>
<brief>Typ des Konturelements</brief>
<description>$SC_PA_CONT_TYP"[n,m]
n: Nummer des Schutzbereichs
m: Nummer des Konturelements (0 - MAXNUM_CONTOURNO_PROTECTAREA)
Typ (G1, G2, G3) des Konturelements
=0: Kontur nicht definiert
=1: Gerade
=2: Kreiselement (im Uhrzeigersinn)
=3: Kreiselement (gegen Uhrzeigersinn)
Der Endpunkt wird durch $SC_PA_CONT_ORD bzw. $SC_PA_CONT_ABS bestimmt. Beim Konturtyp G2 und G3 bestimmt $SC_PA_CENT_ORD bzw. $SC_PA_CENT_ABS den Mittelpunkt des Kreiselements.
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_CHAx_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
           CHAx: x=Kanal-Nr.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$SC_PA_CONT_ORD</name>
<brief>Endpunkt des Konturelements (Ordinate)</brief>
<description>$SC_PA_CONT_ORD[n,m]
n: Nummer des Schutzbereichs
m: Nummer des Konturelements (0 - MAXNUM_CONTOURNO_PROTECTAREA)
Endpunkt des Konturelements (Ordinate) s. auch Beschreibung zu $SC_PA_CONT_TYP
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_CHAx_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
           CHAx: x=Kanal-Nr.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$SC_PA_CONT_ABS</name>
<brief>Endpunkt des Konturelements (Abszisse)</brief>
<description>$SC_PA_CONT_ABS[n,m]
n: Nummer des Schutzbereichs
m: Nummer des Konturelements (0 - MAXNUM_CONTOURNO_PROTECTAREA)
Endpunkt des Konturelements (Abszisse) s. auch Beschreibung zu $SC_PA_CONT_TYP
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_CHAx_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
           CHAx: x=Kanal-Nr.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$SC_PA_CENT_ORD</name>
<brief>Mittelpunkt des Konturelements (Ordinate)</brief>
<description>$SC_PA_CENT_ORD[n,m]
n: Nummer des Schutzbereichs
m: Nummer des Konturelements (0 - MAXNUM_CONTOURNO_PROTECTAREA)
Mittelpunkt des Konturelements (Ordinate) Nur von Bedeutung, wenn $SC_PA_CONT_TYP[n,m] = 2 oder = 3 ist.
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_CHAx_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
           CHAx: x=Kanal-Nr.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$SC_PA_CENT_ABS</name>
<brief>Mittelpunkt des Konturelements (Abszisse)</brief>
<description>$SC_PA_CENT_ABS[n,m]
n: Nummer des Schutzbereichs
m: Nummer des Konturelements (0 - MAXNUM_CONTOURNO_PROTECTAREA)
Mittelpunkt des Konturelements (Abszisse) Nur von Bedeutung, wenn $SC_PA_CONT_TYP[n,m] = 2 oder = 3 ist.
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_CHAx_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
           CHAx: x=Kanal-Nr.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR1</name>
<brief>X-Komponente des Offsetvektors l1</brief>
<description>$TC_CARR1[n]
x-Komponente des Offsetvektors l1
Achtung! Alle Systemparameter, die mit '$TC_' beginnen, bezeichnen Parameter, die im Bereich TOA enthalten sind.
Die spezielle Eigenschaft dieses Bereiches ist, dass es in Abhängigkeit des Maschinendatums 28085 = MM_LINK_TOA_UNIT möglich ist, dass verschiedene Kanäle der NCK auf diese Parameter zugreifen.
Wenn eine solche Parametrierung von NCK gewählt wurde, dann muss man sich beim Ändern dieser Daten im klaren sein, dass sich die Änderungen auf einen anderen Kanal störend auswirken können; bzw. man muss sich davon überzeugen,
dass sich die Änderung nur lokal auf dem Kanal der Änderung auswirkt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR2</name>
<brief>Y-Komponente des Offsetvektors l1</brief>
<description>$TC_CARR2[n]
Y-Komponente des Offsetvektors l1
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR3</name>
<brief>Z-Komponente des Offsetvektors l1</brief>
<description>$TC_CARR3[n]
Z-Komponente des Offsetvektors l1
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR4</name>
<brief>X-Komponente des Offsetvektors l2</brief>
<description>$TC_CARR4[n]
X-Komponente des Offsetvektors l2
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR5</name>
<brief>Y-Komponente des Offsetvektors l2</brief>
<description>$TC_CARR5[n]
Y-Komponente des Offsetvektors l2
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR6</name>
<brief>Z-Komponente des Offsetvektors l2</brief>
<description>$TC_CARR6[n]
Z-Komponente des Offsetvektors l2
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR7</name>
<brief>X-Komponente der Drehachse v1</brief>
<description>$TC_CARR7[n]
X-Komponente der Drehachse v1
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR8</name>
<brief>Y-Komponente der Drehachse v1</brief>
<description>$TC_CARR8[n]
Y-Komponente der Drehachse v1
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR9</name>
<brief>Z-Komponente der Drehachse v1</brief>
<description>$TC_CARR9[n]
Z-Komponente der Drehachse v1
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR10</name>
<brief>X-Komponente der Drehachse V2</brief>
<description>$TC_CARR10[n]
X-Komponente der Drehachse v2
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR11</name>
<brief>Y-Komponente der Drehachse v2</brief>
<description>$TC_CARR11[n]
Y-Komponente der Drehachse v2
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR12</name>
<brief>Z-Komponente der Drehachse v2</brief>
<description>$TC_CARR12[n]
Z-Komponente der Drehachse v2
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR13</name>
<brief>Drehwinkel alpha1 (in Grad)</brief>
<description>$TC_CARR13[n]
Drehwinkel alpha1 (in Grad)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR14</name>
<brief>Drehwinkel alpha2 (in Grad)</brief>
<description>$TC_CARR14[n]
Drehwinkel alpha2 (in Grad)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR15</name>
<brief>X-Komponente des Offsetvektors l3</brief>
<description>$TC_CARR15[n]
X-Komponente des Offsetvektors l3
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR16</name>
<brief>Y-Komponente des Offsetvektors l3</brief>
<description>$TC_CARR16[n]
Y-Komponente des Offsetvektors l3
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR17</name>
<brief>Z-Komponente des Offsetvektors l3</brief>
<description>$TC_CARR17[n]
Z-Komponente des Offsetvektors l3
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR18</name>
<brief>X-Komponente des Offsetvektors l4</brief>
<description>$TC_CARR18[n]
X-Komponente des Offsetvektors l4
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR19</name>
<brief>Y-Komponente des Offsetvektors l4</brief>
<description>$TC_CARR19[n]
Y-Komponente des Offsetvektors l4
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR20</name>
<brief>Z-Komponente des Offsetvektors l4</brief>
<description>$TC_CARR20[n]
Z-Komponente des Offsetvektors l4
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>$TC_CARR21</name>
<brief>Achsbezeichner der 1. Drehachse</brief>
<description>$TC_CARR21[n]
Achsbezeichner der 1. Drehachse
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>$TC_CARR22</name>
<brief>Achsbezeichner der 2. Drehachse</brief>
<description>$TC_CARR22[n]
Achsbezeichner der 2. Drehachse
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>$TC_CARR23</name>
<brief>Kinematiktyp</brief>
<description>$TC_CARR23[n]
Kinematiktyp: P: drehbares Werkstück (Part)
M: drehbares Werkzeug und drehbares Werkstück (Mixed)
T bzw. jedes andere Zeichen außer P und M: drehbares Werkzeug
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR24</name>
<brief>Offset der 1. Drehachse in Grad</brief>
<description>$TC_CARR24[n]
Offset der 1. Drehachse in Grad
Gibt den Winkel in Grad der 1. Drehachse an, bei dem die Achse ihre Grundstellung einnimmt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR25</name>
<brief>Offset der 2. Drehachse in Grad</brief>
<description>$TC_CARR25[n]
Offset der 2. Drehachse in Grad
Gibt den Winkel in Grad der 2. Drehachse an, bei dem die Achse ihre Grundstellung einnimmt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR26</name>
<brief>Offset der 1. Rundachse bei Hirthverzahnung</brief>
<description>$TC_CARR26[n]
Gibt den Offset der 1. Rundachse an, wenn deren Position nicht kontinuierlich veränderbar ist (Hirth-Verzahnung).
Diese Variable wird nur ausgewertet, wenn $TC_CARR28 ungleich Null ist.
Zur genauen Bedeutung siehe die Beschreibung von $TC_CARR28.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR27</name>
<brief>Offset der 2. Rundachse bei Hirth-Verzahnung</brief>
<description>$TC_CARR27[n]
Gibt den Offset der 2. Rundachse an, wenn deren Position nicht kontinuierlich veränderbar ist (Hirth-Verzahnung).
Diese Variable wird nur ausgewertet, wenn $TC_CARR29 ungleich Null ist.
Zur genauen Bedeutung siehe die Beschreibung von $TC_CARR29
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR28</name>
<brief>Minimaler Inkrementschritt der 1. Drehachse</brief>
<description>$TC_CARR28[n]
Gibt die Größe des minimalen Inkrementschrittes (in Grad) an, mit dem die 1. Drehachse verändert werden kann (z.B. bei Hirth-Verzah
nungen).
Ein programmierter oder berechneter Winkel wir auf den nächstliegenden Wert gerundet, der sich bei ganzzahligem n aus
phi = s + n * d ergibt.
Dabei ist
s = $TC_CARR28
d = $TC_CARR26 Ist $TC_CARR28 gleich Null, werden $TC_CARR26 und $TC_CARR28 nicht verwendet.
Statt dessen wird dann auf die Maschinendaten
$MC_TOCARR_ROT_ANGLE_INCR[i] und          $MC_TOCARR_ROT_ANGLE_OFFSET[i] zugegriffen.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR29</name>
<brief>Minimaler Inkrementschritt der 2. Drehachse</brief>
<description>$TC_CARR29[n]
Gibt die Größe des minimalen Inkrementschrittes (in Grad) an, mit dem die 2. Drehachse verändert werden kann (z.B. bei Hirth-Verzah
nungen).
Ein programmierter oder berechneter Winkel wir auf den nächstliegenden Wert gerundet, der sich bei ganzzahligem n aus
phi = s + n * d ergibt.
Dabei ist
s = $TC_CARR29
d = $TC_CARR27 Ist $TC_CARR29 gleich Null, werden $TC_CARR27 und $TC_CARR29 nicht verwendet.
Statt dessen wird dann auf die Maschinendaten
$MC_TOCARR_ROT_ANGLE_INCR[i] und          $MC_TOCARR_ROT_ANGLE_OFFSET[i] zugegriffen.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR30</name>
<brief>Minimalpostion der 1. Drehachse</brief>
<description>$TC_CARR30[n]
Gibt die Minimalpostion der 1. Drehachse an. Zu vollständigen Beschreibung siehe $TC_CARR32
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR31</name>
<brief>Minimalpostion der 2. Drehachse</brief>
<description>$TC_CARR31[n]
Gibt die Minimalpostion der 2. Drehachse an. Zu vollständigen Beschreibung siehe $TC_CARR33
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR32</name>
<brief>Maximalpostion der 1. Drehachse</brief>
<description>$TC_CARR32[n]
Gibt die Maximalpostion der 1. Drehachse an.
Bei der Berechnung des Winkels der 1. Drehachse eines orientierbaren Werkzeugträgers bei Ausrichtung an einem Frame (TCOFR), werden
nur solche Lösungen als gültig akzeptiert, die im Bereich $TC_CARR30 bis $TC_CARR32 liegen.
Gleiches gilt, wenn der Drehwinkel absolut programmiert wird (TCOABS).
Sind sowohl $TC_CARR30 als auch $TC_CARR32 gleich Null, werden die Begrenzungen nicht ausgewertet.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR33</name>
<brief>Maximalpostion der 2. Drehachse</brief>
<description>$TC_CARR33[n]
Gibt die Maximalpostion der 2. Drehachse an.
Bei der Berechnung des Winkels der 2. Drehachse eines orientierbaren Werkzeugträgers bei Ausrichtung an einem Frame (TCOFR), werden
nur solche Lösungen als gültig akzeptiert, die im Bereich $TC_CARR31 bis $TC_CARR33 liegen.
Gleiches gilt, wenn der Drehwinkel absolut programmiert wird (TCOABS).
Sind sowohl $TC_CARR31 als auch $TC_CARR33 gleich Null, werden die Begrenzungen nicht ausgewertet.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$TC_CARR34</name>
<brief>Frei verwendbarer String (Werkzeugträgername)</brief>
<description>$TC_CARR34[n]
Enthält einen frei definierbaren String. Dieser ist als freier Bezeichner für den orientierbaren Werkzeugträger vorgesehen.
Er hat innerhalb des NCK derzeit jedoch keinerlei Bedeutung und wird auch nicht ausgewertet.
Der Bezeichner sollte nicht für ander Zwecke verwendet werde, da bei einer späteren Erweiterung die Aktivierung eines orientierbaren Werkzeugträgers statt über Nummern auch über Namen möglich sein soll.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$TC_CARR35</name>
<brief>Frei verfügbarer String (1. Rundachsname)</brief>
<description>$TC_CARR35[n]
Enthält einen frei definierbaren String. Dieser ist als freier Bezeichner für die erste Rundachse vorgesehen.
Er hat innerhalb des NCK jedoch keinerlei Bedeutung und wird auch nicht ausgewertet.
Er kann deshalb auch für beliebig andere Zwecke verwendet werden.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$TC_CARR36</name>
<brief>Frei verfügbarer String (2. Rundachsname)</brief>
<description>$TC_CARR36[n]
Enthält einen frei definierbaren String. Dieser ist als freier Bezeichner für die zweite Rundachse vorgesehen.
Er hat innerhalb des NCK jedoch keinerlei Bedeutung und wird auch nicht ausgewertet.
Er kann deshalb auch für beliebig andere Zwecke verwendet werden.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_CARR37</name>
<brief>Frei verfügbare Zahlenkennung (Werkzeugträgernummer)</brief>
<description>$TC_CARR37[n]
Enthält eine Integerzahl zur Kennzeichnung des Werkzeugträgers.
Sie hat innerhalb des NCK jedoch keinerlei Bedeutung und wird auch nicht ausgewertet.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR38</name>
<brief>Frei verfügbarer Positionswert (X-Position)</brief>
<description>$TC_CARR38[n]
Enthält eine Position (X-Komponente der Rückzugspositon).
Sie hat innerhalb des NCK jedoch keinerlei Bedeutung und wird auch nicht ausgewertet.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR39</name>
<brief>Frei verfügbarer Positionswert (Y-Position)</brief>
<description>$TC_CARR39[n]
Enthält eine Position (Y-Komponente der Rückzugspositon).
Sie hat innerhalb des NCK jedoch keinerlei Bedeutung und wird auch nicht ausgewertet.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR40</name>
<brief>Frei verfügbarer Positionswert (Z-Position)</brief>
<description>$TC_CARR40[n]
Enthält eine Position (Z-Komponente der Rückzugspositon).
Sie hat innerhalb des NCK jedoch keinerlei Bedeutung und wird auch nicht ausgewertet.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR41</name>
<brief>Feinverschiebung X des Offsetvektors l1</brief>
<description>$TC_CARR41[n]
X-Komponente der Feinverschiebung des Offsetvektors l1
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR42</name>
<brief>Feinverschiebung Y des Offsetvektors l1</brief>
<description>$TC_CARR42[n]
Y-Komponente der Feinverschiebung des Offsetvektors l1
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR43</name>
<brief>Feinverschiebung Z des Offsetvektors l1</brief>
<description>$TC_CARR43[n]
Z-Komponente der Feinverschiebung des Offsetvektors l1
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR44</name>
<brief>Feinverschiebung X des Offsetvektors l2</brief>
<description>$TC_CARR44[n]
X-Komponente der Feinverschiebung des Offsetvektors l2
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR45</name>
<brief>Feinverschiebung Y des Offsetvektors l2</brief>
<description>$TC_CARR45[n]
Y-Komponente der Feinverschiebung des Offsetvektors l2
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR46</name>
<brief>Feinverschiebung Z des Offsetvektors l2</brief>
<description>$TC_CARR46[n]
Z-Komponente der Feinverschiebung des Offsetvektors l2
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR55</name>
<brief>Feinverschiebung X des Offsetvektors l3</brief>
<description>$TC_CARR55[n]
X-Komponente der Feinverschiebung des Offsetvektors l3
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR56</name>
<brief>Feinverschiebung Y des Offsetvektors l3</brief>
<description>$TC_CARR56[n]
Y-Komponente der Feinverschiebung des Offsetvektors l3
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR57</name>
<brief>Feinverschiebung Z des Offsetvektors l3</brief>
<description>$TC_CARR57[n]
Z-Komponente der Feinverschiebung des Offsetvektors l3
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR58</name>
<brief>Feinverschiebung X des Offsetvektors l4</brief>
<description>$TC_CARR58[n]
X-Komponente der Feinverschiebung des Offsetvektors l4
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR59</name>
<brief>Feinverschiebung Y des Offsetvektors l4</brief>
<description>$TC_CARR59[n]
Y-Komponente der Feinverschiebung des Offsetvektors l4
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR60</name>
<brief>Feinverschiebung Z des Offsetvektors l4</brief>
<description>$TC_CARR60[n]
Z-Komponente der Feinverschiebung des Offsetvektors l4
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR64</name>
<brief>Feinverschiebung der 1. Drehachse v1</brief>
<description>$TC_CARR64[n]
Feinverschiebung des Offsets ($TC_CARR24) der 1. Drehachse in Grad
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_CARR65</name>
<brief>Feinverschiebung der 2. Drehachse v2</brief>
<description>$TC_CARR65[n]
Feinverschiebung des Offsets ($TC_CARR25) der 2. Drehachse in Grad
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$TC_CARR_KIN_TOOL_START</name>
<brief>Startelement der TOOL-Kette zur Parametrierung aus kinematischen Ketten</brief>
<description>$TC_CARR_KIN_TOOL_START[n]
Ist diese Systemvariable leer, wird bei Übernahme von Daten aus einem mit kinematischen Ketten definierten Maschinenmodell in den ToolCarrier die gesamte Kette vom Root-Element bis zu dem mit $TC_CARR_KIN_TOOL_END definierten Kettenende berücksichtigt.
Enthält sie einen Namen, beginnt die zu berücksichtigende Kette mit dem Startpunkt des bezeichneten Elements.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$TC_CARR_KIN_TOOL_END</name>
<brief>Endelement der Tool-Kette zur Parametrierung aus kinematischen Ketten</brief>
<description>$TC_CARR_KIN_TOOL_END[n]
Enthält den Namen des letzten Elements der kinematischen Kette, die zur Parametrierung der Tool-Kette eines Toolcarriers dient.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$TC_CARR_KIN_PART_START</name>
<brief>Startelement der PART-Kette zur Parametrierung aus aus kinematischen Ketten</brief>
<description>$TC_CARR_KIN_PART_START[n]
Ist diese Systemvariable leer, wird bei Übernahme von Daten aus einem mit kinematischen Ketten definierten Maschinenmodell in den ToolCarrier die gesamte Kette vom Root-Element bis zu dem mit $TC_CARR_KIN_PART_END definierten Kettenende berücksichtigt.
Enthält sie einen Namen, beginnt die zu berücksichtigende Kette mit dem Startpunkt des bezeichneten Elements.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$TC_CARR_KIN_PART_END</name>
<brief>Endelement der Part-Kette zur Parametrierung aus kinematischen Ketten</brief>
<description>$TC_CARR_KIN_TOOL_START[n]
Enthält den Namen des letzten Elements der kinematischen Kette, die zur Parametrierung der Part-Kette eines Toolcarriers dient.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_CARR_KIN_CNTRL</name>
<brief>Steuert die Übernahme von Geometriedaten aus kinematischen Kettenelementen.</brief>
<description>$TC_CARR_KIN_CNTRL[n]
Mit diesem Systemdatum wird die Übernahme von Geometriedaten aus einem mit kinematischen Ketten definierten Maschinenmodell zur Parametrierung eines ToolCarriers gesteuert.
Derzeit ist nur das Bit 0 belegt. Alle anderen Bits sind reserviert.
Bit 0 :
Ist dieses Bit gesetzt, werden die folgenden Geometriedaten - soweit sie benötigt werden - aus kinematischen Kettenelementen gelesen.
Der Inhalt der entsprechenden ToolCarrier-Daten ($TC_CARRxx) wird dann ignoriert.
Offsetvektor l1      ($TC_CARR1  - $TC_CARR3)
Offsetvektor l2      ($TC_CARR4  - $TC_CARR6)
Drehachsrichtung v1  ($TC_CARR7  - $TC_CARR9)
Drehachsrichtung v2  ($TC_CARR10 - $TC_CARR12)
Offsetvektor l3      ($TC_CARR15 - $TC_CARR17)
Offsetvektor l4      ($TC_CARR18 - $TC_CARR20)
Rundachsoffsets      ($TC_CARR24 - $TC_CARR25)
</description>
</parameter>

<parameter type="STRING" dim="3">
<name>$TC_CARR_CORR_ELEM</name>
<brief>Name des Offsetvektors l[m] eines Werkzeugtraegers.</brief>
<description>Name des Offsetvektors l[m] des Werkzeugtraegers[n]. Bei einem Toolcarrier sind maximal 4 Offsetvektoren (l1 bis l4) definiert. Dabei bezeichnet der erste Index den Index des Toolcarriers, der zweite Index den Index des Offsetvektors (1...4).
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_DP1</name>
<brief>Werkzeugtyp</brief>
<description>$TC_DP1[t,d]
Werkzeugtyp

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP1[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP2</name>
<brief>Schneidenlage</brief>
<description>$TC_DP2[t,d]
Schneidenlage

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP2[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP3</name>
<brief>Geometrie - Länge 1</brief>
<description>$TC_DP3[t,d]
Geometrie - Länge 1

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP3[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP4</name>
<brief>Geometrie - Länge 2</brief>
<description>$TC_DP4[t,d]
Geometrie - Länge 2

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP4[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP5</name>
<brief>Geometrie - Länge 3</brief>
<description>$TC_DP5[t,d]
Geometrie - Länge 3

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP5[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP6</name>
<brief>Geometrie - Radius</brief>
<description>$TC_DP6[t,d]
Geometrie - Radius

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP6[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP7</name>
<brief>Nutsäge: Eckenradius</brief>
<description>$TC_DP7[t,d]
Nutsäge: Eckenradius

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP7[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP8</name>
<brief>Nutsäge: Länge</brief>
<description>$TC_DP8[t,d]
Nutsäge: Länge

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP8[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP9</name>
<brief>reserviert</brief>
<description>$TC_DP9[t,d]
reserviert

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP9[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP10</name>
<brief>Winkel zw. Stirnfläche des WZs und Torusfläche</brief>
<description>$TC_DP10[t,d]
Winkel zw. Stirnfläche des WZs und Torusfläche

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP10[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP11</name>
<brief>Winkel zwischen WZ-Längsachse und oberem Ende der Torusfläche</brief>
<description>$TC_DP11[t,d]
Winkel zwischen WZ-Längsachse und oberem Ende der Torusfläche

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP11[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP12</name>
<brief>Verschleiss - Länge 1 - $TC_DP3</brief>
<description>$TC_DP12[t,d]
Verschleiss - Länge 1 - $TC_DP3

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP12[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP13</name>
<brief>Verschleiss - Länge 2 - $TC_DP4</brief>
<description>$TC_DP13[t,d]
Verschleiss - Länge 2 - $TC_DP4

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP13[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP14</name>
<brief>Verschleiss - Länge 3 - $TC_DP5</brief>
<description>$TC_DP14[t,d]
Verschleiss - Länge 3 - $TC_DP5

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP14[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP15</name>
<brief>Verschleiss - Radius - $TC_DP6</brief>
<description>$TC_DP15[t,d]
Verschleiss - Radius - $TC_DP6

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP15[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP16</name>
<brief>Nutsäge: Verschleiss Eckenradius - $TC_DP7</brief>
<description>$TC_DP16[t,d]
Nutsäge: Verschleiss Eckenradius - $TC_DP7

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP16[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP17</name>
<brief>Nutsäge: Verschleiss Länge - $TC_DP8</brief>
<description>$TC_DP17[t,d]
Nutsäge: Verschleiss Länge - $TC_DP8

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP17[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP18</name>
<brief>Verschleiss - reserviert - $TC_DP9</brief>
<description>$TC_DP18[t,d]
Verschleiss - reserviert - $TC_DP9

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP18[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP19</name>
<brief>Verschleiss -  Winkel zw. Stirnfläche des WZs und Torusfläche - $TC_DP10</brief>
<description>$TC_DP19[t,d]
Verschleiss -  Winkel zw. Stirnfläche des WZs und Torusfläche - $TC_DP10

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP19[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP20</name>
<brief>Verschleiss    - Winkel zw. WZ-Längsachse und oberem Ende der Torusfläche - $TC_DP11</brief>
<description>$TC_DP20[t,d]
Verschleiss    - Winkel zw. WZ-Längsachse und oberem Ende der Torusfläche - $TC_DP11

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP20[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP21</name>
<brief>Basis - Länge 1</brief>
<description>$TC_DP21[t,d]
Basis - Länge 1

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP21[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP22</name>
<brief>Basis - Länge 2</brief>
<description>$TC_DP22[t,d]
Basis - Länge 2

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP22[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP23</name>
<brief>Basis - Länge 3</brief>
<description>$TC_DP23[t,d]
Basis - Länge 3

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP23[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP24</name>
<brief>Freiwinkel</brief>
<description>$TC_DP24[t,d]
Freiwinkel

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP24[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DP25</name>
<brief>reserviert</brief>
<description>$TC_DP25[t,d]
reserviert

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DP25[d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_DPCE</name>
<brief>'Schneidennummer' des Korrekturdatensatzes</brief>
<description>$TC_DPCE[t,d]
'Schneidennummer' des Korrekturdatensatzes t,d

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPCE[d]
CE steht für &lt;C&gt;utting&lt;E&gt;dge
Wertebereich erlaubter 'Schneidennummern':
1 bis Wert des Maschinendatums $MN_MM_MAX_CUTTING_EDGE_PERTOOL.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_DPH</name>
<brief>'H-Schneidennummer' des Korrekturdatensatzes</brief>
<description>$TC_DPH[t,d]
'H-Schneidennummer' des Korrekturdatensatzes t,d für Fanuc0 M

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPH[d]
Wenn die Funktion "ISO2.1-Modus" bzw. "ISO3.1-Modus" nicht aktiv ist, kommt bei der Verwendung dieser Variablen ein Alarm.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_DPV</name>
<brief>Werkzeugschneidenorientierung</brief>
<description>$TC_DPV[t,d]
Werkzeugschneidenorientierung

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPV[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPV3</name>
<brief>L1-Komponente der Werkzeugschneidenorientierung</brief>
<description>$TC_DPV3[t,d]
L1-Komponente der Werkzeugschneidenorientierung

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPV3[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPV4</name>
<brief>L2-Komponente der Werkzeugschneidenorientierung</brief>
<description>$TC_DPV4[t,d]
L2-Komponente der Werkzeugschneidenorientierung

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPV4[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPV5</name>
<brief>L3-Komponente der Werkzeugschneidenorientierung</brief>
<description>$TC_DPV5[t,d]
L3-Komponente der Werkzeugschneidenorientierung

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPV5[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPVN3</name>
<brief>L1-Komponente der Orientierungsnormalen</brief>
<description>$TC_DPVN3[t,d]
L1-Komponente der Orientierungsnormalen der Werkzeugschneide

Bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPVN3[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPVN4</name>
<brief>L2-Komponente der Orientierungsnormalen</brief>
<description>$TC_DPVN4[t,d]
L2-Komponente der Orientierungsnormalen der Werkzeugschneide

Bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPVN4[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPVN5</name>
<brief>L3-Komponente der Orientierungsnormalen</brief>
<description>$TC_DPVN5[t,d]
L3-Komponente der Orientierungsnormalen der Werkzeugschneide

Bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPVN5[d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_DPNT</name>
<brief>Anzahl der Zähne dieser Schneide</brief>
<description>$TC_DPNT[t,d]
Anzahl der Zähne der Schneide


Bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPNT[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPROT</name>
<brief>Grunddrehwinkel der Schneide</brief>
<description>$TC_DPROT[t,d]
Grunddrehwinkel dieser Schneide

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPROT[d]

Dieser Winkel beschreibt die Verdrehung der Schneide entlang der Werkzeugkorrketurlänge L1 von einer Nulllage der Werkzeug-Aufnahme, z.B. in der Spindel. Der Winkel kann zur Ausrichtung der Schneide bei nicht rotationssymmetrischen Werkzeugen verwendet werden.

Anwendungsbeispiel:
Ein Drehwerkzeug wird in eine Spindel eingespannt. Der Winkel ergibt sich dann zwischen der Normalen auf das Schneidplätchen und der Nullstellung der Spindel. Dieser Parameter ist nur bei nicht rotationssymmetrischen Werkzeug von Bedeutung.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC1</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC1[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC1[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC2</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC2[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC2[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC3</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC3[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC3[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC4</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC4[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC4[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC5</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC5[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC5[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC6</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC6[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC6[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC7</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC7[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC7[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC8</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC8[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC8[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC9</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC9[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC9[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC10</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC10[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC10[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC11</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC11[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC11[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC12</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC12[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC12[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC13</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC13[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC13[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC14</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC14[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC14[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC15</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC15[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC15[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC16</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC16[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC16[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC17</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC17[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC17[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC18</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC18[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC18[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC19</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC19[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC19[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC20</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC20[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC20[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC21</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC21[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC21[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC22</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC22[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC22[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC23</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC23[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC23[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC24</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC24[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC24[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC25</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC25[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC25[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC26</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC26[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC26[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC27</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC27[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC27[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC28</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC28[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC28[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC29</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC29[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC29[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC30</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC30[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC30[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC31</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC31[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC31[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC32</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC32[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC32[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC33</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC33[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC33[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC34</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC34[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC34[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC35</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC35[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC35[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC36</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC36[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC36[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC37</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC37[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC37[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC38</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC38[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC38[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC39</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC39[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC39[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC40</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC40[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC40[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC41</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC41[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC41[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC42</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC42[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC42[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC43</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC43[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC43[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC44</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC44[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC44[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC45</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC45[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC45[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC46</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC46[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC46[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC47</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC47[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC47[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC48</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC48[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC48[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC49</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC49[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC49[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC50</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC50[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC50[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC51</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC51[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC51[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC52</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC52[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC52[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC53</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC53[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC53[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC54</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC54[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC54[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC55</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC55[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC55[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC56</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC56[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC56[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC57</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC57[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC57[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC58</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC58[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC58[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC59</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC59[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC59[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC60</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC60[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC60[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC61</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC61[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC61[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC62</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC62[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC62[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC63</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC63[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC63[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPC64</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPC64[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPC64[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPCS1</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPCS1[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPCS1[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPCS2</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPCS2[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPCS2[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPCS3</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPCS3[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPCS3[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPCS4</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPCS4[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPCS4[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPCS5</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPCS5[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPCS5[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPCS6</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPCS6[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPCS6[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPCS7</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPCS7[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPCS7[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPCS8</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPCS8[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPCS8[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPCS9</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPCS9[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPCS9[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_DPCS10</name>
<brief>Schneidendaten OEM-Anwender</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_DPCS10[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_DPCS10[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP13</name>
<brief>Korrektur zu $TC_DP3</brief>
<description>Korrektur zu $TC_DP3: $TC_SCP13[t,d] analog $TC_DP12[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP13[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP14</name>
<brief>Korrektur zu $TC_DP4</brief>
<description>Korrektur zu $TC_DP4: $TC_SCP14[t,d] analog $TC_DP13[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP14[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP15</name>
<brief>Korrektur zu $TC_DP5</brief>
<description>Korrektur zu $TC_DP5: $TC_SCP15[t,d] analog $TC_DP14[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP15[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP16</name>
<brief>Korrektur zu $TC_DP6</brief>
<description>Korrektur zu $TC_DP6: $TC_SCP16[t,d] analog $TC_DP15[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP16[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP17</name>
<brief>Korrektur zu $TC_DP7</brief>
<description>Korrektur zu $TC_DP7: $TC_SCP17[t,d] analog $TC_DP16[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP17[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP18</name>
<brief>Korrektur zu $TC_DP8</brief>
<description>Korrektur zu $TC_DP8: $TC_SCP18[t,d] analog $TC_DP17[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP18[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP19</name>
<brief>Korrektur zu $TC_DP9</brief>
<description>Korrektur zu $TC_DP9: $TC_SCP19[t,d] analog $TC_DP18[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP19[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP20</name>
<brief>Korrektur zu $TC_DP10</brief>
<description>Korrektur zu $TC_DP10: $TC_SCP20[t,d] analog $TC_DP19[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP20[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP21</name>
<brief>Korrektur zu $TC_DP11</brief>
<description>Korrektur zu $TC_DP11: $TC_SCP21[t,d] analog $TC_DP20[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP21[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP23</name>
<brief>Korrektur zu $TC_DP3</brief>
<description>Korrektur zu $TC_DP3: $TC_SCP23[t,d] analog $TC_DP12[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP23[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP24</name>
<brief>Korrektur zu $TC_DP4</brief>
<description>Korrektur zu $TC_DP4: $TC_SCP24[t,d] analog $TC_DP13[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP24[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP25</name>
<brief>Korrektur zu $TC_DP5</brief>
<description>Korrektur zu $TC_DP5: $TC_SCP25[t,d] analog $TC_DP14[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP25[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP26</name>
<brief>Korrektur zu $TC_DP6</brief>
<description>Korrektur zu $TC_DP6: $TC_SCP26[t,d] analog $TC_DP15[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP26[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP27</name>
<brief>Korrektur zu $TC_DP7</brief>
<description>Korrektur zu $TC_DP7: $TC_SCP27[t,d] analog $TC_DP16[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP27[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP28</name>
<brief>Korrektur zu $TC_DP8</brief>
<description>$TC_SCP28[t,d] analog $TC_DP17[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP28[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP29</name>
<brief>Korrektur zu $TC_DP9</brief>
<description>Korrektur zu $TC_DP9: $TC_SCP29[t,d] analog $TC_DP18[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP29[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP30</name>
<brief>Korrektur zu $TC_DP10</brief>
<description>Korrektur zu $TC_DP10: $TC_SCP30[t,d] analog $TC_DP19[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP30[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP31</name>
<brief>Korrektur zu $TC_DP11</brief>
<description>Korrektur zu $TC_DP11: $TC_SCP31[t,d] analog $TC_DP20[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP31[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP33</name>
<brief>Korrektur zu $TC_DP3</brief>
<description>Korrektur zu $TC_DP3: $TC_SCP33[t,d] analog $TC_DP12[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP33[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP34</name>
<brief>Korrektur zu $TC_DP4</brief>
<description>Korrektur zu $TC_DP4: $TC_SCP34[t,d] analog $TC_DP13[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP34[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP35</name>
<brief>Korrektur zu $TC_DP5</brief>
<description>Korrektur zu $TC_DP5: $TC_SCP35[t,d] analog $TC_DP14[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP35[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP36</name>
<brief>Korrektur zu $TC_DP6</brief>
<description>Korrektur zu $TC_DP6: $TC_SCP36[t,d] analog $TC_DP15[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP36[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP37</name>
<brief>Korrektur zu $TC_DP7</brief>
<description>Korrektur zu $TC_DP7: $TC_SCP37[t,d] analog $TC_DP16[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP37[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP38</name>
<brief>Korrektur zu $TC_DP8</brief>
<description>Korrektur zu $TC_DP8: $TC_SCP38[t,d] analog $TC_DP17[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP38[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP39</name>
<brief>Korrektur zu $TC_DP9</brief>
<description>Korrektur zu $TC_DP9: $TC_SCP39[t,d] analog $TC_DP18[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP39[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP40</name>
<brief>Korrektur zu $TC_DP10</brief>
<description>Korrektur zu $TC_DP10: $TC_SCP40[t,d] analog $TC_DP19[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP40[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP41</name>
<brief>Korrektur zu $TC_DP11</brief>
<description>Korrektur zu $TC_DP11: $TC_SCP41[t,d] analog $TC_DP20[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP41[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP43</name>
<brief>Korrektur zu $TC_DP3</brief>
<description>Korrektur zu $TC_DP3: $TC_SCP43[t,d] analog $TC_DP12[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP43[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP44</name>
<brief>Korrektur zu $TC_DP4</brief>
<description>Korrektur zu $TC_DP4: $TC_SCP44[t,d] analog $TC_DP13[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP44[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP45</name>
<brief>Korrektur zu $TC_DP5</brief>
<description>Korrektur zu $TC_DP5: $TC_SCP45[t,d] analog $TC_DP14[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP45[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP46</name>
<brief>Korrektur zu $TC_DP6</brief>
<description>Korrektur zu $TC_DP6: $TC_SCP46[t,d] analog $TC_DP15[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP46[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP47</name>
<brief>Korrektur zu $TC_DP7</brief>
<description>Korrektur zu $TC_DP7: $TC_SCP47[t,d] analog $TC_DP16[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP47[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP48</name>
<brief>Korrektur zu $TC_DP8</brief>
<description>Korrektur zu $TC_DP8: $TC_SCP48[t,d] analog $TC_DP17[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP48[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP49</name>
<brief>Korrektur zu $TC_DP9</brief>
<description>Korrektur zu $TC_DP9: $TC_SCP49[t,d] analog $TC_DP18[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP49[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP50</name>
<brief>Korrektur zu $TC_DP10</brief>
<description>Korrektur zu $TC_DP10: $TC_SCP50[t,d] analog $TC_DP19[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP50[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP51</name>
<brief>Korrektur zu $TC_DP11</brief>
<description>Korrektur zu $TC_DP11: $TC_SCP51[t,d] analog $TC_DP20[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP51[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP53</name>
<brief>Korrektur zu $TC_DP3</brief>
<description>Korrektur zu $TC_DP3: $TC_SCP53[t,d] analog $TC_DP12[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP53[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP54</name>
<brief>Korrektur zu $TC_DP4</brief>
<description>Korrektur zu $TC_DP4: $TC_SCP54[t,d] analog $TC_DP13[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP54[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP55</name>
<brief>Korrektur zu $TC_DP5</brief>
<description>Korrektur zu $TC_DP5: $TC_SCP55[t,d] analog $TC_DP14[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP55[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP56</name>
<brief>Korrektur zu $TC_DP6</brief>
<description>Korrektur zu $TC_DP6: $TC_SCP56[t,d] analog $TC_DP15[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP56[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP57</name>
<brief>Korrektur zu $TC_DP7</brief>
<description>Korrektur zu $TC_DP7: $TC_SCP57[t,d] analog $TC_DP16[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP57[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP58</name>
<brief>Korrektur zu $TC_DP8</brief>
<description>Korrektur zu $TC_DP8: $TC_SCP58[t,d] analog $TC_DP17[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP58[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP59</name>
<brief>Korrektur zu $TC_DP9</brief>
<description>Korrektur zu $TC_DP9: $TC_SCP59[t,d] analog $TC_DP18[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP59[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP60</name>
<brief>Korrektur zu $TC_DP10</brief>
<description>Korrektur zu $TC_DP10: $TC_SCP60[t,d] analog $TC_DP19[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP60[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP61</name>
<brief>Korrektur zu $TC_DP11</brief>
<description>Korrektur zu $TC_DP11: $TC_SCP61[t,d] analog $TC_DP20[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP61[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP63</name>
<brief>Korrektur zu $TC_DP3</brief>
<description>Korrektur zu $TC_DP3: $TC_SCP63[t,d] analog $TC_DP12[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP63[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP64</name>
<brief>Korrektur zu $TC_DP4</brief>
<description>Korrektur zu $TC_DP4: $TC_SCP64[t,d] analog $TC_DP13[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP64[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP65</name>
<brief>Korrektur zu $TC_DP5</brief>
<description>Korrektur zu $TC_DP5: $TC_SCP65[t,d] analog $TC_DP14[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP65[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP66</name>
<brief>Korrektur zu $TC_DP6</brief>
<description>Korrektur zu $TC_DP6: $TC_SCP66[t,d] analog $TC_DP15[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP66[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP67</name>
<brief>Korrektur zu $TC_DP7</brief>
<description>Korrektur zu $TC_DP7: $TC_SCP67[t,d] analog $TC_DP16[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP67[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP68</name>
<brief>Korrektur zu $TC_DP8</brief>
<description>Korrektur zu $TC_DP8: $TC_SCP68[t,d] analog $TC_DP17[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP68[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP69</name>
<brief>Korrektur zu $TC_DP9</brief>
<description>Korrektur zu $TC_DP9: $TC_SCP69[t,d] analog $TC_DP18[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP69[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP70</name>
<brief>Korrektur zu $TC_DP10</brief>
<description>Korrektur zu $TC_DP10: $TC_SCP70[t,d] analog $TC_DP19[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP70[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_SCP71</name>
<brief>Korrektur zu $TC_DP11</brief>
<description>Korrektur zu $TC_DP11: $TC_SCP71[t,d] analog $TC_DP20[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_SCP71[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP13</name>
<brief>Korrektur zu $TC_DP3</brief>
<description>Korrektur zu $TC_DP3: $TC_ECP13[t,d] analog $TC_DP12[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP13[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP14</name>
<brief>Korrektur zu $TC_DP4</brief>
<description>Korrektur zu $TC_DP4: $TC_ECP14[t,d] analog $TC_DP13[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP14[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP15</name>
<brief>Korrektur zu $TC_DP5</brief>
<description>Korrektur zu $TC_DP5: $TC_ECP15[t,d] analog $TC_DP14[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP15[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP16</name>
<brief>Korrektur zu $TC_DP6</brief>
<description>Korrektur zu $TC_DP6: $TC_ECP16[t,d] analog $TC_DP15[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP16[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP17</name>
<brief>Korrektur zu $TC_DP7</brief>
<description>Korrektur zu $TC_DP7: $TC_ECP17[t,d] analog $TC_DP16[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP17[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP18</name>
<brief>Korrektur zu $TC_DP8</brief>
<description>Korrektur zu $TC_DP8: $TC_ECP18[t,d] analog $TC_DP17[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP18[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP19</name>
<brief>Korrektur zu $TC_DP9</brief>
<description>Korrektur zu $TC_DP9: $TC_ECP19[t,d] analog $TC_DP18[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP19[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP20</name>
<brief>Korrektur zu $TC_DP10</brief>
<description>Korrektur zu $TC_DP10: $TC_ECP20[t,d] analog $TC_DP19[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP20[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP21</name>
<brief>Korrektur zu $TC_DP11</brief>
<description>Korrektur zu $TC_DP11: $TC_ECP21[t,d] analog $TC_DP20[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP21[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP23</name>
<brief>Korrektur zu $TC_DP3</brief>
<description>Korrektur zu $TC_DP3: $TC_ECP23[t,d] analog $TC_DP12[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP23[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP24</name>
<brief>Korrektur zu $TC_DP4</brief>
<description>Korrektur zu $TC_DP4: $TC_ECP24[t,d] analog $TC_DP13[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP24[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP25</name>
<brief>Korrektur zu $TC_DP5</brief>
<description>Korrektur zu $TC_DP5: $TC_ECP25[t,d] analog $TC_DP14[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP25[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP26</name>
<brief>Korrektur zu $TC_DP6</brief>
<description>Korrektur zu $TC_DP6: $TC_ECP26[t,d] analog $TC_DP15[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP26[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP27</name>
<brief>Korrektur zu $TC_DP7</brief>
<description>Korrektur zu $TC_DP7: $TC_ECP27[t,d] analog $TC_DP16[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP27[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP28</name>
<brief>Korrektur zu $TC_DP8</brief>
<description>Korrektur zu $TC_DP8: $TC_ECP28[t,d] analog $TC_DP17[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP28[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP29</name>
<brief>Korrektur zu $TC_DP9</brief>
<description>Korrektur zu $TC_DP9: $TC_ECP29[t,d] analog $TC_DP18[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP29[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP30</name>
<brief>Korrektur zu $TC_DP10</brief>
<description>Korrektur zu $TC_DP10: $TC_ECP30[t,d] analog $TC_DP19[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP30[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP31</name>
<brief>Korrektur zu $TC_DP11</brief>
<description>Korrektur zu $TC_DP11: $TC_ECP31[t,d] analog $TC_DP20[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP31[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP33</name>
<brief>Korrektur zu $TC_DP3</brief>
<description>Korrektur zu $TC_DP3: $TC_ECP33[t,d] analog $TC_DP12[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP33[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP34</name>
<brief>Korrektur zu $TC_DP4</brief>
<description>Korrektur zu $TC_DP4: $TC_ECP34[t,d] analog $TC_DP13[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP34[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP35</name>
<brief>Korrektur zu $TC_DP5</brief>
<description>Korrektur zu $TC_DP5: $TC_ECP35[t,d] analog $TC_DP14[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP35[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP36</name>
<brief>Korrektur zu $TC_DP6</brief>
<description>Korrektur zu $TC_DP6: $TC_ECP36[t,d] analog $TC_DP15[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP36[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP37</name>
<brief>Korrektur zu $TC_DP7</brief>
<description>Korrektur zu $TC_DP7: $TC_ECP37[t,d] analog $TC_DP16[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP37[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP38</name>
<brief>Korrektur zu $TC_DP8</brief>
<description>Korrektur zu $TC_DP8: $TC_ECP38[t,d] analog $TC_DP17[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP38[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP39</name>
<brief>Korrektur zu $TC_DP9</brief>
<description>Korrektur zu $TC_DP9: $TC_ECP39[t,d] analog $TC_DP18[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP39[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP40</name>
<brief>Korrektur zu $TC_DP10</brief>
<description>Korrektur zu $TC_DP10: $TC_ECP40[t,d] analog $TC_DP19[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP40[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP41</name>
<brief>Korrektur zu $TC_DP11</brief>
<description>Korrektur zu $TC_DP11: $TC_ECP41[t,d] analog $TC_DP20[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP41[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP43</name>
<brief>Korrektur zu $TC_DP3</brief>
<description>Korrektur zu $TC_DP3: $TC_ECP43[t,d] analog $TC_DP12[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP43[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP44</name>
<brief>Korrektur zu $TC_DP4</brief>
<description>Korrektur zu $TC_DP4: $TC_ECP44[t,d] analog $TC_DP13[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP44[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP45</name>
<brief>Korrektur zu $TC_DP5</brief>
<description>Korrektur zu $TC_DP5: $TC_ECP45[t,d] analog $TC_DP14[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP45[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP46</name>
<brief>Korrektur zu $TC_DP6</brief>
<description>Korrektur zu $TC_DP6: $TC_ECP46[t,d] analog $TC_DP15[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP46[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP47</name>
<brief>Korrektur zu $TC_DP7</brief>
<description>Korrektur zu $TC_DP7: $TC_ECP47[t,d] analog $TC_DP16[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP47[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP48</name>
<brief>Korrektur zu $TC_DP8</brief>
<description>Korrektur zu $TC_DP8: $TC_ECP48[t,d] analog $TC_DP17[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP48[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP49</name>
<brief>Korrektur zu $TC_DP9</brief>
<description>Korrektur zu $TC_DP9: $TC_ECP49[t,d] analog $TC_DP18[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP49[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP50</name>
<brief>Korrektur zu $TC_DP10</brief>
<description>Korrektur zu $TC_DP10: $TC_ECP50[t,d] analog $TC_DP19[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP50[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP51</name>
<brief>Korrektur zu $TC_DP11</brief>
<description>Korrektur zu $TC_DP11: $TC_ECP51[t,d] analog $TC_DP20[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP51[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP53</name>
<brief>Korrektur zu $TC_DP3</brief>
<description>Korrektur zu $TC_DP3: $TC_ECP53[t,d] analog $TC_DP12[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP53[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP54</name>
<brief>Korrektur zu $TC_DP4</brief>
<description>Korrektur zu $TC_DP4: $TC_ECP54[t,d] analog $TC_DP13[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP54[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP55</name>
<brief>Korrektur zu $TC_DP5</brief>
<description>Korrektur zu $TC_DP5: $TC_ECP55[t,d] analog $TC_DP14[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP55[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP56</name>
<brief>Korrektur zu $TC_DP6</brief>
<description>Korrektur zu $TC_DP6: $TC_ECP56[t,d] analog $TC_DP15[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP56[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP57</name>
<brief>Korrektur zu $TC_DP7</brief>
<description>Korrektur zu $TC_DP7: $TC_ECP57[t,d] analog $TC_DP16[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP57[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP58</name>
<brief>Korrektur zu $TC_DP8</brief>
<description>Korrektur zu $TC_DP8: $TC_ECP58[t,d] analog $TC_DP17[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP58[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP59</name>
<brief>Korrektur zu $TC_DP9</brief>
<description>Korrektur zu $TC_DP9: $TC_ECP59[t,d] analog $TC_DP18[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP59[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP60</name>
<brief>Korrektur zu $TC_DP10</brief>
<description>Korrektur zu $TC_DP10: $TC_ECP60[t,d] analog $TC_DP19[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP60[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP61</name>
<brief>Korrektur zu $TC_DP11</brief>
<description>Korrektur zu $TC_DP11: $TC_ECP61[t,d] analog $TC_DP20[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP61[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP63</name>
<brief>Korrektur zu $TC_DP3</brief>
<description>Korrektur zu $TC_DP3: $TC_ECP63[t,d] analog $TC_DP12[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP63[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP64</name>
<brief>Korrektur zu $TC_DP4</brief>
<description>Korrektur zu $TC_DP4: $TC_ECP64[t,d] analog $TC_DP13[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP64[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP65</name>
<brief>Korrektur zu $TC_DP5</brief>
<description>Korrektur zu $TC_DP5: $TC_ECP65[t,d] analog $TC_DP14[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP65[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP66</name>
<brief>Korrektur zu $TC_DP6</brief>
<description>Korrektur zu $TC_DP6: $TC_ECP66[t,d] analog $TC_DP15[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP66[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP67</name>
<brief>Korrektur zu $TC_DP7</brief>
<description>Korrektur zu $TC_DP7: $TC_ECP67[t,d] analog $TC_DP16[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP67[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP68</name>
<brief>Korrektur zu $TC_DP8</brief>
<description>Korrektur zu $TC_DP8: $TC_ECP68[t,d] analog $TC_DP17[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP68[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP69</name>
<brief>Korrektur zu $TC_DP9</brief>
<description>Korrektur zu $TC_DP9: $TC_ECP69[t,d] analog $TC_DP18[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP69[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP70</name>
<brief>Korrektur zu $TC_DP10</brief>
<description>Korrektur zu $TC_DP10: $TC_ECP70[t,d] analog $TC_DP19[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP70[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_ECP71</name>
<brief>Korrektur zu $TC_DP11</brief>
<description>Korrektur zu $TC_DP11: $TC_ECP71[t,d] analog $TC_DP20[t,d]

bei aktiver Funktion 'flache D-Nummernverwaltung' ist die Syntax folgende:
$TC_ECP71[d]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MOP1</name>
<brief>Vorwarngrenze Standzeit</brief>
<description>$TC_MOP1[t,d]
Vorwarngrenze Standzeit
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MOP2</name>
<brief>Rest-Standzeit</brief>
<description>$TC_MOP2[t,d]
Rest-Standzeit
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOP3</name>
<brief>Vorwarngrenze Stückzahl</brief>
<description>$TC_MOP3[t,d]
Vorwarngrenze Stückzahl
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOP4</name>
<brief>Reststückzahl</brief>
<description>$TC_MOP4[t,d]
Reststückzahl
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MOP5</name>
<brief>Vorwarngrenze Verschleiß</brief>
<description>$TC_MOP5[t,d]
Vorwarngrenze Verschleiß
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MOP6</name>
<brief>Restverschleiß</brief>
<description>$TC_MOP6[t,d]
Restverschleiß
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MOP11</name>
<brief>Standzeit-Sollwert</brief>
<description>$TC_MOP11[t,d]
Standzeit-Sollwert
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOP13</name>
<brief>Stückzahlsollwert</brief>
<description>$TC_MOP13[t,d]
Stückzahlsollwert
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MOP15</name>
<brief>Verschleiss-Sollwert</brief>
<description>$TC_MOP15[t,d]
Verschleiss-Sollwert
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC1</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC1[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC2</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC2[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC3</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC3[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC4</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC4[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC5</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC5[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC6</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC6[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC7</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC7[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC8</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC8[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC9</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC9[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC10</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC10[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC11</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC11[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC12</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC12[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC13</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC13[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC14</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC14[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC15</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC15[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC16</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC16[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC17</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC17[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC18</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC18[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC19</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC19[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC20</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC20[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC21</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC21[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC22</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC22[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC23</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC23[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC24</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC24[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC25</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC25[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC26</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC26[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC27</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC27[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC28</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC28[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC29</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC29[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC30</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC30[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC31</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC31[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC32</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC32[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC33</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC33[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC34</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC34[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC35</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC35[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC36</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC36[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC37</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC37[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC38</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC38[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC39</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC39[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC40</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC40[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC41</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC41[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC42</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC42[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC43</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC43[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC44</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC44[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC45</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC45[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC46</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC46[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC47</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC47[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC48</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC48[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC49</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC49[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC50</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC50[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC51</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC51[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC52</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC52[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC53</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC53[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC54</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC54[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC55</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC55[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC56</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC56[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC57</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC57[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC58</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC58[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC59</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC59[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC60</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC60[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC61</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC61[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC62</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC62[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC63</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC63[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPC64</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPC64[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPCS1</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPCS1[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPCS2</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPCS2[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPCS3</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPCS3[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPCS4</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPCS4[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPCS5</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPCS5[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPCS6</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPCS6[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPCS7</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPCS7[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPCS8</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPCS8[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPCS9</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPCS9[t,d]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MOPCS10</name>
<brief>OEM-Überwachungsdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MOPCS10[t,d]
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$TC_TP2</name>
<brief>Werkzeugbezeichner</brief>
<description>$TC_TP2[t]
Werkzeugbezeichner
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_TP1</name>
<brief>Duplo-Nummer</brief>
<description>$TC_TP1[t]
Duplo-Nummer
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_TP3</name>
<brief>Größe nach links</brief>
<description>$TC_TP3[t]
Größe nach links
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_TP4</name>
<brief>Größe nach rechts</brief>
<description>$TC_TP4[t]
Größe nach rechts
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_TP5</name>
<brief>Größe nach oben</brief>
<description>$TC_TP5[t]
Größe nach oben
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_TP6</name>
<brief>Größe nach unten</brief>
<description>$TC_TP6[t]
Größe nach unten
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_TP7</name>
<brief>Magazinplatztyp</brief>
<description>$TC_TP7[t]
Magazinplatztyp
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_TP8</name>
<brief>Status</brief>
<description>$TC_TP8[t]
Status
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_TP9</name>
<brief>Art der Werkzeugüberwachung</brief>
<description>$TC_TP9[t]
Art der Werkzeugüberwachung
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_TP11</name>
<brief>Untergruppe für $P_USEKT</brief>
<description>$TC_TP11[t]
Festlegung der Untergruppe zu der das Werkzeug gehört. (Siehe $P_USEKT) Das Datum ist Bit-codiert.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_TP10</name>
<brief>Reihenfolge der Ersatzwerkzeuge bei der Werkzeugsuche</brief>
<description>$TC_TP10[t]
Auswahl-Reihenfolge der Ersatzwerkzeuge, wenn dies mit $TC_MAMP2, Bit 3 eingestellt ist Auswahl des Ersatzwerkzeugs erfolgt mit aufsteigenden Werten. Es erfolgt keine Prüfung auf Eindeutigkeit.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$TC_TP_PROTA</name>
<brief>Name für den Schutzbereich</brief>
<description>$TC_TP_PROTA[t]
Name des 3 dimensionalen Schutzbereichs für das Werkzeug, oder der Name der Datei, die die Beschreibung des Schutzbereichs für das Werkzeug enthält. Ein neuer Name kann nur geschrieben werden, den die Funktion Kollisionsvermeidung bzw. 3D-Schutzbereiche aktiviert
ist.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TP_MAX_VELO</name>
<brief>maximale Drehzahl des Werkzeugs</brief>
<description>$TC_TP_MAX_VELO[t]
Maximale Drehzahl des Werkzeugs, wenn der Wert &gt;0 ist. Wenn keine Drehzahlgrenze definiert ist (=0), dann findet keine Überwachung
statt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TP_MAX_ACC</name>
<brief>maximale Beschleunigung des Werkzeugs</brief>
<description>$TC_TP_MAX_ACC[t]
Maximale Beschleunigung des Werkzeugs, wenn der Wert &gt;0 ist. Wenn keine Beschleunigungsgrenze definiert ist (=0), dann findet keine
Überwachung statt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC1</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC1[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC2</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC2[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC3</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC3[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC4</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC4[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC5</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC5[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC6</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC6[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC7</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC7[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC8</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC8[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC9</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC9[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC10</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC10[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC11</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC11[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC12</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC12[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC13</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC13[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC14</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC14[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC15</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC15[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC16</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC16[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC17</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC17[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC18</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC18[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC19</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC19[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC20</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC20[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC21</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC21[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC22</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC22[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC23</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC23[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC24</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC24[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC25</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC25[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC26</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC26[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC27</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC27[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC28</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC28[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC29</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC29[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC30</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC30[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC31</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC31[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC32</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC32[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC33</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC33[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC34</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC34[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC35</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC35[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC36</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC36[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC37</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC37[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC38</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC38[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC39</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC39[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC40</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC40[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC41</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC41[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC42</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC42[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC43</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC43[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC44</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC44[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC45</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC45[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC46</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC46[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC47</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC47[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC48</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC48[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC49</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC49[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC50</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC50[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC51</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC51[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC52</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC52[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC53</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC53[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC54</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC54[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC55</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC55[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC56</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC56[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC57</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC57[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC58</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC58[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC59</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC59[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC60</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC60[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC61</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC61[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC62</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC62[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC63</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC63[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPC64</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPC64[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPCS1</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPCS1[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPCS2</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPCS2[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPCS3</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPCS3[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPCS4</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPCS4[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPCS5</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPCS5[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPCS6</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPCS6[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPCS7</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPCS7[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPCS8</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPCS8[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPCS9</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPCS9[t]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPCS10</name>
<brief>OEM-Werkzeugdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist DOUBLE
$TC_TPCS10[t]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_TPG1</name>
<brief>Spindelnummer</brief>
<description>$TC_TPG1[t]
Spindelnummer
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_TPG2</name>
<brief>Verkettungsvorschrift</brief>
<description>$TC_TPG2[t]
Verkettungsvorschrift
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPG3</name>
<brief>minimaler Scheibenradius</brief>
<description>$TC_TPG3[t]
minimaler Scheibenradius
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPG4</name>
<brief>minimale Scheibenbreite</brief>
<description>$TC_TPG4[t]
minimale Scheibenbreite
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPG5</name>
<brief>aktuelle Scheibenbreite</brief>
<description>$TC_TPG5[t]
aktuelle Scheibenbreite
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPG6</name>
<brief>maximale Drehzahl</brief>
<description>$TC_TPG6[t]
maximale Drehzahl
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPG7</name>
<brief>max. Umfangsgeschwindigkeit</brief>
<description>$TC_TPG7[t]
max. Umfangsgeschwindigkeit
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_TPG8</name>
<brief>Neigungswinkel schräge Scheibe</brief>
<description>$TC_TPG8[t]
Neigungswinkel schräge Scheibe
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_TPG9</name>
<brief>Parameternr. für Radiusberechnung</brief>
<description>$TC_TPG9[t]
Parameternr. für Radiusberechnung
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$TC_TPG_DRSPROG</name>
<brief>Parameter f. Dateiname</brief>
<description>$TC_TPG_DRSPROG[t]
Parameter f. Dateiname
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$TC_TPG_DRSPATH</name>
<brief>Parameter f. Pfad</brief>
<description>$TC_TPG_DRSPATH[t]
Parameter f. Pfad
</description>
</parameter>

<parameter type="BOOL" dim="2">
<name>$TC_MPP3</name>
<brief>Nebenplatzbetrachtung ein/aus</brief>
<description>$TC_MPP3[n,m]
Nebenplatzbetrachtung ein/aus
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPP1</name>
<brief>Platzart</brief>
<description>$TC_MPP1[n,m]
Platzart
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPP2</name>
<brief>Platztyp</brief>
<description>$TC_MPP2[n,m]
Platztyp
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPP6</name>
<brief>T-Nr. des WZ auf diesem Platz</brief>
<description>$TC_MPP6[n,m]
T-Nr. des WZ auf diesem Platz
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPP4</name>
<brief>Platzzustand</brief>
<description>$TC_MPP4[n,m]
Platzzustand
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPP5</name>
<brief>noch zu definieren</brief>
<description>$TC_MPP5[n,m]
Zwischenspeichermagazin: Platzartindex
reale Magazine: Verschleißverbundnummer
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPP7</name>
<brief>Adapternummer des WZ-Adapters</brief>
<description>$TC_MPP7[n,m]
Adapternummer des WZ-Adapters auf diesem Platz
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPP66</name>
<brief>T-Nr. des im Zwischenspeicher befindlichen WZ</brief>
<description>$TC_MPP66[n,m]
T-Nr. des im Zwischenspeicher befindlichen Werkzeugs, für das der durch n,m bestimmte Platz reserviert ist.
Schreiboperation ist nur sinnvoll beim Laden einer Sicherungsdatei nach NCK.
Die Namensgebung ist angelehnt an $TC_MPP6 - T-Nr. des auf dem Magazinplatz befindlichen WZs.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPP_SP</name>
<brief>Spindel-Nummer, die dem Werkzeughalter zugeordnet ist</brief>
<description>$TC_MPP_SP[n,m]
Nur von Bedeutung, wenn
- mit Werkzeughaltern gearbeitet wird ($MC_TOOLHOLDER_MANAGEMENT &gt; 0)
- der Magazinplatz "m" zu einem Zwischenmagazin "n" gehört
- der Magazinplatz einen Werkzeughalter beschreibt ($TC_MPP1[n,m]=2)
In diesem Fall enthält die Systemvariable die Spindel-Nummer,  deren Drehzahl auf die maximale Werkzeug-Drehzahl überwacht werden soll.
Wenn nicht mit Werkzeughaltern gearbeitet wird ($MC_TOOLHOLDER_MANAGEMENT = 0), enthält die Variable den Wert des Spindel-
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC1</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC1[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC2</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC2[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC3</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC3[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC4</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC4[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC5</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC5[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC6</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC6[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC7</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC7[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC8</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC8[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC9</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC9[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC10</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC10[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC11</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung  ist     INT
$TC_MPPC11[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC12</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC12[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC13</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC13[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC14</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung  ist     INT
$TC_MPPC14[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC15</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC15[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC16</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC16[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC17</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC17[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC18</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC18[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC19</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC19[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC20</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC20[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC21</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC21[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC22</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC22[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC23</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC23[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC24</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC24[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC25</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC25[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC26</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC26[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC27</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC27[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC28</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC28[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC29</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC29[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC30</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC30[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC31</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC31[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC32</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC32[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC33</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC33[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC34</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC34[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC35</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC35[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC36</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC36[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC37</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC37[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC38</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC38[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC39</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC39[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC40</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC40[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC41</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC41[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC42</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC42[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC43</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC43[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC44</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC44[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC45</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC45[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC46</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC46[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC47</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC47[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC48</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC48[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC49</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC49[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC50</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC50[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC51</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC51[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC52</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC52[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC53</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC53[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC54</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC54[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC55</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC55[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC56</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC56[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC57</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC57[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC58</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC58[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC59</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC59[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC60</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC60[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC61</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC61[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC62</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC62[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC63</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC63[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPC64</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPC64[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPCS1</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPCS1[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPCS2</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPCS2[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPCS3</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPCS3[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPCS4</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPCS4[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPCS5</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPCS5[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPCS6</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPCS6[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPCS7</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPCS7[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPCS8</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPCS8[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPCS9</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPCS9[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPPCS10</name>
<brief>OEM-Magazinplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MPPCS10[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MDP1</name>
<brief>Abstand zur Wechselstelle</brief>
<description>$TC_MDP1[n,m]
Abstand zur Wechselstelle
des Magazins n zum Platz m des 1. internen Magazins
internal mag. 1 Distanz Parameter
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MDP2</name>
<brief>Abstand zur Wechselstelle</brief>
<description>$TC_MDP2[n,m]
Abstand zur Wechselstelle
des Magazins n zum Platz m des 2. internen Magazins
internal mag. 2 Distanz Parameter
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MLSR</name>
<brief>Zuordungung Zwischenspeicher zu Spindel</brief>
<description>$TC_MLSR[n,m]=0
Zuordnung des Zwischenspeicherplatzes n zum Zwischenspeicherplatz m. m muss einen Platz vom Typ 'Spindel' bezeichnen.
n muss einen Platz bezeichnen, der nicht den Typ 'Spindel' hat.
Damit kann z.B. definiert werden, welche Greifer,... welchen Spindeln
zugeordnet sind. Der Wert Parameterwert ist fix = 0 definiert.
Der Schreibvorgang definiert eine Beziehung, der Lesevorgang prüft, ob eine bestimmte Beziehung besteht. Besteht sie nicht, so gibt es einen
Alarm beim Lesen.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MPTH</name>
<brief>Magazinplatztypenhierarchie</brief>
<description>$TC_MPTH[n,m]
Magazinplatztypenhierarchie Die Platztypen können durch Programmierung dieser Systemvariablen in eine Hierarchie gebracht         werden.
n: = Index der Hierarchie, von 0... $MN_MM_MAX_NUM_OF_HIERARCHIES-1
m: = Index innerhalb der Hierarchie n, von 0... $MN_MM_MAX_HIERARCHY_ENTRIES-1
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$TC_MAP2</name>
<brief>Bezeichner des Magazins</brief>
<description>$TC_MAP2[n]
Bezeichner des Magazins
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAP1</name>
<brief>Art des Magazins</brief>
<description>$TC_MAP1[n]
Art des Magazins
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAP3</name>
<brief>Zustand des Magazins</brief>
<description>$TC_MAP3[n]
Zustand des Magazins
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAP4</name>
<brief>Verkettung zu Nachfolgemagazin</brief>
<description>$TC_MAP4[n]
Verkettung zu Nachfolgemagazin
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAP5</name>
<brief>Verkettung zu Vorgängermagazin</brief>
<description>$TC_MAP5[n]
Verkettung zu Vorgängermagazin
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAP6</name>
<brief>Anzahl Zeilen</brief>
<description>$TC_MAP6[n]
Anzahl Zeilen
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAP7</name>
<brief>Anzahl Spalten</brief>
<description>$TC_MAP7[n]
Anzahl Spalten
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAP8</name>
<brief>Aktuelle Magazinposition</brief>
<description>$TC_MAP8[n]
Aktuelle Magazinposition bezogen auf die Wechselposition
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAP9</name>
<brief>Aktuelle Verschleißverbundnummer</brief>
<description>$TC_MAP9[n]
Aktuelle Verschleißverbundnummer
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAP10</name>
<brief>Aktuelle Suchstrategien des Magazins.</brief>
<description>$TC_MAP10[n]
Aktuelle Suchstrategien des Magazins.
- WZ-Suchstrategie
- Leerplatzsuchstrategie (Bit 14,15 und 16 können nicht geändert werden und sind ausmaskiert.)
Standardmäßig wird von NCK der Wert von $TC_MAMP2 eingetragen. Insbesondere die global wirksamen Bit 14, 15 und 16 werden über $TC_MAMP2 eingetragen.

Ein gesetztes Bit hat folgende Bedeutung:

WZ-Suche:
Bit0=0: (Defaultstrategie) Nimm das erste verfügbare WZ das in der WZ-Gruppe gefunden wird. Suche zuerst in dem Magazin, aus dem der letzte Wechsel erfolgte.
Bit0=1: Wähle das "aktive" WZ im Magazin des zuvor gewechselten WZ, sonst suche das Ersatzwerkzeug mit kleinster Duplo-Nummer. Falls in diesem Magazin kein WZ gefunden wird, wird die Suche in den anderen verbundenen Magazinen fortgesetzt.
Bit1: Suche das nächste Ersatzwerkzeug aus, das die kürzeste Entfernung von der aktuellen Magazinposition hat.
Bit2: Wähle das "aktive" WZ, sonst Ersatzwerkzeug mit der kleinsten in $TC_TP10 enthaltenen Nummer.
Bit3: Suche das Werkzeug in der Gruppe, mit dem kleinsten Istwert der überwachten Größe.
Bit4: Suche das Werkzeug in der Gruppe, mit dem größten Istwert der überwachten Größe.
Bit5: Reserviert
Bit6: Suche vorrangig im aktuell betrachteten Magazin (wirkt nur in Verbindung mit Bit 7=1).
Bit7=0: Beginn der WZ-Suche im Magazin, aus dem das zuletzt gewechselte WZ stammt.
Bit7=1: Beginn der Suche immer im 1. Magazin der Distanztabelle.

Hinweis:
Bit7=1 + Bit0=1 oder Bit2=1, falls kein "aktives WZ" im Magazin gefunden wird, dann wird - falls vorhanden - das aktive WZ aus einem anderen, mit dem WZHalter verbundenen Magazinen angewählt

Leerplatzsuche:
Bit8: Vorwärts-Suchen. Die Suche erfolgt ab Platz-Nr.1 in aufsteigender Reihenfolge.
Bit9: Vorwärts-Suchen. Die Suche erfolgt ab aktuellem Platz an der Wechselstelle in aufsteigender Reihenfolge.
Bit10: Rückwärts-Suchen. Die Suche erfolgt ab letzter Platz-Nr. rückwärts.
Bit11: Rückwärts-Suchen. Die Suche erfolgt ab aktuellem Platz an der Wechselstelle rückwärts.
Bit12: Symmetrisches Suchen. Die Suche beginnt bei aktueller Platz-Nr. an der Wechselstelle (1. Platz links, 1. Platz rechts, 2. Platz links, 2. Platz rechts. usw.).
Bit13: 1:1-Tausch (nur beim Werkzeugwechsel von Bedeutung): Wenn Platztyp und Größe des Alt- und Neu-Werkzeugs gleich sind, wird der Magazinplatz des "neuen" einzuwechselnden Werkzeugs an das "alte" auszuwechselnde Werkzeug übertragen und umgekehrt. Der 1:1-Tausch wird vorrangig geprüft. Wenn der 1:1-Tausch nicht möglich ist, wirken die anderen Einstellungen für die Suchstrategie.
Bit14=0: Suche vorrangig in den einzelnen Magazinen. Wenn kein möglicher Platz gefunden wird, suche im nächsten Magazin nach einen freien Platz für das Werkzeug.
Bit14=1: Suche in allen Magazinen nach dem besten Platz entsprechend der Hierarchie für das Werkzeug.
Bit15=0: (konventioneller Hierarchieart): Bei dieser Art wird der Platztyp des suchenden Werkzeugs in der Tabelle der Systemvariablen $TC_MPTH gesucht. Wird der Platztyp gefunden, wird diese Hierarchie genommen und von dieser Stufe bis zum Ende ausgewertet.
Bit15=1: (alternative Hierarchieart): Für die ausgezeichneten Platztypen 1, ..., $MN_MM_MAX_NUM_OF_HIERARCHIES können Platztyphierarchien definiert werden. Die Hierarchie für Platztyp 1 wird durch $TC_MPTH[0,n] definiert, für den Platztyp 2 wird durch $TC_MPTH[1,n] definiert und so weiter. (n: Index innerhalb einer Hierarchie). Es können bei dieser Einstellung ein Platztyp in verschiedenen Hierarchien definiert sein.
Bit16: Hierarchie-Betrachtung wird bei der Mini-Hierarchie, die nur aus dem Platztyp selbst und dem Platztyp 0 besteht, aufgehoben. In diesem Fall wird bei der Leerplatzsuche nicht zwischen dem passenden Platztyp ( $TC_TP7 == $TC_MPP2) und dem allgemeinen Platztyp "0" des Magazinplatzes unterschieden.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC1</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC1[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC2</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC2[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC3</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC3[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC4</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC4[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC5</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC5[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC6</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC6[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC7</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC7[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC8</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC8[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC9</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC9[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC10</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC10[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC11</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC11[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC12</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC12[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC13</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC13[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC14</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC14[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC15</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC15[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC16</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC16[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC17</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC17[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC18</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC18[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC19</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC19[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC20</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC20[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC21</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC21[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC22</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC22[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC23</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC23[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC24</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC24[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC25</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC25[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC26</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC26[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC27</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC27[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC28</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC28[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC29</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC29[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC30</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC30[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC31</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC31[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC32</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC32[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC33</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC33[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC34</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC34[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC35</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC35[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC36</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC36[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC37</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC37[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC38</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC38[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC39</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC39[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC40</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC40[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC41</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC41[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC42</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC42[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC43</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC43[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC44</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC44[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC45</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC45[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC46</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC46[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC47</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC47[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC48</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC48[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC49</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC49[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC50</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC50[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC51</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC51[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC52</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC52[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC53</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC53[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC54</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC54[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC55</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC55[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC56</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC56[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC57</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC57[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC58</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC58[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC59</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC59[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC60</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC60[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC61</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC61[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC62</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC62[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC63</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC63[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPC64</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPC64[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPCS1</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPCS1[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPCS2</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPCS2[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPCS3</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPCS3[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPCS4</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPCS4[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPCS5</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPCS5[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPCS6</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPCS6[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPCS7</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPCS7[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPCS8</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPCS8[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPCS9</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPCS9[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MAPCS10</name>
<brief>OEM-Magazindatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MAPCS10[n]
</description>
</parameter>

<parameter type="STRING" dim="0">
<name>$TC_MAMP1</name>
<brief>Bezeichner des Magazinbausteins</brief>
<description>Bezeichner des Magazinbausteins
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$TC_MAMP2</name>
<brief>Art der Suchstrategie (WZ-Suche und Leerplatzsuche)</brief>
<description>Art der WZ-Suche (bit0..7) und Art der Leerplatzsuche (bit8..16)

WZ-Suche:
Bit0=0: (Defaultstrategie) Nimm das erste verfügbare WZ das in der WZ-Gruppe gefunden wird. Suche zuerst in dem Magazin, aus dem der letzte Wechsel erfolgte.
Bit0=1: Wähle das "aktive" WZ im Magazin des zuvor gewechselten WZ, sonst suche das Ersatzwerkzeug mit kleinster Duplonummer. Falls in diesem Magazin kein WZ gefunden wird, wird die Suche in den anderen verbundenen Magazinen fortgesetzt.
Bit1: Suche das nächste Ersatzwerkzeug aus, das die kürzeste Entfernung von der aktuellen Magazinposition hat.
Bit2: Wähle das "aktive" WZ, sonst Ersatzwerkzeug mit der kleinsten in $TC_TP10 enthaltenen Nummer.
Bit3: Suche das Werkzeug in der Gruppe, mit dem kleinsten Istwert der überwachten Größe.
Bit4: Suche das Werkzeug in der Gruppe, mit dem größten Istwert der überwachten Größe.
Bit5: Reserviert
Bit6: Suche vorrangig im aktuell betrachteten Magazin (wirkt nur in Verbindung mit Bit 7=1).
Bit7=0: Beginn der WZ-Suche im Magazin, aus dem das zuletzt gewechselte WZ stammt.
Bit7=1: Beginn der Suche immer im 1. Magazin der Distanztabelle.
Hinweis:
Bit7=1 + Bit0=1 oder Bit2=1, falls kein "aktives WZ" im Magazin gefunden wird, dann wird - falls vorhanden - das aktive WZ aus einem anderen, mit dem WZHalter verbundenen Magazinen angewählt

Leerplatzsuche:
Bit8: Vorwärts-Suchen. Die Suche erfolgt ab Platz-Nr.1 in aufsteigender Reihenfolge.
Bit9: Vorwärts-Suchen. Die Suche erfolgt ab aktuellem Platz an der Wechselstelle in aufsteigender Reihenfolge.
Bit10: Rückwärts-Suchen. Die Suche erfolgt ab letzter Platz-Nr. rückwärts.
Bit11: Rückwärts-Suchen. Die Suche erfolgt ab aktuellem Platz an der Wechselstelle rückwärts.
Bit12: Symmetrisches Suchen. Die Suche beginnt bei aktueller Platz-Nr. an der Wechselstelle (1. Platz links, 1. Platz rechts, 2. Platz links, 2. Platz rechts. usw.).
Bit13: 1:1-Tausch (nur beim Werkzeugwechsel von Bedeutung): Wenn Platztyp und Größe des Alt- und Neu-Werkzeugs gleich sind, wird der Magazinplatz des "neuen" einzuwechselnden Werkzeugs an das "alte" auszuwechselnde Werkzeug übertragen und umgekehrt. Der 1:1-Tausch wird vorrangig geprüft. Wenn der 1:1-Tausch nicht möglich ist, wirken die anderen Einstellungen für die Suchstrategie.
Bit14=0: Suche vorrangig in den einzelnen Magazinen. Wenn kein möglicher Platz gefunden wird, suche im nächsten Magazin nach einen freien Platz für das Werkzeug.
Bit14=1: Suche in allen Magazinen nach dem besten Platz entsprechend der Hierarchie für das Werkzeug.
Bit15=0: (konventioneller Hierarchieart): Bei dieser Art wird der Platztyp des suchenden Werkzeugs in der Tabelle der Systemvariablen $TC_MPTH gesucht. Wird der Platztyp gefunden, wird diese Hierarchie genommen und von dieser Stufe bis zum Ende ausgewertet.
Bit15=1: (alternative Hierarchieart): Für die ausgezeichneten Platztypen 1, ..., $MN_MM_MAX_NUM_OF_HIERARCHIES können Platztyphierarchien definiert werden. Die Hierarchie für Platztyp 1 wird durch $TC_MPTH[0,n] definiert, für den Platztyp 2 wird durch $TC_MPTH[1,n] definiert und so weiter. (n: Index innerhalb einer Hierarchie). Es können bei dieser Einstellung ein Platztyp in verschiedenen Hierarchien definiert sein.
Bit16: Hierarchie-Betrachtung wird bei der Mini-Hierarchie, die nur aus dem Platztyp selbst und dem Platztyp 0 besteht, aufgehoben. In diesem Fall wird bei der Leerplatzsuche nicht zwischen dem passenden Platztyp ( $TC_TP7 == $TC_MPP2) und dem allgemeinen Platztyp "0" des Magazinplatzes unterschieden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$TC_MAMP3</name>
<brief>Behandlung der Werkzeuge bei Verschleißverbunden</brief>
<description>Behandlung der Werkzeuge bei Verschleißverbunden
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_ADPTT</name>
<brief>Adaptertransformationsnummer</brief>
<description>Adaptertransformationsnummer
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_ADPT1</name>
<brief>Adaptergeometrie: Länge 1</brief>
<description>Adaptergeometrie: Länge 1
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_ADPT2</name>
<brief>Adaptergeometrie: Länge 2</brief>
<description>Adaptergeometrie: Länge 2
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_ADPT3</name>
<brief>Adaptergeometrie: Länge 3</brief>
<description>Adaptergeometrie: Länge 3
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTPN</name>
<brief>Anzahl Positionen</brief>
<description>Anzahl Positionen
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$TC_MTP2</name>
<brief>Bezeichner des Multitool</brief>
<description>Bezeichner des Multitool
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTP3</name>
<brief>Größe nach links</brief>
<description>Größe nach links
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTP4</name>
<brief>Größe nach rechts</brief>
<description>Größe nach rechts
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTP5</name>
<brief>Größe nach oben</brief>
<description>Größe nach oben
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTP6</name>
<brief>Größe nach unten</brief>
<description>Größe nach unten
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTP7</name>
<brief>Multitoolplatztyp</brief>
<description>Multitoolplatztyp
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTP8</name>
<brief>Zustand</brief>
<description>Zustand
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTP_POS</name>
<brief>Position</brief>
<description>Position
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTP_KD</name>
<brief>Art der Abstandskodierung</brief>
<description>Art der Abstandskodierung
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$TC_MTP_PROTA</name>
<brief>Name für den Schutzbereich.</brief>
<description>Name des 3 dimensionalen Schutzbereichs für das Multitool, oder der Name der Datei, die die Beschreibung des Schutzbereichs für das Multitool enthält. Ein neuer Name kann nur geschrieben werden, wenn die Funktion Kollisionsvermeidung bzw. 3D-Schutzbereiche aktiviert
ist.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC1</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC1[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC2</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC2[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC3</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC3[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC4</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC4[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC5</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC5[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC6</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC6[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC7</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC7[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC8</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC8[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC9</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC9[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC10</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC10[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC11</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC11[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC12</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC12[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC13</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC13[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC14</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC14[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC15</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC15[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC16</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC16[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC17</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC17[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC18</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC18[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC19</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC19[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC20</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC20[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC21</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC21[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC22</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC22[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC23</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC23[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC24</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC24[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC25</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC25[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC26</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC26[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC27</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC27[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC28</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC28[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC29</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC29[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC30</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC30[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC31</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC31[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC32</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC32[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC33</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC33[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC34</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC34[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC35</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC35[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC36</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC36[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC37</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC37[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC38</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC38[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC39</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC39[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC40</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC40[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC41</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC41[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC42</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC42[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC43</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC43[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC44</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC44[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC45</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC45[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC46</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC46[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC47</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC47[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC48</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC48[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC49</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC49[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC50</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC50[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC51</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC51[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC52</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC52[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC53</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC53[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC54</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC54[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC55</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC55[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC56</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC56[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC57</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC57[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC58</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC58[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC59</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC59[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC60</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC60[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC61</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC61[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC62</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC62[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC63</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC63[n]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_MTPC64</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPC64[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTPCS1</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPCS1[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTPCS2</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPCS2[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTPCS3</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPCS3[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTPCS4</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPCS4[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTPCS5</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPCS5[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTPCS6</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPCS6[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTPCS7</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPCS7[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTPCS8</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPCS8[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTPCS9</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPCS9[n]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_MTPCS10</name>
<brief>OEM-Multitooldatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPCS10[n]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MTPP2</name>
<brief>Multitoolplatztyp</brief>
<description>$TC_MTPP2[n,m]
Multitoolplatztyp
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MTPP4</name>
<brief>Multitoolplatzzustand</brief>
<description>$TC_MTPP4[n,m]
Multitoolplatzzustand
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MTPP6</name>
<brief>T-Nr. des WZ auf diesem Multitoolplatz</brief>
<description>$TC_MTPP6[n,m]
T-Nr. des WZ auf diesem Multitoolplatz
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MTPP7</name>
<brief>Adapternummer des WZ-Adapters auf diesem Multitoolplatz</brief>
<description>$TC_MTPP7[n,m]
Adapternummer des WZ-Adapters auf diesem Multitoolplatz
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPL</name>
<brief>Abstand vom Referenzplatz, Länge</brief>
<description>$TC_MTPPL[n,m]
Abstand vom Referenzplatz, Länge
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPA</name>
<brief>Abstand vom Referenzplatz, Winkel</brief>
<description>$TC_MTPPA[n,m]
Abstand vom Referenzplatz, Winkel
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC1</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC1[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC2</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC2[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC3</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC3[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC4</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC4[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC5</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC5[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC6</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC6[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC7</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC7[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC8</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC8[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC9</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC9[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC10</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC10[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC11</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC11[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC12</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC12[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC13</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC13[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC14</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC14[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC15</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC15[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC16</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC16[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC17</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC17[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC18</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC18[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC19</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC19[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC20</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC20[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC21</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC21[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC22</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC22[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC23</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC23[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC24</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC24[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC25</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC25[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC26</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC26[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC27</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC27[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC28</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC28[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC29</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC29[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC30</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC30[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC31</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC31[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC32</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC32[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC33</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC33[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC34</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC34[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC35</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC35[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC36</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC36[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC37</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC37[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC38</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC38[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC39</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC39[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC40</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC40[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC41</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC41[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC42</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC42[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC43</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC43[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC44</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC44[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC45</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC45[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC46</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC46[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC47</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC47[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC48</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC48[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC49</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC49[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC50</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC50[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC51</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC51[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC52</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC52[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC53</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC53[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC54</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC54[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC55</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC55[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC56</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC56[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC57</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC57[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC58</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC58[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC59</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC59[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC60</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC60[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC61</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC61[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC62</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC62[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC63</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC63[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$TC_MTPPC64</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPC64[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MTPPCS1</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPCS1[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MTPPCS2</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPCS2[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MTPPCS3</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPCS3[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MTPPCS4</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPCS4[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MTPPCS5</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPCS5[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MTPPCS6</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPCS6[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MTPPCS7</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPCS7[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MTPPCS8</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPCS8[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MTPPCS9</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPCS9[n,m]
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$TC_MTPPCS10</name>
<brief>OEM-Multitoolplatzdatum</brief>
<description>Der Typ kann durch Maschinendatum vorgegeben werden. Voreinstellung ist INT
$TC_MTPPCS10[n,m]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_ENC_COMP</name>
<brief>EEC-Tabelle: Kompensationswert</brief>
<description>$AA_ENC_COMP[n,m,&lt;Achse&gt;]
Kompensationswerte
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_ENC_COMP_STEP</name>
<brief>EEC-Tabelle: Stützpunktabstand</brief>
<description>$AA_ENC_COMP_STEP[n,&lt;Achse&gt;]
Schrittweite
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_ENC_COMP_MIN</name>
<brief>EEC-Tabelle: Anfangsposition</brief>
<description>$AA_ENC_COMP_MIN[n,&lt;Achse&gt;]
Startposition der Kompensation
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_ENC_COMP_MAX</name>
<brief>EEC-Tabelle: Endposition</brief>
<description>$AA_ENC_COMP_MAX[n,&lt;Achse&gt;]
Endposition der Kompensation
</description>
</parameter>

<parameter type="BOOL" dim="2">
<name>$AA_ENC_COMP_IS_MODULO</name>
<brief>EEC-Tabelle: Modulofunktionalität</brief>
<description>$AA_ENC_COMP_IS_MODULO[n,&lt;Achse&gt;]
Kompensation ist Modulo
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AN_CEC</name>
<brief>CEC-Tabelle: Kompensationswert</brief>
<description>$AN_CEC[n,m]
Kompensationswert
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_CEC_INPUT_NCU</name>
<brief>CEC-Tabelle: Basisachse auf NCU</brief>
<description>$AN_CEC_INPUT_NCU[n]:
NCU auf der die Basisachse gerechnet wird
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>$AN_CEC_INPUT_AXIS</name>
<brief>CEC-Tabelle: Basisachse</brief>
<description>$AN_CEC_INPUT_AXIS[n]:
Name der Achse, deren Sollwert als Eingang der Kompensationstabelle dient
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_CEC_OUTPUT_NCU</name>
<brief>CEC-Tabelle: Kompensationsachse auf NCU</brief>
<description>$AN_CEC_OUTPUT_NCU[n]:
NCU auf der die Kompensationsachse gerechnet wird
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>$AN_CEC_OUTPUT_AXIS</name>
<brief>CEC-Tabelle: Kompensationsachse</brief>
<description>$AN_CEC_OUTPUT_AXIS[n]:
Name der Achse, auf die der Ausgang der Kompensationstabelle wirkt
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_CEC_STEP</name>
<brief>CEC-Tabelle: Stützpunktabstand</brief>
<description>$AN_CEC_STEP[n]
Distanz der Korrekturwerte
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_CEC_MIN</name>
<brief>CEC-Tabelle: Anfangsposition</brief>
<description>AN_CEC_MIN[n]
Startposition der Kompensationstabelle
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_CEC_MAX</name>
<brief>CEC-Tabelle: Endposition</brief>
<description>AN_CEC_MAX[n]
Endposition der Kompensationstabelle
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_CEC_DIRECTION</name>
<brief>CEC-Tabelle: Richtungsabhängigkeit</brief>
<description>$AN_CEC_DIRECTION[n]
aktiviert richtungsabhängiges Wirken der Kompensationstabelle
0: beide Verfahrrichtungen der Basisachse
1: positive Verfahrrichtung der Basisachse
-1: negative Verfahrrichtung der Basisachse
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_CEC_MULT_BY_TABLE</name>
<brief>CEC-Tabelle: Multiplikation</brief>
<description>$AN_CEC_MULT_BY_TABLE[n]
Nummer der Tabelle, deren Ausgangswert mit dem Ausgangswert der Kompensationstabelle multipliziert werden soll
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AN_CEC_IS_MODULO</name>
<brief>CEC-Tabelle: Modulofunktionalität</brief>
<description>$AN_CEC_IS_MODULO[n]
TRUE: zyklisches Wiederholen der Kompensationstabelle
FALSE: kein zyklisches Wiederholen der Kompensationstabelle
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_CEC_TYPE</name>
<brief>CEC-Tabelle: Tabellentyp</brief>
<description>$AN_CEC_TYPE[n]
0: kein besonderer Tabellentyp
1: Tabelle vom Typ Zylinderfehlerkompensation
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$SN_PA_ACTIV_IMMED</name>
<brief>Schutzbereich sofort aktiv</brief>
<description>$SN_PA_ACTIV_IMMED[n]
n: Nummer des Schutzbereichs
Schutzbereich sofort nach Hochlauf aktiv
TRUE: Der Schutzbereich ist nach dem Hochlaufen der Steuerung und dem Referenzieren der Achsen sofort aktiv
FALSE: Der Schutzbereich ist nicht sofort aktiv

Hinweis: Diese Variable ist nur als Systemvariable beschreibbar und wird nicht durch die NC-Sprachbefehle zwischen NPROTDEF(..) und EXECUTE(n) beeinflusst.
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_NCK_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>$SN_PA_T_W</name>
<brief>Werkstück-/Werkzeugbezog. Schutzbereich</brief>
<description>$SN_PA_T_W[n]
n: Nummer des Schutzbereichs
Werkstück-/Werkzeugbezogener Schutzbereich
0: werkstückbezogener Schutzbereich
3: werkzeugbezogener Schutzbereich
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_NCK_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$SN_PA_ORI</name>
<brief>Orientierung des Schutzbereiches</brief>
<description>$SN_PA_ORI[n]
n: Nummer des Schutzbereichs
Orientierung des Schutzbereiches
0: Polygonzug in der Ebene aus der 1. und 2. Geo-Achse (G17)
1: Polygonzug in der Ebene aus der 3. und 1. Geo-Achse (G18)
2: Polygonzug in der Ebene aus der 2. und 3. Geo-Achse (G19)
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_NCK_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$SN_PA_LIM_3DIM</name>
<brief>Wirksamkeit Appl-Begrenzung Schutzbereich</brief>
<description>$SN_PA_LIM_3DIM[n]
n: Nummer des Schutzbereichs
Kennung für Begrenzung des Schutzbereichs in der Achse, die senkrecht zum Polygonzug steht
0: keine Begrenzung
1: Begrenzung in positive Richtung
2: Begrenzung in negative Richtung
3: Begrenzung in beide Richtungen
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_NCK_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$SN_PA_PLUS_LIM</name>
<brief>Begrenzung Schutzbereich-Applikate plus</brief>
<description>$SN_PA_PLUS_LIM[n]
n: Nummer des Schutzbereichs
Positive Begrenzung der Schutzbereiche in der Achse, die senkrecht zum Polygonzug steht Nur wirksam wenn $SN_PA_LIM_3DIM[n]=1 oder = 3.
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_NCK_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$SN_PA_MINUS_LIM</name>
<brief>Begrenzung Schutzbereich-Applikate minus</brief>
<description>$SN_PA_MINUS_LIM[n]
n: Nummer des Schutzbereichs
Negative Begrenzung des Schutzbereiches in Minus-Richtung in der Achse, die senkrecht zum Polygonzug steht Nur wirksam wenn $SN_PA_LIM_3DIM[n]=2 oder = 3.
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_NCK_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$SN_PA_CONT_NUM</name>
<brief>Anzahl der gültigen Konturelemente</brief>
<description>$SN_PA_CONT_NUM[n]
n: Nummer des Schutzbereichs
Anzahl der gültigen Konturelemente Schutzbereiche sind erst mit mindestens 2 Konturelemente vollständig beschrieben.
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_NCK_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$SN_PA_CONT_TYP</name>
<brief>Typ des Konturelements</brief>
<description>$SN_PA_CONT_TYP[n,m]
n: Nummer des Schutzbereichs
m: Nummer des Konturelements
Typ (G1, G2, G3) des Konturelements
=0: Kontur nicht definiert
=1: Gerade
=2: Kreiselement (im Uhrzeigersinn)
=3: Kreiselement (gegen Uhrzeigersinn)
Der Endpunkt wird durch $SN_PA_CONT_ORD bzw. $SN_PA_CONT_ABS bestimmt. Beim Konturtyp G2 und G3 bestimmt $SN_PA_CENT_ORD bzw. $SN_PA_CENT_ABS den Mittelpunkt des Kreiselements.
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_NCK_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$SN_PA_CONT_ORD</name>
<brief>Endpunkt des Konturelements (Ordinate)</brief>
<description>$SN_PA_CONT_ORD[n,m]
n: Nummer des Schutzbereichs
m: Nummer des Konturelements
Endpunkt des Konturelements (Ordinate) s. auch Beschreibung zu $SN_PA_CONT_TYP
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_NCK_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$SN_PA_CONT_ABS</name>
<brief>Endpunkt des Konturelements (Abszisse)</brief>
<description>$SN_PA_CONT_ABS[n,m]
n: Nummer des Schutzbereichs
m: Nummer des Konturelements
Endpunkt des Konturelements (Abszisse) s. auch Beschreibung zu $SN_PA_CONT_TYP
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_NCK_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$SN_PA_CENT_ORD</name>
<brief>Mittelpunkt des Konturelements (Ordinate)</brief>
<description>$SN_PA_CENT_ORD[n,m]
n: Nummer des Schutzbereichs
m: Nummer des Konturelements
Mittelpunkt des Konturelements (Ordinate) Nur von Bedeutung, wenn $SN_PA_CONT_TYP[n,m] = 2 oder = 3 ist.
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_NCK_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$SN_PA_CENT_ABS</name>
<brief>Mittelpunkt des Konturelements (Abszisse)</brief>
<description>$SN_PA_CENT_ABS[n,m]
n: Nummer des Schutzbereichs
m: Nummer des Konturelements
Mittelpunkt des Konturelements (Abszisse) Nur von Bedeutung, wenn $SN_PA_CONT_TYP[n,m] = 2 oder = 3 ist.
Hinweis: Diese Variable wird bei REORG nicht wieder hergestellt.
Hinweis: Diese Variable wird mit der Datensicherung gesichert.
Bausteine: _N_NCK_PRO, _N_COMPLETE_PRO und _N_INITIAL_INI
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_A</name>
<brief>ISO-Zyklenparameter für Adresse A</brief>
<description>Wert der programmierten Adresse A im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_B</name>
<brief>ISO-Zyklenparameter für Adresse B</brief>
<description>Wert der programmierten Adresse B im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_C</name>
<brief>ISO-Zyklenparameter für Adresse C</brief>
<description>Wert der programmierten Adresse C im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_D</name>
<brief>ISO-Zyklenparameter für Adresse D</brief>
<description>Wert der programmierten Adresse D im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_E</name>
<brief>ISO-Zyklenparameter für Adresse E</brief>
<description>Wert der programmierten Adresse E im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_F</name>
<brief>ISO-Zyklenparameter für Adresse F</brief>
<description>Wert der programmierten Adresse F im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_G</name>
<brief>ISO-Zyklenparameter für Adresse G</brief>
<description>Wert der programmierten Adresse G im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_H</name>
<brief>ISO-Zyklenparameter für Adresse H</brief>
<description>Wert der programmierten Adresse H im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$C_I</name>
<brief>ISO-Zyklenparameter für Adresse I</brief>
<description>Wert der programmierten Adresse I im ISO2/3-Mode für Zyklenparametrierung und Makrotechnik mit G65 / G66.
Für die Makroprogrammierung mit G65/G66 sind bis zu 10 Einträgen im Satz mit der Adresse I möglich. Die Werte stehen in der programmierten Reihenfolge im Array.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$C_J</name>
<brief>ISO-Zyklenparameter für Adresse J</brief>
<description>Wert der programmierten Adresse J im ISO2/3-Mode für Zyklenparametrierung und Makrotechnik mit G65 / G66.
Für die Makroprogrammierung mit G65/G66 sind bis zu 10 Einträgen im Satz mit der Adresse J möglich. Die Werte stehen in der programmierten Reihenfolge im Array.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$C_K</name>
<brief>ISO-Zyklenparameter für Adresse K</brief>
<description>Wert der programmierten Adresse K im ISO2/3-Mode für Zyklenparametrierung und Makrotechnik mit G65 / G66.
Für die Makroprogrammierung mit G65/G66 sind bis zu 10 Einträgen im Satz mit der Adresse K möglich. Die Werte stehen in der programmierten Reihenfolge im Array.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_L</name>
<brief>ISO-Zyklenparameter für Adresse L</brief>
<description>Wert der programmierten Adresse L im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_M</name>
<brief>ISO-Zyklenparameter für Adresse M</brief>
<description>Wert der programmierten Adresse M im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_N</name>
<brief>ISO-Zyklenparameter für Adresse N</brief>
<description>Wert der programmierten Adresse N im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_O</name>
<brief>ISO-Zyklenparameter für Adresse O</brief>
<description>Wert der programmierten Adresse O im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_P</name>
<brief>ISO-Zyklenparameter für Adresse P</brief>
<description>Wert der programmierten Adresse P im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_Q</name>
<brief>ISO-Zyklenparameter für Adresse Q</brief>
<description>Wert der programmierten Adresse Q im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_R</name>
<brief>ISO-Zyklenparameter für Adresse R</brief>
<description>Wert der programmierten Adresse R im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_S</name>
<brief>ISO-Zyklenparameter für Adresse S</brief>
<description>Wert der programmierten Adresse S im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_T</name>
<brief>Zyklenparameter für Adresse T</brief>
<description>Wert der programmierten Adresse T für Zyklenparametrierung (ISO2/3-Mode) und T-Funktions-Ersetzung (ISO2/3- und Standard-Mode)
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_U</name>
<brief>ISO-Zyklenparameter für Adresse U</brief>
<description>Wert der programmierten Adresse U im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_V</name>
<brief>ISO-Zyklenparameter für Adresse V</brief>
<description>Wert der programmierten Adresse V im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_W</name>
<brief>ISO-Zyklenparameter für Adresse W</brief>
<description>Wert der programmierten Adresse W im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_X</name>
<brief>ISO-Zyklenparameter für Adresse X</brief>
<description>Wert der programmierten Adresse X im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_Y</name>
<brief>ISO-Zyklenparameter für Adresse Y</brief>
<description>Wert der programmierten Adresse Y im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_Z</name>
<brief>ISO-Zyklenparameter für Adresse Z</brief>
<description>Wert der programmierten Adresse Z im ISO2/3-Mode für Zyklenparametrierung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_DL</name>
<brief>ISO-Parameter für Adresse DL</brief>
<description>Wert der programmierten Adresse DL (additive Werkzeugkorrektur) bei einem Unterprogrammaufruf per M/T-Funktionsersetzung
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_PI</name>
<brief>ISO-Zyklenparameter für Adresse P</brief>
<description>Programmnummer des mit M96 Pxx im ISO2/3-Mode programmierten Interruptprogramms
</description>
</parameter>

<parameter type="STRING" dim="0">
<name>$C_TS</name>
<brief>Werkzeugbezeichner für T-Funktionsersetzung</brief>
<description>Liefert den String des programmierten Werkzeugbezeichners bei Ersetzung der T-Funktion oder des TCA-Befehls. Werkzeugbezeichner können nur bei aktiver Werkzeugverwaltung bzw. Werkzeugüberwachung ohne Magazinverwaltung programmiert werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_A_PROG</name>
<brief>ISO-Zyklenparameter für Adresse A</brief>
<description>Adresse A ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_B_PROG</name>
<brief>ISO-Zyklenparameter für Adresse B</brief>
<description>Adresse B ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_C_PROG</name>
<brief>ISO-Zyklenparameter für Adresse C</brief>
<description>Adresse C ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_D_PROG</name>
<brief>ISO-Zyklenparameter für Adresse D</brief>
<description>Adresse D ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_E_PROG</name>
<brief>ISO-Zyklenparameter für Adresse E</brief>
<description>Adresse E ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_F_PROG</name>
<brief>ISO-Zyklenparameter für Adresse F</brief>
<description>Adresse F ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_G_PROG</name>
<brief>ISO-Zyklenparameter für Adresse G</brief>
<description>G-Funktion für Zyklenaufruf in diesem Satz programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_H_PROG</name>
<brief>ISO-Zyklenparameter für Adresse H</brief>
<description>Adresse H ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_I_PROG</name>
<brief>ISO-Zyklenparameter für Adresse I</brief>
<description>Adresse I ist einem Satz mit Zyklen- Makroaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_J_PROG</name>
<brief>ISO-Zyklenparameter für Adresse J</brief>
<description>Adresse J ist einem Satz mit Zyklen- Makroaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_K_PROG</name>
<brief>ISO-Zyklenparameter für Adresse K</brief>
<description>Adresse K ist einem Satz mit Zyklen- Makroaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_L_PROG</name>
<brief>ISO-Zyklenparameter für Adresse L</brief>
<description>Adresse L ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_M_PROG</name>
<brief>ISO-Zyklenparameter für Adresse M</brief>
<description>Adresse M ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_N_PROG</name>
<brief>ISO-Zyklenparameter für Adresse N</brief>
<description>Adresse N ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_O_PROG</name>
<brief>ISO-Zyklenparameter für Adresse O</brief>
<description>Adresse O ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_P_PROG</name>
<brief>ISO-Zyklenparameter für Adresse P</brief>
<description>Adresse P ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_Q_PROG</name>
<brief>ISO-Zyklenparameter für Adresse Q</brief>
<description>Adresse Q ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_R_PROG</name>
<brief>ISO-Zyklenparameter für Adresse R</brief>
<description>Adresse R ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_S_PROG</name>
<brief>ISO-Zyklenparameter für Adresse S</brief>
<description>Adresse S ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_T_PROG</name>
<brief>ISO-Zyklenparameter für Adresse T</brief>
<description>Adresse T ist einem Satz mit Zyklenaufruf oder T-Funktions-Ersetzung programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_U_PROG</name>
<brief>ISO-Zyklenparameter für Adresse U</brief>
<description>Adresse U ist im aktuellen Satz programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_V_PROG</name>
<brief>ISO-Zyklenparameter für Adresse V</brief>
<description>Adresse V ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_W_PROG</name>
<brief>ISO-Zyklenparameter für Adresse W</brief>
<description>Adresse W ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_X_PROG</name>
<brief>ISO-Zyklenparameter für Adresse X</brief>
<description>Adresse X ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_Y_PROG</name>
<brief>ISO-Zyklenparameter für Adresse Y</brief>
<description>Adresse Y ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_Z_PROG</name>
<brief>ISO-Zyklenparameter für Adresse Z</brief>
<description>Adresse Z ist einem Satz mit Zyklenaufruf programmiert
0 = nicht programmiert
1 = programmiert
3 = inkrementell programmiert Bit 0 wird gesetzt, wenn die Adresse programmiert ist, absolut oder inkrementell.
Ist die Adresse inkrementell programmiert wird zusätzlich Bit 1 gesetzt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_PI_PROG</name>
<brief>ISO-Zyklenparameter für Adresse P</brief>
<description>0 = nicht programmiert
1 = M96 Pxx Interruptprogramm programmiert
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_G60_PROG</name>
<brief>ISO-Zyklenparameter für G60 im Satz programmiert</brief>
<description>0 = nicht programmiert
1 = G60 ist im Zyklenaufrufsatz programmiert
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_DL_PROG</name>
<brief>ISO-Zyklenparameter für Adresse DL</brief>
<description>Abfrage, ob bei einem Unterprogrammaufruf per M/T-Funktionsersetzung die Adresse DL (additive Werkzeugkorrektur) programmiert wurde.
0 = nicht programmiert
1 = Es wurde unter der Adresse DL eine additive Werkzeugkorrektur programmiert.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_TS_PROG</name>
<brief>Parameter für T-Funktionsersetzung</brief>
<description>Abfrage, ob bei der Ersetzung der T-Funktion oder der Ersetzung des TCA-Befehls ein Werkzeugbezeichner programmiert wurde.
0 = nicht programmiert
1 = programmiert
Werkzeugbezeichner können nur bei aktiver Werkzeugverwaltung bzw. Werkzeugüberwachung ohne Magazinverwaltung programmiert werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_ALL_PROG</name>
<brief>Bitmuster, welche Adressen sind progr.</brief>
<description>Bitmuster aller programmierten Adressen in einem Satz mit Zyklenaufruf Bit0 = Adresse "A" .... Bit25 = Adresse "Z"
Bit = 1 - &gt; Adresse programmiert
Bit = 0 - &gt; Adresse nicht programmiert
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_INC_PROG</name>
<brief>Bitmuster, ob Adressen inkrementell progr.</brief>
<description>Bitmuster aller inkrementell programmierten Adressen in einem Satz mit Zyklenaufruf Bit0 = Adresse "A" .... Bit25 = Adresse "Z"
Bit = 1 - &gt; Adresse inkrementell programmiert
Bit = 0 - &gt; Adresse absolut programmiert
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_TYP_PROG</name>
<brief>Bitmuster, ob Adressen als INT/REAL prog.</brief>
<description>Bitmuster aller programmierten Adressen mit Wert INT oder REAL Bit0 = Adresse "A" .... Bit25 = Adresse "Z"
Bit = 1 - &gt; Adresse mit real Wert programmiert
Bit = 0 - &gt; Adresse mit int Wert programmiert
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_I_NUM</name>
<brief>Anzahl der progr. Adresse I im Satz</brief>
<description>In $C_I_NUM steht die Anzahl der im Satz programmierten Adressen I. Bei der Zyklenprogrammierung ist dieser Wert immer 1, wenn das Bit 0 in $C_I_PROG gesetzt ist. Bei der Makroprogrammierung mit G65/G66 steht hier die Anzahl der im Satz programmierten Adressen "I", (max. 10).
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_J_NUM</name>
<brief>Anzahl der progr. Adresse J im Satz</brief>
<description>In $C_J_NUM steht die Anzahl der im Satz programmierten Adressen "J". Bei der Zyklenprogrammierung ist dieser Wert immer 1, wenn das Bit 0 in $C_J_PROG gesetzt ist. Bei der Makroprogrammierung mit G65/G66 steht hier die Anzahl der im Satz programmierten Adressen "J", (max. 10).
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_K_NUM</name>
<brief>Anzahl der progr. Adresse K im Satz</brief>
<description>In $C_K_NUM steht die Anzahl der im Satz programmierten Adressen I. Bei der Zyklenprogrammierung ist dieser Wert immer 1, wenn das Bit 0 in $C_K_PROG gesetzt ist. Bei der Makroprogrammierung mit G65/G66 steht hier die Anzahl der im Satz programmierten Adressen "K", (max. 10).
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$C_I_ORDER</name>
<brief>Blocknummer der Adresse I, bei IJK-Blöcken</brief>
<description>Nummer das IJK-Blocks, in dem I programmiert wurde Für die Makroprogrammierung mit G65/G66 sind bis zu 10 Einträge im Satz mit der Adresse I möglich. Hierüber kann die Reihenfolge von IJK ausgewertet werden. Es wird immer gemerkt, welche IJK zusammengehören.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$C_J_ORDER</name>
<brief>Blocknummer der Adresse J, bei IJK-Blöcken</brief>
<description>Nummer das IJK-Blocks, in dem J programmiert wurde.
Für die Makroprogrammierung mit G65/G66 sind bis zu 10 Einträge im Satz mit der Adresse J möglich. Hierüber kann die Reihenfolge von IJK ausgewertet werden. Es wird immer gemerkt, welche IJK zusammengehören.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$C_K_ORDER</name>
<brief>Blocknummer der Adresse K, bei IJK-Blöcken</brief>
<description>Nummer das IJK-Blocks, in dem K programmiert wurde.
Für die Makroprogrammierung mit G65/G66 sind bis zu 10 Einträge im Satz mit der Adresse K möglich. Hierüber kann die Reihenfolge von IJK ausgewertet werden. Es wird immer gemerkt, welche IJK zusammengehören.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_ME</name>
<brief>Adresserweiterung bei UP-Aufr. über M-Fkt.</brief>
<description>Adresserweiterung für Adresse M bei Unterprogrammaufruf per M-Funktion
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_TE</name>
<brief>Adresserweiterung bei UP-Aufr. über    T-Fkt.</brief>
<description>Adresserweiterung  für Adresse T bei Unterprogrammaufruf per T-Funktion
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$C_MACPAR</name>
<brief>Hilfsvariable zur Umsetzung von #-Makros</brief>
<description>$MAC_PAR[n]
Makrovariable im Iso2/3-Mode, die im Originalprogramm mit #&lt;Nummer &gt; programmiert ist.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$C_AUX_VALUE</name>
<brief>Parameter für Hilfsfunktionsersetzung</brief>
<description>Parameter für Hilfsfunktionsersetzung. Er enthält den Funktionswert der zu ersetzenden Hilfsfunktion. Z.z.können nur M-Funktionen durch entsprechende Projektierung von $MN_M_NO_FCT_CYCLE ersetzt werden.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$C_AUX_EXT</name>
<brief>Parameter für Hilfsfunktionsersetzung</brief>
<description>Parameter für Hilfsfunktionsersetzung. Er enthält die Adresserweiterung der zu ersetzenden Hilfsfunktion. Z.z.können nur M-Funktionen durch entsprechende Projektierung von $MN_M_NO_FCT_CYCLE ersetzt werden.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$C_AUX_IS_QUICK</name>
<brief>Parameter für Hilfsfunktionsersetzung</brief>
<description>Parameter für Hilfsfunktionsersetzung. Er enthält die Information, ob die zu ersetzende Hilfsfunktion mit schneller (TRUE) oder normaler (FALSE) Quittung ausgegeben werden soll. Z.z.können nur M-Funktionen durch entsprechende Projektierung von $MN_M_NO_FCT_CYCLE ersetzt werden.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$C_T_VALUE</name>
<brief>Zyklenparameter für Adresse T</brief>
<description>Wert der programmierten nicht gesplitteten Adresse T für T-Funktions-Ersetzung und M -Funktions- Ersetzung (ISO3- Mode).
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$C_TCA</name>
<brief>Parameter für Ersetzung des TCA-Befehls</brief>
<description>Abfrage, ob die Ersetzung des TCA-Befehls aktiv ist.
FALSE = TCA-Ersetzung nicht aktiv
TRUE  = TCA-Ersetzung aktiv
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$C_DUPLO_PROG</name>
<brief>Parameter für Ersetzung des TCA-Befehls</brief>
<description>Abfrage, ob bei der Ersetzung des TCA-Befehls eine Duplo-Nummer programmiert wurde.
FALSE = Duplo-Nummer wurde nicht programmiert
TRUE  = Duplo-Nummer wurde programmiert
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_DUPLO</name>
<brief>Parameter für Ersetzung des TCA-Befehls</brief>
<description>Liefert bei Ersetzung des TCA-Befehls den Wert der programmierten Duplo-Nummer.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$C_THNO_PROG</name>
<brief>Parameter für Ersetzung des TCA-Befehls</brief>
<description>Abfrage, ob bei der Ersetzung des TCA-Befehls eine Toolholder- bzw. Spindel-Nummer programmiert wurde.
FALSE = Toolholder- bzw. Spindel-Nummer wurde nicht programmiert
TRUE  = Toolholder- bzw. Spindel-Nummer wurde programmiert
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_THNO</name>
<brief>Parameter für Ersetzung des TCA-Befehls</brief>
<description>Liefert bei Ersetzung des TCA-Befehls den Wert der programmierten Toolholder- bzw. Spindel-Nummer.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_ISOPRINT</name>
<brief>Status ISOOPEN, ISOPRINT, ISOCLOSE</brief>
<description>Statusvariable für ISOOPEN, ISOPRINT, ISOCLOSE.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$C_MTL_PROG</name>
<brief>Parameter für Ersetzung des MTL-Befehls</brief>
<description>Abfrage, ob bei der Ersetzung der T-Funktion auch die Adresse MTL ersetzt wurde.
FALSE = Adresse MTL wurde nicht programmiert
TRUE  = Adresse MTL wurde ersetzt
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$C_MTL</name>
<brief>Parameter für Ersetzung des MTL-Befehls</brief>
<description>Liefert bei Ersetzung des MTL-Befehls den Wert der programmierten Platznummer des Multi-Tools.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_SETUP_TIME</name>
<brief>Zeit seit dem Hochlauf mit Standard-Werten</brief>
<description>Der Timer $AN_SETUP_TIME zählt die Zeit seit dem letzten Steuerungshochlauf mit Standard-Werten ( in Minuten ).
Er wird bei jedem Steuerungshochlauf mit Standard-Daten automatisch genullt.

Anwendung im NC-Programm:
IF $AN_SETUP_TIME &gt;  60000 GOTOF MARK01
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_POWERON_TIME</name>
<brief>Zeit seit dem letzten Steuerungshochlauf</brief>
<description>Der Timer $AN_POWERON_TIME zählt die Zeit seit dem Hochlauf der Steuerung ( in Minuten ).
Er wird bei jedem Steuerungshochlauf automatisch genullt.

Anwendung im NC-Programm :
IF $AN_POWERON_TIME == 480 GOTOF MARK02
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_NCK_VERSION</name>
<brief>NCK-Version</brief>
<description>NCK-Version: ausgewertet wird nur der Vorkommaanteil der Gleitpunktzahl, der Nachkommaanteil kann Kennungen für entwicklungsinterne Zwischenstände enthalten. Der Vorkommaanteil beinhaltet die offizielle Softwarestandskennung des NCK: Beispielsweise ist für den NCK-Stand 20.00.00 ist der Wert der Variablen 200000,0
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$AN_IPO_LOAD_LIMIT</name>
<brief>IPO-Auslastungslimit erreicht</brief>
<description>Die Variable $AN_IPO_LOAD_LIMIT liefert TRUE, wenn das IPO-Auslastungslimit erreicht wird. Über das Maschinendatum $MN_IPO_MAX_LOAD wird eingestellt, ab welcher IPO-Brutto-Laufzeit (in % vom IPO-Takt ) die Variable $AN_IPO_LOAD_LIMIT auf TRUE gesetzt werden soll. Wird der Wert wieder unterschritten, so wird die Variable wieder auf FALSE gesetzt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_IPO_ACT_LOAD</name>
<brief>Aktuelle IPO-Laufzeit</brief>
<description>$AN_IPO_ACT_LOAD liefert die aktuelle IPO-Laufzeit inklusive der Laufzeit der Synchronaktionen aller Kanäle.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_IPO_MAX_LOAD</name>
<brief>Maximale IPO-Laufzeit</brief>
<description>$AN_IPO_MAX_LOAD liefert die längste IPO-Laufzeit eines IPO-Taktes aller Kanäle (inklusive der Laufzeit der Synchronaktionen).
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_IPO_MIN_LOAD</name>
<brief>Kürzeste IPO-Laufzeit</brief>
<description>$AN_IPO_MIN_LOAD liefert die kürzeste IPO-Laufzeit inklusive der Laufzeit der Synchronaktionen pro IPO-Takt aller Kanäle.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_IPO_LOAD_PERCENT</name>
<brief>Verhältnis akt. IPO-Laufzeit/IPO-Takt</brief>
<description>$AN_IPO_LOAD_PERCENT liefert die aktuelle IPO-Last prozentual über alle Kanäle. Berechnet sich aus dem Verhältnis IPO-Laufzeit über alle Kanäle des letzten IPO-Taktes zum IPO-Takt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_SYNC_ACT_LOAD</name>
<brief>Aktuelle Laufzeit für Synchronaktionen</brief>
<description>$AN_SYNC_ACT_LOAD liefert die aktuelle Laufzeit der Synchronaktionen des letzten IPO-Taktes über alle Kanäle.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_SYNC_MAX_LOAD</name>
<brief>Längste Laufzeit für Synchronaktionen</brief>
<description>$AN_SYNC_MAX_LOAD liefert die längste Laufzeit der Synchronaktionen eines IPO-Taktes über alle Kanäle.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_SYNC_TO_IPO</name>
<brief>Prozentanteil Synact / IPO-Rechenzeit</brief>
<description>$AN_SYNC_TO_IPO liefert den prozentualen Anteil der Synchronaktion-Laufzeit an gesamter IPO-Laufzeit des letzten IPO-Taktes über alle Kanäle.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_SERVO_ACT_LOAD</name>
<brief>Aktuelle Laufzeit des Lagereglers</brief>
<description>$AN_SERVO_ACT_LOAD liefert die aktuelle Laufzeit des Lagereglers.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_SERVO_MAX_LOAD</name>
<brief>Längste Laufzeit des Lagereglers</brief>
<description>$AN_SERVO_MAX_LOAD liefert die längste Laufzeit eines Taktes des Lagereglers.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_SERVO_MIN_LOAD</name>
<brief>Kürzeste Laufzeit des Lagereglers</brief>
<description>$AN_SERVO_MIN_LOAD liefert die kürzeste Laufzeit eines Taktes des Lagereglers.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_REBOOT_DELAY_TIME</name>
<brief>Zeit bis zum Reboot</brief>
<description>Ein Wert größer Null zeigt an, dass die NCK von der HMI den "NCK-Reset" empfangen hat und wieviel Zeit (in Sekunden) der NCK zum Reboot (PowerOff und anschießendem PowerOn) noch vorsieht. Der Anwender kann damit in einer Sychronaktion den bevorstehenden Reboot erkennen und seine Applikation darauf vorbereiten. $AN_REBOOT_DELAY_TIME ist 0.0 solange kein "NCK-Reset" empfangen worden ist.

Beispiel:
Eine Sychronaktion reagiert auf die Variable und schaltet die Achsen auf "Sicheren Halt" in einer Safty Integrated Applikation.

Bemerkungen:
- Siehe auch: $MN_REBOOT_DELAY_TIME
- Der "NCK-Reset" ist an der BTSS-Schnittstelle über den PI "_N_IBN_SS" realisiert.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_TIMER</name>
<brief>Systemvariable für Globale NCK Zeitmessung</brief>
<description>$AN_TIMER[n]
Timer - Einheit in Sekunden Die Zeit wird in Vielfachen eines Interpolationstaktes gezählt.
Die Timer werden durch $AN_TIMER[n]=&lt;startwert &gt; gestartet.
Die Timer werden durch $AN_TIMER[n]=-1 gestoppt.
Nach Stop eines Timers bleibt der zuletzt aktuelle Zeitwert erhalten.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_PROBE</name>
<brief>Messtasterzustand</brief>
<description>$A_PROBE[1]: Zustand erster Messtaster
$A_PROBE[2]: Zustand zweiter Messtaster
0 = &gt; nicht ausgelenkt
1 = &gt; ausgelenkt
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AN_PERSDIAG</name>
<brief>Diagnosedaten zur Datenpersistenz</brief>
<description>Diagnosedaten zur Datenpersistenz (Häufigkeit, Zeitbedarf); z.Bsp. Kompakt Flash Card.
Die Zeitwerte geben an, wie lange es aus Sicht der NC-Software gedauert hat, die Datenpersistenz herzustellen.
Es können folgende Werte gelesen werden:

Index1  Bedeutung
0   jeweils Summen über alle Teilfunktionen
1   Teilfunktion 'Passives Filesystem'
2   Teilfunktion 'Aktives Filesystem'
3   Teilfunktion 'Maschinendaten'

Index2  Bedeutung
0   Anzahl aller synchronen Schreiboperationen
1   Anzahl der fehlgeschlagenen synchronen Schreiboperationen (Systemmangel)
2   Aufsummierte Zeit aller synchronen Schreiboperationen in Sekunden
3   Minimaler Zeitbedarf einer synchronen Schreiboperationen in Sekunden
4   Durchschnittliche Zeit (über alle synchronen Schreiboperationen gemittelt) in Sekunden
5   Maximaler Zeitbedarf einer synchronen Schreiboperationen in Sekunden
6   Anzahl Überläufe Vorlauf-Powerfailpuffer seit NCK Start
7   Anzahl Überläufe WZ-Wechsel-Powerfailpuffer seit NCK Start
8   Anzahl Überläufe Synchronaktions-Powerfailpuffer seit NCK Start
9   Überlauf des Vorlauf-Powerfailpuffer steht an zum Zeitpunkt von Powerfail/PowerOff
10  Überlauf des WZ- Wechsel-Powerfailpuffer steht an zum Zeitpunkt       bei Powerfail/PowerOff
11  Überlauf des Synchronaktions-Powerfailpuffer steht an zum Zeitpunkt bei Powerfail/PowerOff
12  Anzahl Dateneinträge in den Vorlauf-Powerfailpuffer seit NCK Start
13  Anzahl Dateneinträge in den WZ-Wechsel-Powerfailpuffer in IPO seit NCK Start
14  Anzahl Dateneinträge in den Synchronaktions-Powerfailpuffer in IPO seit NCK Start
Index2-Werte = 6 bis 14 sind nur definiert für Index1 = 2 = Aktives Filesystem
20 Anzahl aller asynchronen Schreiboperationen
21 Anzahl der fehlgeschlagenen asynchronen Schreiboperationen (Systemmangel)
22 Aufsummierte Zeit aller asynchronen Schreiboperationen in Sekunden (Blockierender Anteil)
23 Minimaler Zeitbedarf einer asynchronen Schreiboperation in Sekunden (Blockierender Anteil)
24 Durchschnittliche Zeit (über alle asynchronen Schreiboperationen gemittelt) in Sekunden (Blockierender Anteil)
25 Maximaler Zeitbedarf einer asynchronen Schreiboperation in Sekunden (Blockierender Anteil)
26-31 reserviert
32 Aufsummierte Zeit aller asynchronen Schreiboperationen in Sekunden (Gesamte Laufzeit)
33 Minimaler Zeitbedarf einer asynchronen Schreiboperation in Sekunden (Gesamte Laufzeit)
34 Durchschnittliche Zeit (über alle asynchronen Schreiboperationen gemittelt) in Sekunden (Gesamte Laufzeit)
35 Maximaler Zeitbedarf einer asynchronen Schreiboperation in Sekunden (Gesamte Laufzeit)
36-39 reserviert 40 Anzahl der Datensicherungsoperationen, bei deren Aufruf noch eine asynchrone Datensicherungsoperationen aktiv war.
41 Reserviert
42 Aufsummierte Zeit die bei Kollision auf das Ende der vorherigen asynchronen Datensicherungsoperation gewartet wurde
43 Minimale Zeit die bei Kollision auf das Ende der vorherigen asynchronen Datensicherungsoperation gewartet wurde
44 Durchschnittliche Zeit die bei Kollision auf das Ende der vorherigen asynchronen Datensicherungsoperation gewartet wurde
45 Maximale Zeit die bei Kollision auf das Ende der vorherigen asynchronen Datensicherungsoperation gewartet wurde
Das Schreiben eines beliebigen Wertes auf die folgenden Indexe loescht den jeweiligen Statistiktyp:
Ein Schreibzugriff auf einen der Indexe 0-5 setzt alle Wert diese Indexe zurueck auf 0
Ein Schreibzugriff auf einen der Indexe 20-29 setzt alle Wert diese Indexe zurueck auf 0
Ein Schreibzugriff auf einen der Indexe 30-39 setzt alle Wert diese Indexe zurueck auf 0
Ein Schreibzugriff auf einen der Indexe 40-49 setzt alle Wert diese Indexe zurueck auf 0

Anwendung im NC-Programm:
IF $AN_PERSDIAG[0, 1] &gt;       0 GOTOF karteprüfen
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_VMODEL_STATUS</name>
<brief>Systemvariable für Zustand des VRML Modell</brief>
<description>TO DO!
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_DPSB_IN</name>
<brief>PROFIBUS/PROFINET Eingangs-Byte (signed)</brief>
<description>Die Feldvariable $A_DPSB_IN[n,m] dient zum Lesen eines Datenbytes (8Bit) von PROFIBUS/PROFINET-IO.
n:= Index für den Eingangs-Datenbereich
m:= Byte-Index für die Daten
Der Wert wird als signed dargestellt.
Der zu lesende Datenbereich kann während des Hochlaufes oder auch während des Betriebes ungültig werden, da angeschlossene Geräte evtl. noch nicht erkannt wurden, oder bereits nicht mehr am PROFIBUS/PROFINET angeschlossen sind. In diesem Fall wird immer der alte Wert oder der Initialwert 0 gelesen. Ob ein Datenbereich gültig ist kann über die Variablen $A_DP_IN_STATE[n] oder $A_DP_IN_VALID abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_DPB_IN</name>
<brief>PROFIBUS/PROFINET Eingangs-Byte (unsigned)</brief>
<description>Die Feldvariable $A_DPB_IN[n,m] dient zum Lesen eines Datenbytes (8Bit) von PROFIBUS/PROFINET-IO.
n:= Index für den Eingangs-Datenbereich
m:= Byte-Index für die Daten
Der Wert wird als unsigned dargestellt.
Der zu lesende Datenbereich kann während des Hochlaufes oder auch während des Betriebes ungültig werden, da angeschlossene Geräte evtl. noch nicht erkannt wurden, oder bereits nicht mehr am PROFIBUS/PROFINET angeschlossen sind. Im diesem Fall wird immer der alte Wert oder der Initialwert 0 gelesen. Ob ein Datenbereich gültig ist kann über die Variablen $A_DP_IN_STATE[n] oder $A_DP_IN_VALID abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_DP_IN_VALID</name>
<brief>PROFIBUS/PROFINET gültige Eingangs-Datenbereiche</brief>
<description>Die Variable $A_DP_IN_VALID dient zum Lesen aller gültigen Eingangs-Datenbereiche des PROFIBUS/PROFINET-IO. Der Wert ist als Bitfeld kodiert. Die Zuordnung der Bits entsprechen den Indices der Eingangs-Datenbereiche. Ein ungültiger Eingangs-Datenbereich liegt dann vor, wenn im Hochlauf der Eingangs-Datenbereich nicht angemeldet werden konnte bzw. im normalen Betrieb die Kommunikation zum PROFIBUS/PROFINET unterbrochen wurde. Der Zustand eines Eingangs-Datenbereiches kann über die Variable $A_DP_IN_STATE[n] abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DP_IN_STATE</name>
<brief>PROFIBUS/PROFINET Zustand Eingangsdatenbereich</brief>
<description>Die Variable $A_DP_IN_STATE[n] dient zum Lesen des Zustands des Eingangs-Datenbereiches.
n:= Index für den Eingangs-Datenbereich
Es können folgende Zustände gelesen werden:
   0: Datenbereich wurde nicht konfiguriert
   1: Datenbereich konnte noch nicht aktiviert werden
   2: Datenbereich ist verfügbar
   3: Datenbereich ist momentan nicht verfügbar
Ob ein Datenbereich verfügbar ist, kann auch über die Variable $A_DP_IN_VALID abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DP_OUT_STATE</name>
<brief>PROFIBUS/PROFINET Zustand Ausgangs-Datenbereich</brief>
<description>Die Variable $A_DP_OUT_STATE[n] dient zum Lesen des Zustands des Ausgangs-Datenbereiches.
n:= Index für den Ausgangs-Datenbereiches.
Es können folgende Zustände gelesen werden:
   0: Datenbereich wurde nicht konfiguriert
   1: Datenbereich konnte noch nicht aktiviert werden
   2: Datenbereich ist verfügbar
   3: Datenbereich ist momentan nicht verfügbar
Ob ein Datenbereich verfügbar ist, kann auch über die Variable $A_DP_OUT_VALID abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_DP_OUT_VALID</name>
<brief>PROFIBUS/PROFINET gültige Ausgangsdatenbereiche</brief>
<description>Die Variable $A_DP_OUT_VALID dient zum Lesen aller gültigen Ausgangs-Datenbereiche des PROFIBUS/PROFINET-IO.
Der Wert ist als Bitfeld kodiert. Die Zuordnung der Bits entsprechen den Indices der Ausgangs-Datenbereiche. Ein ungültiger Ausgangs-Datenbereich liegt dann vor, wenn im Hochlauf der Ausgangs-Datenbereich nicht angemeldet werden konnte bzw. im normalen Betrieb die Kommunikation zum PROFIBUS/PROFINET unterbrochen wurde. Der Zustand eines Ausgangs-Datenbereiches kann über die Variable $A_DP_OUT_STATE[n] abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_DP_IN_CONF</name>
<brief>PROFIBUS/PROFINET konfigurierte Eingangs-Datenbereiche</brief>
<description>Die Variable $A_DP_IN_CONF dient zum Lesen aller konfigurierter Eingangs-Datenbereiche des PROFIBUS/PROFINET-IO.
Der Wert ist als Bitfeld kodiert. Die Zuordnung der Bits entsprechen den Indices der Eingangs-Datenbereiche. Ein konfigurierter Eingangs-Datenbereich liegt dann vor, wenn über das Maschinendatum $MN_DPIO_LOGIC_ADDRESS_IN eine logische Startaddresse auf einen Eingangs-Datenbereich eingetragen wurde. Der Zustand eines Eingangs-Datenbereich kann über die Variable $A_DP_IN_STATE[n] abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_DP_OUT_CONF</name>
<brief>PROFIBUS/PROFINET konfigurierte Ausgangs-Datenbereiche</brief>
<description>Die Variable $A_DP_OUT_CONF dient zum Lesen aller konfigurierter Ausgangs-Datenbereiche des PROFIBUS/PROFINET-IO.
Der Wert ist als Bitfeld kodiert. Die Zuordnung der Bits entsprechen den Indices der Ausgangs-Datenbereiche. Ein konfigurierter Ausgangs-Datenbereich liegt dann vor, wenn über das Maschinendatum $MN_DPIO_LOGIC_ADDRESS_OUT eine logische Startaddresse auf einen Ausgangs-Datenbereich eingetragen wurde. Der Zustand eines Ausgangs-Datenbereiches kann über die Variable $A_DP_OUT_STATE[n] abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DP_IN_LENGTH</name>
<brief>PROFIBUS/PROFINET Länge Eingangs-Datenbereich</brief>
<description>Die Variable $A_DP_IN_LENGTH[n] dient zum Lesen der Länge des Eingangs-Datenbereiches.
n:= Index für den Eingangs-Datenbereich
Ob ein Eingangs-Datenbereich verfügbar ist, kann auch über die Variablen $A_DP_IN_VALID und $A_DP_IN_STATE[n] abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DP_OUT_LENGTH</name>
<brief>PROFIBUS/PROFINET Länge Ausgangs-Datenbereich</brief>
<description>Die Variable $A_DP_OUT_LENGTH[n] dient zum Lesen der Länge des Ausgangs-Datenbereiches.
n:= Index für den Ausgangs-Datenbereich
Ob ein Ausgangs-Datenbereich verfügbar ist, kann auch über die Variablen $A_DP_OUT_VALID und $A_DP_OUT_STATE[n] abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_DPW_IN</name>
<brief>PROFIBUS/PROFINET Eingangs-Wort (unsigned)</brief>
<description>Die Feldvariable $A_DPW_IN[n,m] dient zum Lesen eines Datenwortes (16Bit) von PROFIBUS/PROFINET-IO.
n:= Index für den Eingangs-Datenbereich
m:= Byte-Index für die Daten
Der Wert wird als unsigned dargestellt.
Der zu lesende Datenbereich kann während des Hochlaufes oder auch während des Betriebes ungültig werden, da angeschlossene Geräte evtl. noch nicht erkannt wurden, oder bereits nicht mehr am PROFIBUS/PROFINET angeschlossen sind. Im diesem Fall wird immer der alte Wert oder der Initialwert 0 gelesen. Ob ein Datenbereich gültig ist kann über die Variablen $A_DP_IN_STATE[n] oder $A_DP_IN_VALID abgefragt werden.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$A_DPR_OUT</name>
<brief>PROFIBUS/PROFINET Ausgangs-Daten (4 Bytes)</brief>
<description>Die Feldvariable $A_DPR_OUT[n,m] dient zum Schreiben von Ausgangs-Daten (32 bit REAL) auf PROFIBUS/PROFINET-IO.
n:= Index für den Ausgangs-Datenbereich
m:= Byte-Index für die Daten
Der Wert wird auf auf 4 Byte IEEE (real) komprimiert.
Der zu schreibende Datenbereich kann während des Hochlaufes oder auch während des Betriebes ungültig werden, da angeschlossene Geräte evtl. noch nicht erkannt wurden, oder bereits nicht mehr am PROFIBUS/PROFINET angeschlossen sind. Im diesem Fall kann die Übertragung des Wertes nicht sichergestellt werden. Ob ein Datenbereich gültig ist kann über die Variablen $A_DP_OUT_STATE[n] oder $A_DP_OUT_VALID abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_DPB_OUT</name>
<brief>PROFIBUS/PROFINET Ausgangs-Byte (unsigned)</brief>
<description>Die Feldvariable $A_DPB_OUT[n,m] dient zum Schreiben eines Datenbytes (8Bit) auf PROFIBUS/PROFINET-IO.
n:= Index für den Ausgangs-Datenbereich
m:= Byte-Index für die Daten
Der Wert wird als unsigned dargestellt.
Der zu beschreibende Datenbereich kann während des Hochlaufes oder auch während des Betriebes ungültig werden, da angeschlossene Geräte evtl. noch nicht erkannt wurden, oder bereits nicht mehr am PROFIBUS/PROFINET angeschlossen sind. Im diesem Fall kann die Übertragung des Wertes nicht sichergestellt werden. Ob ein Datenbereich gültig ist kann über die Variablen $A_DP_OUT_STATE[n] oder $A_DP_OUT_VALID abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_DPW_OUT</name>
<brief>PROFIBUS/PROFINET Ausgangs-Wort (unsigned)</brief>
<description>Die Feldvariable $A_DPW_OUT[n,m] dient zum Schreiben eines Datenwortes (16Bit) auf PROFIBUS/PROFINET-IO.
n:= Index für den Ausgangs-Datenbereich
m:= Byte-Index für die Daten
Der Wert wird als unsigned dargestellt.
Der zu beschreibende Datenbereich kann während des Hochlaufes oder auch während des Betriebes ungültig werden, da angeschlossene Geräte evtl. noch nicht erkannt wurden, oder bereits nicht mehr am PROFIBUS/PROFINET angeschlossen sind. Im diesem Fall kann die Übertragung des Wertes nicht sichergestellt werden. Ob ein Datenbereich gültig ist kann über die Variablen $A_DP_OUT_STATE[n] oder $A_DP_OUT_VALID abgefragt werden.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$A_DPR_IN</name>
<brief>PROFIBUS/PROFINET Eingangs-Daten (4 Bytes)</brief>
<description>Die Feldvariable $A_DPR_IN[n,m] dient zum Lesen von Eingangs-Daten (32 bit REAL) von PROFIBUS/PROFINET-IO.
n:= Index für den Eingangs-Datenbereich
m:= Byte-Index für die Daten
Der Wert wird auf auf 8 Byte IEEE (double) expandiert.
Der zu lesende Datenbereich kann während des Hochlaufes oder auch während des Betriebes ungültig werden, da angeschlossene Geräte evtl. noch nicht erkannt wurden, oder bereits nicht mehr am PROFIBUS/PROFINET angeschlossen sind. Im diesem Fall wird immer der alte Wert oder der Initialwert 0.0 gelesen. Ob ein Datenbereich gültig ist kann über die Variablen $A_DP_IN_STATE[n] oder $A_DP_IN_VALID abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_DPSW_IN</name>
<brief>PROFIBUS/PROFINET Eingangs-Wort (signed)</brief>
<description>Die Feldvariable $A_DPSW_IN[n,m] dient zum Lesen eines Datenwortes (16Bit) von PROFIBUS/PROFINET-IO.
n:= Index für den Eingangs-Datenbereich
m:= Byte-Index für die Daten
Der Wert wird als signed dargestellt.
Der zu lesende Datenbereich kann während des Hochlaufes oder auch während des Betriebes ungültig werden, da angeschlossene Geräte evtl. noch nicht erkannt wurden, oder bereits nicht mehr am PROFIBUS/PROFINET angeschlossen sind. Im diesem Fall wird immer der alte Wert oder der Initialwert 0 gelesen. Ob ein Datenbereich gültig ist kann über die Variablen $A_DP_IN_STATE[n] oder $A_DP_IN_VALID abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_DPSD_IN</name>
<brief>PROFIBUS/PROFINET Eingangs-Datendoppelwortes (signed)</brief>
<description>Die Feldvariable $A_DPSD_IN[n,m] dient zum Lesen eines Datendoppelwortes (32Bit) von PROFIBUS/PROFINET-IO.
n:= Index für den Eingangs-Datenbereich
m:= Byte-Index für die Daten
Der Wert wird als signed dargestellt.
Der zu lesende Datenbereich kann während des Hochlaufes oder auch während des Betriebes ungültig werden, da angeschlossene Geräte evtl. noch nicht erkannt wurden, oder bereits nicht mehr am PROFIBUS/PROFINET angeschlossen sind. Im diesem Fall wird immer der alte Wert oder der Initialwert 0 gelesen. Ob ein Datenbereich gültig ist kann über die Variablen $A_DP_IN_STATE[n] oder $A_DP_IN_VALID abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_DPSB_OUT</name>
<brief>PROFIBUS/PROFINET Ausgangs-Byte (signed)</brief>
<description>Die Feldvariable $A_DPSB_IN[n,m] dient zum Schreiben eines Datenbytes (8Bit) auf PROFIBUS/PROFINET-IO.
n:= Index für den Ausgangs-Datenbereich
m:= Byte-Index für die Daten
Der Wert wird als signed dargestellt.
Der zu beschreibende Datenbereich kann während des Hochlaufes oder auch während des Betriebes ungültig werden, da angeschlossene Geräte evtl. noch nicht erkannt wurden, oder bereits nicht mehr am PROFIBUS/PROFINET angeschlossen sind. In diesem Fall kann die Übertragung des Wertes nicht sichergestellt werden. Ob ein Datenbereich gültig ist kann über die Variablen $A_DP_OUT_STATE[n] oder $A_DP_OUT_VALID abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_DPSW_OUT</name>
<brief>PROFIBUS/PROFINET Ausgangs-Wort (signed)</brief>
<description>Die Feldvariable $A_DPSW_IN[n,m] dient zum Schreiben eines Datenwortes (16Bit) auf PROFIBUS/PROFINET-IO.
n:= Index für den Ausgangs-Datenbereich
m:= Byte-Index für die Daten
Der Wert wird als signed dargestellt.
Der zu beschreibende Datenbereich kann während des Hochlaufes oder auch während des Betriebes ungültig werden, da angeschlossene Geräte evtl. noch nicht erkannt wurden, oder bereits nicht mehr am PROFIBUS/PROFINET angeschlossen sind. In diesem Fall kann die Übertragung des Wertes nicht sichergestellt werden. Ob ein Datenbereich gültig ist kann über die Variablen $A_DP_OUT_STATE[n] oder $A_DP_OUT_VALID abgefragt werden.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_DPSD_OUT</name>
<brief>PROFIBUS/PROFINET Ausgangs-Datendoppelwort (signed)</brief>
<description>Die Feldvariable $A_DPSD_OUT[n,m] dient zum Schreiben eines Datendoppelwortes (32Bit) auf PROFIBUS/PROFINET-IO.
n:= Index für den Ausgangs-Datenbereich
m:= Byte-Index für die Daten
Der Wert wird als signed dargestellt.
Der zu beschreibende Datenbereich kann während des Hochlaufes oder auch während des Betriebes ungültig werden, da angeschlossene Geräte evtl. noch nicht erkannt wurden, oder bereits nicht mehr am PROFIBUS/PROFINET angeschlossen sind. In diesem Fall kann die Übertragung des Wertes nicht sichergestellt werden. Ob ein Datenbereich gültig ist kann über die Variablen $A_DP_OUT_STATE[n] oder $A_DP_OUT_VALID abgefragt werden.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_COLL_MEM_AVAILABLE</name>
<brief>Verfügbarer Speicher für Kollsionsüberwachung in kB</brief>
<description>Die Kollisonsberechnung benötigt intern Speicher, dessen Größe entweder automatisch aus der Anzahl der verfügbaren Schutzbereiche,
Schutzbereichselementen, Facets und der Anzahl der Maschinenachsen berechnet wird, oder die mit Hilfe des Maschinendatums $MN_MM_MAXNUM_3D_COLLISION explizit vorgegeben werden kann. Mit der Systemvariablen $AN_COLL_MEM_AVAILABLE kann die Größe des reservierten Speicherbereichs (in kByte) gelesen werden.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_COLL_MEM_USE_MIN</name>
<brief>Minimaler Speicherbedarf für Kollsionsüberwachung</brief>
<description>Die Kollisonsberechnung benötigt intern Speicher, dessen Größe entweder automatisch aus der Anzahl der verfügbaren Schutzbereiche,
Schutzbereichselementen, Facets und der Anzahl der Maschinenachsen berechnet wird, oder die mit Hilfe des Maschinendatums $MN_MM_MAXNUM_3D_COLLISION explizit vorgegeben werden kann. Mit der Systemvariablen $AN_COLL_MEM_AVAILABLE kann die Größe des reservierten Speicherbereichs (in kByte) gelesen werden. Die Systemvariable $AN_COLL_MEM_USE_MIN liefert den minimal benötigten Speicherplatz für die Kollisionsberechnung in Prozent des reservierten Speicherbereichs. Sie kann durch Beschreiben mit dem Wert 0 rückgesetzt werden. Jeder Schreibversuch mit einem anderen Wert als 0 wird mit einer Fehlermeldung abgelehnt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_COLL_MEM_USE_MAX</name>
<brief>Maximaler Speicherbedarf für Kollsionsüberwachung in Prozent</brief>
<description>Die Kollisonsberechnung benötigt intern Speicher, dessen Größe entweder automatisch aus der Anzahl der verfügbaren Schutzbereiche, Schutzbereichselementen, Facets und der Anzahl der Maschinenachsen berechnet wird, oder die mit Hilfe des Maschinendatums $MN_MM_MAXNUM_3D_COLLISION explizit vorgegeben werden kann. Mit der Systemvariablen $AN_COLL_MEM_AVAILABLE kann die Größe des reservierten Speicherbereichs (in kByte) gelesen werden. Die Systemvariable $AN_COLL_MEM_USE_MAX liefert den maximal benötigten Speicherplatz für die Kollisionsberechnung in Prozent des reservierten Speicherbereichs. Sie kann durch Beschreiben mit dem Wert 0 rückgesetzt werden. Jeder Schreibversuch mit einem anderen Wert als 0 wird mit einer
Fehlermeldung abgelehnt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_COLL_MEM_USE_ACT</name>
<brief>Aktueller Speicherbedarf für Kollsionsüberwachung</brief>
<description>Die Kollisonsberechnung benötigt intern Speicher, dessen Größe entweder automatisch aus der Anzahl der verfügbaren Schutzbereiche, Schutzbereichselementen, Facets und der Anzahl der Maschinenachsen berechnet wird, oder die mit Hilfe des Maschinendatums $MN_MM_MAXNUM_3D_COLLISION explizit vorgegeben werden kann. Mit der Systemvariablen $AN_COLL_MEM_AVAILABLE kann die Größe des reservierten Speicherbereichs (in kByte) gelesen werden. Die Systemvariable $AN_COLL_MEM_USE_ACT liefert den aktuell (d.h. den für die letzte durchgeführte Berechnung) benötigten Speicherplatz für die Kollisionsberechnung in Prozent des reservierten Speicherbereichs. Sie kann durch Beschreiben mit dem Wert 0 rückgesetzt werden. Jeder Schreibversuch mit einem anderen Wert als 0 wird mit einer Fehlermeldung abgelehnt.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AN_COLL_STATE</name>
<brief>Aktivierungszustand eines Schutzbereichs bezüglich der Kollisionsvermeidung</brief>
<description>Die Systemvariable zeigt an, ob ein Schutzbereich aktuell Teil der Kollisionsüberwachung sein kann.
Dazu müssen folgende Voraussetzungen erfüllt sein:
1. Der Aktivierunszustand des Schutzbereichs ist aktiv ("A") oder der Aktivierungszustand ist PLC-gesteuert ("P") und das dem Schutzbereich zugeordnete Interfacebit ist gesetzt.
2. Die Schutzbereichsgruppe ("Machine", "TOOL" usw.) ist in der aktuellen Betriebsart über das zugehörige Interfacebit aktiv geschaltet.
Ein Schutzbereich, für den dieses Systemvariable den Wert TRUE liefert, geht nur dann tatsächlich in die Kollisinüberwachung ein, wenn er Bestandteil mindestens eines Kollisionspaares ist ($NP_COLL_PAIR), dessen anderer Partner ebenfalls ein aktiver Schutzbereich ist.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$AN_COLL_IPO_ACTIVE</name>
<brief>Zustand Hauptlaufüberwachung der Kollisionsvermeidung</brief>
<description>Die Systemvariable zeigt an, ob die Hauptlaufüberwachung der Kollisionsvermeidung aktiv ist.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$AN_COLL_IPO_LIMIT</name>
<brief>Geschwindigkeitsreduktion durch Kollisionsüberwachung im Hauptlauf</brief>
<description>Die Systemvariable zeigt an, ob die Hauptlaufüberwachung der Kollisionsvermeidung zu einer Reduktion der Geschwindigkeit führt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_COLL_LOAD</name>
<brief>Rechenzeitbedarf für Funktionen der Kollisionsvermeidung in ms</brief>
<description>Gibt die benötigte Rechenzeit in ms an, die für bestimmte Operationen im Zusammenhang mit der Kollisionsvermeidung benötigt wird. Die Operation wird durch den Index i definiert.
i = 0: Zeitbedarf beim letzten Aufruf von PROTA
i = 1: Zeitbedarf beim letzten Aufruf der Kollisionsvermeidung im Vorlauf
i = 2: Zeitbedarf beim letzten Aufruf der Berechnung des freien Raums (Echtzeitüberwachung)
Die Variablen können durch Beschreiben mit dem Wert 0 rückgesetzt werden. Jeder Schreibversuch mit einem anderen Wert als 0 wird mit einer Fehlermeldung abgelehnt.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_PREP_ACT_LOAD</name>
<brief>Aktuelle Laufzeit des Vorlaufs</brief>
<description>$AN_PREP_ACT_LOAD liefert die aktuelle Netto - Laufzeit des Vorlaufs über alle Kanäle.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_PREP_MAX_LOAD</name>
<brief>Längste Laufzeit des Vorlaufs</brief>
<description>$AN_PREP_MAX_LOAD liefert die längste Netto - Laufzeit des Vorlaufs über alle Kanäle.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_PREP_MIN_LOAD</name>
<brief>Kürzeste     Laufzeit des Vorlaufs</brief>
<description>$AN_PREP_MIN_LOAD liefert die kürzeste Netto - Laufzeit des Vorlaufs über alle Kanäle.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_PREP_ACT_LOAD_GROSS</name>
<brief>Aktuelle Laufzeit des Vorlaufs</brief>
<description>$AN_PREP_ACT_LOAD_GROSS liefert die aktuelle Brutto - Laufzeit des Vorlaufs über alle Kanäle.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_PREP_MAX_LOAD_GROSS</name>
<brief>Längste Laufzeit des Vorlaufs</brief>
<description>$AN_PREP_MAX_LOAD_GROSS liefert die längste Brutto - Laufzeit des Vorlaufs über alle Kanäle.
</description>
</parameter>

<parameter type="DOUBLE" dim="0">
<name>$AN_PREP_MIN_LOAD_GROSS</name>
<brief>Kürzeste Laufzeit des Vorlaufs</brief>
<description>$AN_PREP_MIN_LOAD_GROSS liefert die kürzeste Brutto - Laufzeit des Vorlaufs über alle Kanäle.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_AUXFU_LIST_GROUPINDEX</name>
<brief>Globale Liste von Hilfsfunktionen - Gruppenindex</brief>
<description>Die Feldvariable $AN_AUXFU_LIST_GROUPINDEX[n] dient zum Lesen des Gruppenindizes der im Kanal aufgesammelten Hilfsfunktion.
Die Variable ist nur in Verbindung mit Satzsuchlauf Typ 5 (SERUPRO) gültig. Nachdem das Suchziel gefunden wurde, werden die in den einzelnen Kanälen gruppenweise aufgesammelten Hilfsfunktionen entsprechend $AC_AUXFU_TICK[n] in die kanalübergreifende Liste mit Kanalnummer $AN_AUXFU_LIST_CHANNO[n] und Gruppenindex eingetragen. Mit Hilfe des Gruppenindizes kann im Kanal auf die aufgesammelte Hilfsfunktion zugegriffen werden.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_AUXFU_LIST_CHANNO</name>
<brief>Globale Liste von Hilfsfunktionen - Kanalnummer</brief>
<description>Die Feldvariable $AN_AUXFU_LIST_CHANNO[n] dient zum Lesen der Kanalnummer der im Kanal aufgesammelten Hilfsfunktion. Die Variable ist nur in Verbindung mit Satzsuchlauf Typ 5 (SERUPRO) gültig. Nachdem das Suchziel gefunden wurde, werden die in den einzelnen Kanälen gruppenweise aufgesammelten Hilfsfunktionen entsprechend $AC_AUXFU_TICK[n] in die kanalübergreifende Liste mit Kanalnum mer und Gruppenindex $AN_AUXFU_LIST_GROUPINDEX[n] eingetragen.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_AUXFU_LIST_ENDINDEX</name>
<brief>Letzter gültiger Index der globalen Hilfsfunktionsliste</brief>
<description>Die Variable $AN_AUXFU_LIST_ENDINDEX ermittelt den letzten gültigen Index für die globale Hilfsfunktionsliste.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_AXCTSWE</name>
<brief>Achs-Container-Drehung Slot freigegeben</brief>
<description>Ist für einen Slot eines Achs-Containers eine Freigabe zur Drehung erteilt? Bitmaske, jedes Bit entspricht einem Slot, z.B. 0x5 entspricht den Slots 1 und 3.
Bit == 1: der Slot eines Achs-Containers ist zur Drehung freigegeben.
Bit == 0: der Slot eines Achs-Containers ist nicht zur Drehung freigegeben.

Beispiel:
Achscontainer mit 4 Slots: whenever ($AN_AXCTSWE[ct1] and 'Hffff') == 'Hfff5' do DO M99.

Sobald ein Slot zur Achscontainer-Drehung freigegeben wurde, wird für unbenutzte Slots ebenfalls Bit == 1 gemeldet. Im Beispiel 'Hfff0'. Sind die Slots eines Achscontainers über mehrere NCUs verteilt, so wird der aktuelle Zustand der Slots auf anderen NCUs nur angezeigt, wenn auf der anderen NCU alle Slots zur Achscontainer-Drehung freigegeben wurden. Bei einer direkten Achscontainer-Drehung (AXCTSED) wird nichts angezeigt.

Achtung:
Das höchstwertige Bit ist kein Vorzeichenbit, sondern steht für den 32. Slot eines Achscontainers. Deshalb keine Abfragen der Variablen mit &gt;0 sondern auf != 0 abfragen, um festzustellen, ob überhaupt ein Slot zur Drehung freigegeben wurde. Als Index kann der Achscontainername oder der Achsname einer Achse im Achs-Container angegeben werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_LAI_AX_IS_AXCTAX</name>
<brief>Bitmaske zeigt ob eine LAI-Achse eine Achse in einem Achscontainer ist</brief>
<description>Bitmaske, die anzeigt, ob eine Achse im Logischen NCK Maschinenachsabbild (Maschinendatum 10002 $MN_AXCONF_LOGIC_MACHAX_TAB) eine Achse in einem Achscontainer (Maschinendatum 1270x/1271x             $MN_AXCT_AXCONF_ASSIGN_TABi) ist.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_LAI_AX_IS_LINKAX</name>
<brief>Bitmaske zeigt ob eine LAI-Achse eine Linkachse ist.</brief>
<description>Bitmaske, die anzeigt, ob eine Achse im Logischen NCK Maschinenachsabbild (Maschinendatum 10002 $MN_AXCONF_LOGIC_MACHAX_TAB) eine Linkachse (Achse physikalisch an einer anderen NCU angeschlossen) ist.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_LAI_AX_IS_LEADLINKAX</name>
<brief>Bitmaske zeigt ob eine LAI-Achse eine Leadlinkachse ist.</brief>
<description>Bitmaske, die anzeigt, ob eine Achse im Logischen NCK Maschinenachsabbild (Maschinendatum 10002 $MN_AXCONF_LOGIC_MACHAX_TAB) eine Lead-Linkachse ist, d.h. auf  mehrere NCUs wird durch MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB auf die selbe Maschinenachse verwiesen und durch das axiale MD30554 $MA_AXCONF_ASSIGN_MASTER_NCU ist festgelegt, welche NCU die Master- NCU ist, die die Sollwerte für den Lageregler nach dem Hochlaufen erzeugt.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_LAI_AX_TO_MACHAX</name>
<brief>Zuordnung der physikalischen Achse zu einer LAI Achse.</brief>
<description>Zu einer LAI Achse wird die NCU und die Maschinenachse gemeldet, die das physikalische Abbild der Achse darstellt. Dabei wird die NCU-Id ab der 10000 Stelle gemeldet, z.B. 20005: NCU 2 Achse 5. Ohne NCU-Link, d.h. es gibt nur eine NCU, wird nur die Nummer der Maschinenachse gemeldet. Die NCU-Id ist in diesem Fall gleich Null. Wird die LAI Achse nicht verwendet, so wird 0 zurückgegeben.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_IPO_CHANAX</name>
<brief>Zuordnung globale Achse zum Interpolator (Kanal, Kanalachse).</brief>
<description>Zu einer globalen Achsnummer, wie sie von $VA_IPO_NC_CHANAX gemeldet wird, wird der Kanal und die Kanalachsnummer gemeldet, die den schreibenden Interpolator der Achse definieren. Dabei wird der Kanal ab der hunderter Stelle und der Kanalachsnummer ab der Einerstelle, z.B. 1005 - Kanal 10 Kanalachse 5, gemeldet. Wird die Achse mit der angegebenen globalen Achsnummer auf dieser NCU nicht verwendet, so wird 0 zurückgegeben.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_LANGUAGE_ON_HMI</name>
<brief>Aktuell auf HMI eingestellte Sprache</brief>
<description>Die Variable $AN_LANGUAGE_ON_HMI ermittelt die auf der HMI eingestellte Sprache. Die Variable kann nur über die HMI geschrieben werden.

Anwendung im NC-Programm:
IF $AN_LANGUAGE_ON_HMI == 3 GOTOF ENGLISH Die Beschreibung der möglichen Werte findet sich im Anhang der Programmieranleitung.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_SLTRACE</name>
<brief>Trigger-Variable für die Protokollfunktion</brief>
<description>Diese Variable ist für die Applikation SinuTrace und Operate-Trace reserviert.
Sie dient als Trigger-Variable für die Protokollfunktion.

Die Variable hat folgende Werte:
0: inaktiv
1: Start der Protokollierung angefordert
2: Stop   der Protokollierung angefordert

Das Setzen des Wertes erfolgt i.d.R. durch das Teileprogramm, das Rücksetzen durch die Applikation über BTSS.
</description>
</parameter>

<parameter type="BOOL" dim="0">
<name>$AN_EXPORT_RESTRICTED</name>
<brief>Exportbeschränkung</brief>
<description>Kennzeichnung der Software, die nach BAfA und ECC einer Exportbeschränkung unterliegen vergleiche BTSS N/Y exportRestricted
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_LINK_CONN_SND</name>
<brief>Anzahl Linkvariablenänderungen pro Takt</brief>
<description>Anzahl Linkvariablenänderungen pro Takt von der aktuellen zur angegebenen NCU-Nummer.
Der Index NCU-No der Variable $AN_LINK_CONN_SDN[NCU-No] variiert heute von 1 bis 16. Die Variable liefert die Zahl der Bytes die von der aktuellen NCU-Act zur NCU-No vorgehalten werden, um ggf. nicht-zyklische Nachrichten auszutauschen. Abhängig von der Auslastung dieser Übertragungskapazität kann SIEMENS neue SDB-Bausteine für das CBE-30 liefern, die die gesamte Übertragungskapazität von NCU-Act zu NCU-No reduziert. Damit wird der Link schneller und damit der Servo-Takt kleiner. Beachte: Systeme ohne NCU-Link liefern den Wert 0. Falls NCU-Act == NCU-No so liefert die Variable "0".
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_LINK_CONN_RCV</name>
<brief>Anzahl Linkvariablenänderungen pro Takt</brief>
<description>Anzahl Linkvariablenänderungen pro Takt von der angegebenen NCU-Nummer zur aktuellen NCU-Nummer.
Die Variable $AN_LINK_CONN_RCV[NCU-No] weist die vorgehaltene Übertragungskapazität für nicht-zyklische Nachrichten von NCU-No nach NCU-Act in Bytes aus. Beachte: Systeme ohne NCU-Link liefern den Wert 0. Falls NCU-Act == NCU-No so liefert die Variable "0".
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_LINK_CONN_SIZE_LINKVAR</name>
<brief>Anzahl der brutto erforderlichen Bytes für eine Linkvariable</brief>
<description>Anzahl der brutto erforderlichen Bytes für eine zu übertragende Linkvariable in jeder PTP-Beziehung Die Zuweisung einer Link-Variablen (z. B. $a_dlb[9] = 1) lastet die nicht-zyklischen Linkverbindungen mit einer Nachricht der Länge $AN_LINK_CONN_SIZE_LINKVAR aus. Dabei spielt es keine Rolle, von welchem Typ eine Link-Variable ist (z. B. Byte oder Double). Der Kunde kann damit die Zahl der maximal pro IPO-Takt übertragbaren Link-Variablen abschätzen ($AN_LINK_CONN_SND[NCU-No] / $AN_LINK_CONN_SIZE_LINKVAR = Zahl der Link-Variblen-Änderungen pro IPO-Takt von NCU-Act zu NCU-No).
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_LINK_TRANS_RATE_LAST</name>
<brief>Anzahl an Linkvariablen, die im letzten IPO-Takt noch frei waren</brief>
<description>Anzahl an Linkvariablen, die im vorherigen IPO-Takt noch hätten verschickt werden können. Der Wert von $AN_LINK_TRANS_RATE_LAST ist im aktuellen IPO-Takt konstant.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_LINK_TRANS_RATE_LAST_SUM</name>
<brief>Ungenutze Linkvariablen der angegebenen Sende-Richtung</brief>
<description>Anzahl ungenutzer Linkvariablen des vorherigen IPO-Takts in der angegebenen Sende-Richtung.
Der Index NCU-No der Variable $AN_LINK_TRANS_RATE_LAST_SUM[NCU-No] gibt die Sende-Richtung an, und variiert heute von 1 bis 16. Die Variable liefert die Anzahl an Anwender-Linkvariablen ($A_DLx) zur angegebenen NCU, welche im vorherigen IPO-Takt in diese Sende-Richtung noch hätten genutzt werden können.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_PROBE_LIMITED</name>
<brief>Messgeschwindigkeit überschritten.</brief>
<description>$A_PROBE_LIMITED enthält die akkumulierte Anzahl von DP-Kommunikationstakten in denen mindestens eine Begrenzung wirksam war.
Ein ansteigender Wert signalisiert, dass die Frequenz der Messtaster-Signale reduziert werden muss (z.B. durch Reduzierung der Drehzahl des zu vermessenden Zahnrads).
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_SIM_CHAN_MASK</name>
<brief>Bitmaske von Kanälen die synchronisiert simuliert werden</brief>
<description>Über die bitcodierte Variable $AN_SIM_CHAN_MASK können Kanäle vorgeben werden, die während der Simulation synchronisiert werden.
Die Variable wird mit der Bitmaske über alle projektierten Kanälen vorbesetzt.
Die synchronisierte Mehrkanal-Simulation wird über das Bit4 in $MN_PROG_TEST_MASK projektiert.

Anwendung im NC-Programm:
$AN_SIM_CHAN_MASK = 'B101'  ; Kanal 1 und Kanal 3 werden synchronisiert simuliert.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_SIM_MAX_IPOSTEP</name>
<brief>Maximaler Simulations-Step in Realzeit-IPO-Takten</brief>
<description>Über die Variable $AN_SIM_MAX_IPOSTEP kann die maximale Simulations-Schrittweite in Realzeit-IPO-Takten gelesen und geschrieben werden. Nach jeder Schrittweite wird ein Event an die HMI-Schnittstelle ausgegeben. Damit können die Anzahl der Stützstellen eingestellt werden. Wird ein Wert 0 vorgegeben, dann ermittelt das System die maximal mögliche Schrittweite. Die Variable ist nur in Verbindung mit der synchronisierten Simulation (siehe Bit4 $MN_PROG_TEST_MASK) gültig.

Anwendung im NC-Programm:
$AN_SIM_MAX_IPOSTEP = 10   ; Ein IPO-Takt in der Simulation entspricht maximal 10 Realzeit-IPO-Takte.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_ACTIVATE_COLL_CHECK</name>
<brief>Zustand des Feldes ActivateCollCheck auf der Schnittstelle PLC-&gt;NCK</brief>
<description>Zustand des Feldes activateCollCheck auf der Schnittstelle PLC-&gt;NCK (DB10.DBX234.0 - DB10.DBX241.7). Die Daten werden jeweils in Gruppen von 4 Byte zur Verfügung gestellt, d.h. mit dem Index 0 erhält man die ersten 4 Byte (DB10.DBX234.0 - DB10.DBX237.7), mit dem Index 1 die zweiten 4 Byte (DB10.DBX238.0 - DB10.DBX241.7)
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_COLL_CHECK_OFF</name>
<brief>Zustand des Bytes DeactivateCollCheckGroups auf der Schnittstelle PLC-&gt;NCK.</brief>
<description>Zustand des Bytes DeactivateCollCheckGroups auf der Schnittstelle PLC-&gt;NCK (DB10.DBB58) zur Betriebsarten-abhängigen Unterdrückung der Kollisionsvermeidung für Gruppen von Schutzbereichen.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NP_T_NAME</name>
<brief>Name eines intern erzeugten Werkzeugschutzbereichselements.</brief>
<description>Name eines intern erzeugten Werkzeugschutzbereichselements.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NP_T_TYPE</name>
<brief>Typ eines intern erzeugten Werkzeugschutzbereichselements.</brief>
<description>Typ eines intern erzeugten Werkzeugschutzbereichselements.

Folgende Typen sind möglich:
FRAME: Ein Element dieses Typs enthält keinen Körper, sondern definiert nur einen Frame, der für die nachfolgenden Schutzbereichsde finitionen wirksam wird.
1. BOX (L, W, H): Achsparalleler Quader symmetrisch zum Nullpunkt mit den Abmessungen L in X-Richtung, W in Y-Richtung und H in Z-
Richtung, d.h. die Ecken des Quaders liegen bei (+/-L/2, +/-W/2, +/-H/2).
2. SPHERE (R): Kugel im Nullpunkt mit Radius R.
3. CYLINDER (H, R): Zylinder mit Radius R und Höhe H, Längsachse parallel zur Z-Achse. Der Mittelpunkt des Zylinders liegt im Nullpunkt, d.h. die beiden begrenzenden Kreisflächen sind parallel zur X-Y-Ebene und liegen bei +/-H/2.
4. FILE: Gitter aus Dreiecksflächen im STL-Format.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NP_T_FILENAME</name>
<brief>Filename eines Werkzeugschutzbereichselements des Typs "FILE".</brief>
<description>Dieser Parameter enthält den Namen des Files, das die Beschreibung des Werkzeugschutzbereichselments enthält, falls dieses Element vom Typ "FILE" ist.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NP_T_PARA</name>
<brief>Parameter zur Beschreibung des Typs</brief>
<description>Parameter zur Beschreibung des Werkzeugschutzbereichselments. Für die unter $NP_T_TYPE beschriebenen Typen werden maximal 3 Parameter benötigt.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NP_T_OFF</name>
<brief>Offsetkomponente</brief>
<description>Komponente i (0&lt;=i&lt;=2) des Offsetvektors des Werkzeugschutzbereichelements n.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NP_T_DIR</name>
<brief>Richtung der Drehachse</brief>
<description>Komponenten der Drehachse für eine Koordinatendrehung des Werkzeugschutzbereichselements n.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$NP_T_ANG</name>
<brief>Winkel einer Koordinatendrehung im Werkzeugschutzbereichselement n.</brief>
<description>Winkel (in Grad) einer Koordinatendrehung im Werkzeugchutzbereichselement n.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_COLL_STATE_COND</name>
<brief>Aktivierungsbedingungen eines Schutzbereichs bezüglich Kollisionsvermeidung</brief>
<description>Die Systemvariable zeigt an, ob ein Schutzbereich aktuell Teil der Kollisionsüberwachung sein kann.
Zusätzlich werden die einzelnen Bedingungen, die erfüllt sein müssen, damit ein Schutzbereich bezüglich der Kollsionsvermeidung aktiv ist, angezeigt.

Die Variable ist folgendermaßen codiert:
Bit 0:    Schutzbereich wird überwacht (dieses Bit hat die gleiche Bedeutung wie die Systemvariable $AN_COLL_STATE).
Bit 1:    Der Schutzbereich ist im intern gebildeten Modell enthalten.
Bit 2:    Der Schutzbereich hat den Status 'P' (PLC-controlled).
Bit 3:    Der Schutzbereich hat den Status 'A' (Aktiv).
Bit 4:    Alle Achsen, die den Schutzbereich bewegen können, sind referenziert.
Bit 5:    Zeigt an, ob dem Schutzbereich ein PLC-Bit zugeordnet ist.
Bit 6:    Zustand des Interfacebits, das dem SB zugeordnet ist.
Bit 7:    Der Schutzbereich hat keine Verbindung zu ROOT (die kinematische Kette ist durch einen SWITCH unterbrochen).

Ein aktiver Schutzbereich (Bit 0 = TRUE) geht nur dann tatsächlich in die Kollisionsüberwachung ein, wenn er Bestandteil mindestens eines Kollisionspaares ist ($NP_COLL_PAIR), dessen anderer Partner ebenfalls ein aktiver Schutzbereich ist.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_LINK_COMM_STATE</name>
<brief>Status der NCU-Link-Kommunikation zwischen allen NCUs des NCU-Link-Clusters</brief>
<description>Status der NCU-Link-Kommunikation zwischen allen NCUs des NCU-Link-Clusters.

Dezimalwerte der Variablen:
0: NCU-Link-Kommunikation ist nicht aktiv (MD18780 $MN_MM_NCU_LINK_MASK)
1: NCU-Link-Kommunikation ist aktiv (MD18780 $MN_MM_NCU_LINK_MASK) und funktioniert korrekt, d.h. es werden Lebenszeichen von allen NCUs im Cluster empfangen
2: NCU-Link-Kommunikation ist aktiv (MD18780 $MN_MM_NCU_LINK_MASK), funktioniert aber nicht korrekt (z. B. IBN mit nicht aktiver
Linkverbindung, Kommunikationsfehler, ...)
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_FACETS_AVAILABLE</name>
<brief>Verfügbare Anzahl von Facetten von Kollisionskörpern</brief>
<description>Maschinenteile können für die Funktion Kollisionsvermeidung aus Dreiecksflächen modelliert werden. Die Anzahl der Dreiecke ist nach oben durch das Maschinendatum 18895 $MN_MM_MAXNUM_3D_FACETS beschränkt. Die Systemvariable $AN_FACETS_AVAILABLE gibt an, wie viele davon noch frei sind.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_FACETS_ACT</name>
<brief>Aktuell verwendete Anzahl von Facetten von Kollisionskörpern</brief>
<description>Maschinenteile können für die Funktion Kollisionsvermeidung aus Dreiecksflächen modelliert werden. Die Anzahl der Dreiecke ist nach oben durch das Maschinendatum 18895 $MN_MM_MAXNUM_3D_FACETS beschränkt. Die Systemvariable $AN_FACETS_ACT gibt an, wie viele davon aktuell verwendet werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_FACETS_MIN</name>
<brief>Minimal verwendete Anzahl von Facetten von Kollisionskörpern</brief>
<description>Maschinenteile können für die Funktion Kollisionsvermeidung aus Dreiecksflächen modelliert werden. Die Anzahl der Dreiecke ist nach oben durch das Maschinendatum 18895 $MN_MM_MAXNUM_3D_FACETS beschränkt. Die Systemvariable $AN_FACETS_MIN gibt an, wie viele davon bisher mindestens verwendet wurden. Sie kann durch Beschreiben mit einem beliebigen Wert zurückgesetzt werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_FACETS_MAX</name>
<brief>Maximal verwendete Anzahl von Facetten von Kollisionskörpern</brief>
<description>Maschinenteile können für die Funktion Kollisionsvermeidung aus Dreiecksflächen modelliert werden. Die Anzahl der Dreiecke ist nach oben durch das Maschinendatum 18895 $MN_MM_MAXNUM_3D_FACETS beschränkt. Die Systemvariable $AN_FACETS_MIN gibt an, wie viele davon bisher höchstens verwendet wurden. Sie kann durch Beschreiben mit einem beliebigen Wert zurückgesetzt werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_FACETS_INTERN_AVAILABLE</name>
<brief>Verfügbare Anzahl von Facetten von internen Kollisionskörpern</brief>
<description>Veränderliche Maschinenteile wie z.B. Werkzeuge werden durch die Funktion Kollisionsvermeidung automatisch aus Dreiecksflächen modelliert. Die Anzahl der Dreiecke ist nach oben durch das Maschinendatum 18894 $MN_MM_MAXNUM_3D_FACETS_INTERN beschränkt. Die Systemvariable $AN_FACETS_INTERN_AVAILABLE gibt an, wie viele davon noch frei sind.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_FACETS_INTERN_ACT</name>
<brief>Aktuell verwendete Anzahl von internen Facetten von Kollisionskörpern</brief>
<description>Veränderliche Maschinenteile wie z.B. Werkzeuge werden durch die Funktion Kollisionsvermeidung automatisch aus Dreiecksflächen modelliert. Die Anzahl der Dreiecke ist nach oben durch das Maschinendatum 18894 $MN_MM_MAXNUM_3D_FACETS_INTERN beschränkt. Die Systemvariable $AN_FACETS_INTERN_ACT gibt an, wie viele davon aktuell verwendet werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_FACETS_INTERN_MIN</name>
<brief>Minimal verwendete Anzahl von internen Facetten von Kollisionskörpern</brief>
<description>Veränderliche Maschinenteile wie z.B. Werkzeuge werden durch die Funktion Kollisionsvermeidung automatisch aus Dreiecksflächen modelliert. Die Anzahl der Dreiecke ist nach oben durch das Maschinendatum 18894 $MN_MM_MAXNUM_3D_FACETS_INTERN beschränkt. Die Systemvariable $AN_FACETS_INTERN_MIN gibt an, wie viele davon bisher mindestens verwendet wurden. Sie kann durch Beschreiben mit einem beliebigen Wert zurückgesetzt werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_FACETS_INTERN_MAX</name>
<brief>Maximal verwendete Anzahl von internen Facetten von Kollisionskörpern</brief>
<description>Veränderliche Maschinenteile wie z.B. Werkzeuge werden durch die Funktion Kollisionsvermeidung automatisch aus Dreiecksflächen modelliert. Die Anzahl der Dreiecke ist nach oben durch das Maschinendatum 18894 $MN_MM_MAXNUM_3D_FACETS_INTERN beschränkt. Die Systemvariable $AN_FACETS_INTERN_MAX gibt an, wie viele davon bisher höchstens verwendet wurden. Sie kann durch Beschreiben mit einem beliebigen Wert zurückgesetzt werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_PROT_AREAS_ACT</name>
<brief>Aktuell verwendete Anzahl von Schutzbereichen von Kollisionskörpern</brief>
<description>Die Funktion Kollisionsvermeidung kann eine maximale Anzahl an Schutzbereiche überwachen. Diese Anzahl ist durch das Maschinendatum 18890 $MN_MM_MAXNUM_3D_PROT_AREAS bestimmt. Die Systemvariable $AN_PROT_AREAS_ACT gibt an, wie viele davon aktuell verwendet werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_PROT_AREA_ELEM_ACT</name>
<brief>Aktuell verwendete Anzahl von Schutzbereichselementen von Kollisionskörpern</brief>
<description>Die Funktion Kollisionsvermeidung kann eine maximale Anzahl an Schutzbereichselemente überwachen. Diese Anzahl ist durch das Maschinendatum 18892 $MN_MM_MAXNUM_3D_PROT_AREA_ELEM bestimmt. Die Systemvariable $AN_PROT_AREA_ELEM_ACT gibt an, wie viele davon aktuell verwendet werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_COLL_PAIRS_ACT</name>
<brief>Aktuell verwendete Anzahl von Kollisionspaaren von Kollisionskörpern</brief>
<description>Die Funktion Kollisionsvermeidung kann eine maximale Anzahl an Schutzbereichspaaren überwachen. Diese Anzahl ist durch das Maschinendatum 18898 $MN_MM_MAXNUM_3D_COLL_PAIRS bestimmt. Die Systemvariable $AN_COLL_PAIRS_ACT gibt an, wie viele davon aktuell verwendet werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_T_PROT_ELEM_ACT</name>
<brief>Aktuell verwendete Anzahl von Werkzeugschutzbereichselementen</brief>
<description>Die Funktion Kollisionsvermeidung kann nur eine maximale Anzahl an Werkzeugschutzbereichselementen verwenden. Diese Anzahl ist durch das Maschinendatum 18893 $MN_MM_MAXNUM_3D_T_PROT_ELEM bestimmt. Die Systemvariable $AN_T_PROT_ELEM_ACT gibt an, wie viele davon aktuell verwendet werden.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_KIN_CHAIN_ELEM_ACT</name>
<brief>Verwendete Anzahl von kinematischen Elementen</brief>
<description>Die Kinematischen Ketten können nur eine maximale Anzahl an Elementen verwenden. Diese Anzahl ist durch das Maschinendatum 18880 $MN_MM_MAXNUM_KIN_CHAIN_ELEM bestimmt. Die Systemvariable $AN_KIN_CHAIN_ELEM_ACT gibt an, wie viele davon aktuell verwendet werden.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_ROBOUT</name>
<brief>NCK-PLC Interface Robotik Control</brief>
<description>Die Systemvariable schreibt die Daten des Robotik Handling für das Interface Robotik Control, welches vom NCK an die PLC gesendet wird. Die Daten können zurück gelesen werden. Der Index[0...7] gibt die jeweilige Bytenummer an.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_ROBIN</name>
<brief>NCK-PLC Interface Robotik Status</brief>
<description>Die Systemvariable liest die Daten des Robotik Handling für das Interface Robotik Status, welches von der PLC an NCK gesendet wird. Der Index[0...7] gibt die jeweilige Bytenummer an.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$AN_POWERON_STATE</name>
<brief>&gt;Zustand des NCK-Hochlaufs</brief>
<description>Die Variable gibt bitkodiert den Zustand des NCK-Hochlaufs an.
Alle Bits = 0: NCK-Hochlauf hat noch nicht begonnen.
Bit0=1:  Der NCK-Hochlauf hat begonnen, d.h. alle NCK-Objekte (Kanäle etc.) wurden bereits erstellt und werden initialisiert.
Bit1=1: Das Lesen von Hauptlauf-Zuständen ist jetzt möglich. Das heißt, alle Stationen wurden initialisiert und das Hochlauf-Reset mitsamt der Reset-Init-Sätze ist durchgelaufen.
Bit2=1:  Anwendereingriffe (Reset, Stop etc.) sind jetzt möglich bzw. sinnvoll. Das heißt, ein ggf. projektiertes Safety-ProgEvent wurde korrekt beendet oder konnte unter Umständen aufgrund von Alarmen gar nicht ausgeführt werden. Es steht als nächstes ein ggf. projektiertes PowerOn-ProgEvent an, wenn Alarme die Ausführung nicht verhindern.
Bit24=1: Der NCK ist fertig hochgelaufen mitsamt aller ProgEvents, die automatisch ausgeführt werden konnten (Safety-ProgEvent, PowerOn-ProgEvent). Das Bit gibt nicht an, ob es im Hochlauf zu einem Fehler gekommen ist oder nicht (siehe Bit25).
Bit25=1: Der NCK-Hochlauf wurde fehlerhaft beendet. Das heißt, es kam beispielsweise bei der Initialisierung der Stationen, bei den Reset-Initsätzen oder der Abarbeitung des Safety-ProgEvents zu einem Fehler. Weitere Alarme zeigen das genaue Problem an und die Alarmreaktionen, welche Aktionen man ausführen darf.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$P_ACCESSLEVEL</name>
<brief>Zugriffsstufe</brief>
<description>Aktuell eingestellte Stufe der Zugriffsberechtigung. Kann durch Passworteingabe oder Schlüsselschalter verändert werden.
0 = Zugriffsstufe SIEMENS
1 = Zugriffsstufe Maschinenhersteller
2 = Zugriffsstufe Inbetriebnehmer (Maschinenhersteller)
3 = Zugriffsstufe Endanwender mit Kennwort
4 = Zugriffsstufe Schlüsselschalter 3
5 = Zugriffsstufe Schlüsselschalter 2
6 = Zugriffsstufe Schlüsselschalter 1
7 = Zugriffsstufe Schlüsselschalter 0
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_MODEL_SCALING_OVL</name>
<brief>&gt;Information, ob Modellskalierung überladen ist.</brief>
<description>Die Variable gibt bitkodiert an, ob und wodurch das über die MMCID programmierte Maschinendatum bzgl. der Modelldefinition in den bei Kaltstart wirksamen Eigenschaften verändert ist. Veränderungen sind nur für Simulations-NCK-Systeme definiert und möglich. Der Feldindex entspricht der MMCID des zu prüfenden Maschinendatums. Bsp. $AN_MODLE_SCALING_OVL[20700] bezeichnet das Maschinendatum $MC_REFP_NC_START_LOCK. Der Feldindex einer nicht existierenden MMCID führt nicht zum Alarm, sondern liefert den Wert -1 (0xffffffff).
Alle Bits = 0: Das Maschinendatum liegt unverändert mit seinen für das NCK Modell definierten Eigenschaften vor.
Bit0=1: Simulations-NCK. Ein Eintrag in der Datei, die mit der intern verwendeten Umgebungsvariable NCNCKSIMS bestimmt ist, hat eine oder mehrere Eigenschaften der originalen Modelldefinition verändert
Bit1=1: Simulations-NCK. Ein Eintrag in der Datei, die mit der intern verwendeten Umgebungsvariable NCNCKSIMS00 bestimmt ist, hat eine oder mehrere Eigenschaften der originalen Modelldefinition verändert
Bit2=1: Simulations-NCK. Ein Eintrag in der Datei, die mit der intern verwendeten Umgebungsvariable NCNCKSIMS01 bestimmt ist, hat eine oder mehrere Eigenschaften der originalen Modelldefinition verändert
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$PN_CHANGE_CNTR_NK_DATA</name>
<brief>Änderungszähler für kinematische Kettendaten</brief>
<description>Änderungszähler für kinematische Kettendaten (Kettenelemente und NK_SWITCHes).
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$PN_CHANGE_CNTR_NK_ELEM</name>
<brief>Änderungszähler für kinematische Kettenelemente</brief>
<description>Änderungszähler für kinematische Kettenelemente (ohne NK_SWITCH).
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$PN_CHANGE_CNTR_NK_SWITCH</name>
<brief>Änderungszähler für $NK_SWITCHes</brief>
<description>Änderungszähler für $NK_SWITCHes.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$PN_CHANGE_CNTR_NP_DATA</name>
<brief>Änderungszähler für 3D-Schutzbereichsdaten ($NP_xxx)</brief>
<description>Änderungszähler für 3D-Schutzbereichsdaten ($NP_xxx).
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$PN_CHANGE_CNTR_NT_DATA</name>
<brief>Änderungszähler für Trafodaten ($NT_xxx)</brief>
<description>Änderungszähler für Trafodaten ($NT_xxx).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_EP</name>
<brief>programmierte Endposition</brief>
<description>$P_EP[X]
Die Systemvariable $P_EP liefert die aktuelle WKS-Sollposition im Interpreter. Der Zahlenwert ist nicht zwangsläufig identisch mit dem programmierten Wert im Teileprogramm. In folgenden Situationen gibt es Abweichungen:
- bei inkrementeller Programmierung
- bei Änderung des WKS durch Frame- oder Werkzeuganwahl
Wird nach Satzsuchlauf mit Berechnung ein ASUP gestartet, so werden mit diesem Vorgang die Positionen im Interpreter synchronisiert.
$P_EP liefert im ASUP dann die Position an der die Achsen tatsächlich stehen. Die aufgesammelte Suchlaufposition kann über die Systemvariable $AC_RETPOINT abgefragt werden.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_EPM</name>
<brief>Programmierte MKS-Zielposition</brief>
<description>Die axiale Variable $P_EPM[&lt;Achse&gt;] ermittelt die aktuelle programmierte MKS-Zielposition im Vorlauf für die entsprechende Achse (siehe auch $P_EP).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_APR</name>
<brief>Achsposition im Startpunkt bei WAB  im  WKS</brief>
<description>$P_APR[X]
Position der Achse im Werkstückkoordinatensystem im Aufstartpunkt der Anfahrbewegung bei Weichem Anfahren an die Kontur
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_AEP</name>
<brief>1. Konturpunkt bei WAB im WKS</brief>
<description>$P_AEP[X]
Anfahrpunkt: Erster Konturpunkt im Werkstückkoordinatensystem bei weichem Anfahren an die Kontur
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_POLF</name>
<brief>programmierte Rückzugsposition der Achse</brief>
<description>$P_POLF[X]
liefert die programmierte Rückzugsposition der Achse
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_POLF_VALID</name>
<brief>Status des Wertes von $P_POLF</brief>
<description>$P_POLF_VALID[X]
liefert den aktuellen Status von $P_POLF[X]
X: Achse

Rückgabewerte:
0: kein Rückzug programmiert
1: Rückzug in abs. Position programmiert
2: Rückzug als Distanz programmiert
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_IW</name>
<brief>Aktueller WKS-Sollwert einer Achse</brief>
<description>Die axiale Variable $AA_IW[&lt;Achse&gt;] ermittelt den aktuellen Sollwert im Werkstückkoordinatensystem (WKS) für die entsprechende Achse. Der Sollwert entspricht dem Interpolator-Ausgangswert für den aktuellen Interpolationstakt. Der WKS-Wert enthält keine axialen Überlage rungsanteile (DRF, AA_OFF, ext. Nullpunktverschiebung, etc.).
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AA_REPOS_DELAY</name>
<brief>Aktuelle REPOS-Unterdrückung einer Achse</brief>
<description>$AA_REPOS_DELAY[X]
TRUE:     Für diese Achse ist gerade die Repos-Unterdrückung aktiv.
FALSE:    sonst
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_IEN</name>
<brief>Aktueller ENS-Sollwert einer Achse</brief>
<description>Die axiale Variable $AA_IEN[&lt;Achse&gt;] ermittelt den aktuellen Sollwert im einstellbaren Nullpunkt-Koordinatensystem (ENS) für die entsprechende Achse.
Siehe auch $AA_IW[&lt;Achse&gt;]. Der ENS-Wert enthält keine axialen Überlagerungsanteile (DRF, AA_OFF, ext. Nullpunktverschiebung, etc.).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_IBN</name>
<brief>Aktueller BNS-Sollwert einer Achse</brief>
<description>Die axiale Variable $AA_IBN[&lt;Achse&gt;] ermittelt den aktuellen Sollwert im Basis-Nullpunkt-Koordinatensystem (BNS) für die entsprechende Achse.
Siehe auch $AA_IW[&lt;Achse&gt;]. Der BNS-Wert enthält keine axialen Überlagerungsanteile (DRF, $AA_OFF, ext. Nullpunktverschiebung, etc.).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_IB</name>
<brief>Aktueller BKS-Sollwert einer Achse</brief>
<description>Die axiale Variable $AA_IB[&lt;Achse&gt;] ermittelt den aktuellen Sollwert im Basis-Koordinatensystem (BKS) für die entsprechende Achse.
Siehe auch $AA_IW[&lt;Achse&gt;]. Der BKS-Wert enthält keine axialen Überlagerungsanteile (DRF, $AA_OFF, ext. Nullpunktverschiebung, etc.).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_IM</name>
<brief>Aktueller MKS-Sollwert einer Achse</brief>
<description>Die axiale Variable $AA_IM[&lt;Achse&gt;] ermittelt den aktuellen Sollwert im Maschinen-Koordinatensystem (MKS) für die entsprechende Achse.
Siehe auch $AA_IW[&lt;Achse&gt;]. Der MKS-Wert enthält alle axialen Überlagerungsanteile (DRF, $AA_OFF, ext. Nullpunktverschiebung, etc.).
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_ACT_INDEX_AX_POS_NO</name>
<brief>aktuelle Teilungsposition</brief>
<description>$AA_ACT_INDEX_AX_POS_NO[X]
=0: keine Teilungsachse, damit keine Teilungsposition verfügbar.
&gt;0: Nummer der zuletzt erreichten bzw. überfahrenen Teilungsposition
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_PROG_INDEX_AX_POS_NO</name>
<brief>programmierte Teilungsposition</brief>
<description>$AA_PROG_INDEX_AX_POS_NO[X]
=0: keine Teilungsachse, damit keine Teilungsposition verfügbar oder die Teilungsachse fährt derzeit keine Teilungsposition an
&gt;0: Nummer der programmierten Teilungsposition
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AA_ENC_ACTIVE</name>
<brief>Messsystem ist aktiv</brief>
<description>Die axiale Variable $AA_ENC_ACTIVE[&lt;Achse&gt;] ermittelt, ob das aktive Messsystem unterhalb der Gebergrenzfrequenz arbeitet.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AA_ENC1_ACTIVE</name>
<brief>1. Messsystem ist aktiv</brief>
<description>Die axiale Variable $AA_ENC1_ACTIVE[&lt;Achse&gt;] ermittelt, ob das erste Messsystem unterhalb der Gebergrenzfrequenz arbeitet.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AA_ENC2_ACTIVE</name>
<brief>2. Messsystem ist aktiv</brief>
<description>Die axiale Variable $AA_ENC2_ACTIVE[&lt;Achse&gt;] ermittelt, ob das zweite Messsystem unterhalb der Gebergrenzfrequenz arbeitet.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_IM</name>
<brief>Aktueller MKS-Istwert einer Achse</brief>
<description>Die axiale Variable $VA_IM[&lt;Achse&gt;] ermittelt den Encoder-Istwert (gemessen aktives Messsystem), im Maschinenkoordinatensystem (MKS).
Alle Istwert-Kompensationen sind korrigiert (Spindelsteigungs-Fehlerkompensation, Losekompensation, Quadrantenfehlerkompensation).
Bei aktiver Spindel- oder Achssperre liefert die Variable per Definition den aktuellen Sollwert. Soll in diesem Fall auch der tatsächliche Istwert geliefert werden, muss das BIT3 im $MA_MISC_FUNCTION_MASK gesetzt werden.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_IM1</name>
<brief>Aktueller MKS-Istwert einer Achse</brief>
<description>Die axiale Variable $VA_IM1[&lt;Achse&gt;] ermittelt den Encoder-Istwert (gemessen Encoder 1) im Maschinenkoordinatensystem (MKS). Alle Istwert-
Kompensationen sind korrigiert (Spindelsteigungs-Fehlerkompensation, Losekompensation, Quadrantenfehlerkompensation).
Bei aktiver Spindel- oder Achssperre liefert die Variable per Definition den aktuellen Sollwert. Soll in diesem Fall auch der tatsächliche Istwert geliefert werden, muss das BIT3 im $MA_MISC_FUNCTION_MASK gesetzt werden.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_IM2</name>
<brief>Aktueller MKS-Istwert einer Achse</brief>
<description>Die axiale Variable $VA_IM2[&lt;Achse&gt;] ermittelt den Encoder-Istwert (gemessen Encoder 2) im Maschinenkoordinatensystem (MKS). Alle Istwert-
Kompensationen sind korrigiert (Spindelsteigungs-Fehlerkompensation, Losekompensation, Quadrantenfehlerkompensation).
Bei aktiver Spindel- oder Achssperre liefert die Variable per Definition den aktuellen Sollwert. Soll in diesem Fall auch der tatsächliche Istwert geliefert werden, muss das BIT3 im $MA_MISC_FUNCTION_MASK gesetzt werden.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_LAG_ERROR</name>
<brief>Schleppfehler der Achse</brief>
<description>Die Variable $VA_LAG_ERROR[&lt;Achse&gt;] liefert den konturrelevanten Schleppfehler, d.h. Lagesollwert nach Feininterpolator - Lageistwert.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MW</name>
<brief>Erfasste Messtasterposition (WKS)</brief>
<description>Messtaster-Messwert im Werkstückkoordinatensystem
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MM</name>
<brief>Erfasste Messtasterposition (MKS)</brief>
<description>Messtaster-Messwert im Maschinenkoordinatensystem
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MW1</name>
<brief>Messtasterposition 1. Trigger (WKS)</brief>
<description>Messergebnis axiales Messen
Triggerereignis 1 im WKS
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MW2</name>
<brief>Messtasterposition 2. Trigger (WKS)</brief>
<description>Messergebnis axiales Messen
Triggerereignis 2 im WKS
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MW3</name>
<brief>Messtasterposition 3. Trigger (WKS)</brief>
<description>Messergebnis axiales Messen
Triggerereignis 3 im WKS
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MW4</name>
<brief>Messtasterposition 4. Trigger (WKS)</brief>
<description>Messergebnis axiales Messen
Triggerereignis 4 im WKS
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MM1</name>
<brief>Messtasterposition 1. Trigger (MKS)</brief>
<description>Messergebnis axiales Messen
Triggerereignis 1 im MKS
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MM2</name>
<brief>Messtasterposition 2. Trigger (MKS)</brief>
<description>Messergebnis axiales Messen
Triggerereignis 2 im MKS
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MM3</name>
<brief>Messtasterposition 3. Trigger (MKS)</brief>
<description>Messergebnis axiales Messen
Triggerereignis 3 im MKS
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MM4</name>
<brief>Messtasterposition 4. Trigger (MKS)</brief>
<description>Messergebnis axiales Messen
Triggerereignis 4 im MKS
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AA_MEAACT</name>
<brief>Axiales Messen aktiv</brief>
<description>Die Variable $AA_MEAACT[&lt;Achse&gt;] liefert genau dann TRUE, wenn für die Achse &lt;Achse&gt; das axiale Messen aktiv
Entspricht dem NC/PLC-Nahtstellensignal &lt;Messung_aktiv/ &gt; (Messung aktiv)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_DRF</name>
<brief>Handradüberlagerung einer Achse</brief>
<description>Die axiale Variable $AC_DRF[&lt;Achse&gt;] ermittelt an axialen Überlagerungswert, der durch das Handrad (DRF-Verschiebung) verursacht wurde.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_PRESET</name>
<brief>Preset-Wert einer Achse</brief>
<description>Die axiale Variable $AC_PRESET[&lt;Achse&gt;] ermittelt den letzten vorgegebenen Preset-Wert.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_ETRANS</name>
<brief>Externe Nullpunktverschiebung</brief>
<description>Die axiale Variable $AA_ETRANS[&lt;Achse&gt;] dient zur Eingabe einer externen Nullpunktverschiebung, die über die PLC aktiviert werden kann. Nach der Aktivierung durch die PLC wird der Verschiebungswert als axiale Überlagerung mit dem nächsten Satz herausgefahren. Ist das Bit 1 in $MC_MM_SYSTEM_FRAME_MASK gesetzt, so wird mit der Aktivierung durch die PLC eine aktive Bewegung sofort gestoppt, der Vorlauf reorganisiert und das Systemframe mit dem Achswert von $AA_ETRANS[&lt;Achse&gt;] beschrieben und aktiviert. Die Verschiebung wird daraufhin zuerst herausgefahren und dann wird die unterbrochene Bewegung wieder fortgesetzt. Die externe Nullpunktverschiebung wirkt absolut auf die Translation des aktuellen Systemframes. Eine mehrmalige Aktivierung wirkt also nicht additiv und es wird nur der Grobanteil der Translation (nicht Feinverschiebung) mit dem Wert aus $AA_ETRANS[&lt;Achse&gt;] überschrieben.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_MEAS_P1_VALID</name>
<brief>1. Messpunkt einer Achse erfassen</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die axiale Variable $AA_MEAS_P1_VALID[&lt;Achse&gt;] dient zum Erfassen der aktuellen Achsposition bezüglich einem ausgewählten Koordinatensystems. Die Auswahl des Koordinatensystems erfolgt über die Variable $AC_MEAS_P1_COORD.

Anwendung:
$AA_MEAS_P1_VALID[&lt;Achse&gt;] = 0    ; 1. Messpunkt der Achse ist ungültig
$AA_MEAS_P1_VALID[&lt;Achse&gt;] = 1    ; 1. Messpunkt der Achse wird ermittelt
Der erfasste Messpunkt wird in $AA_MEAS_POINT1[&lt;Achse&gt;] gespeichert.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_MEAS_P2_VALID</name>
<brief>2. Messpunkt einer Achse erfassen</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die axiale Variable $AA_MEAS_P2_VALID[&lt;Achse&gt;] dient zum Erfassen der aktuellen Achsposition bezüglich einem ausgewählten Koordinatensystems. Die Auswahl des Koordinatensystems erfolgt über die Variable $AC_MEAS_P2_COORD.

Anwendung:
$AA_MEAS_P2_VALID[&lt;Achse&gt;] = 0    ; 2. Messpunkt der Achse ist ungültig
$AA_MEAS_P2_VALID[&lt;Achse&gt;] = 1    ; 2. Messpunkt der Achse wird ermittelt
Der erfasste Messpunkt wird in $AA_MEAS_POINT2[&lt;Achse&gt;] gespeichert.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_MEAS_P3_VALID</name>
<brief>3. Messpunkt einer Achse erfassen</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die axiale Variable $AA_MEAS_P3_VALID[&lt;Achse&gt;] dient zum Erfassen der aktuellen Achsposition bezüglich einem ausgewählten Koordinatensystems. Die Auswahl des Koordinatensystems erfolgt über die Variable $AC_MEAS_P3_COORD.

Anwendung:
$AA_MEAS_P3_VALID[&lt;Achse&gt;] = 0    ; 3. Messpunkt der Achse ist ungültig
$AA_MEAS_P3_VALID[&lt;Achse&gt;] = 1    ; 3. Messpunkt der Achse wird ermittelt
Der erfasste Messpunkt wird in $AA_MEAS_POINT3[&lt;Achse&gt;] gespeichert.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_MEAS_P4_VALID</name>
<brief>4. Messpunkt einer Achse erfassen</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die axiale Variable $AA_MEAS_P4_VALID[&lt;Achse&gt;] dient zum Erfassen der aktuellen Achsposition bezüglich einem ausgewählten Koordinatensystems. Die Auswahl des Koordinatensystems erfolgt über die Variable $AC_MEAS_P4_COORD.

Anwendung:
$AA_MEAS_P4_VALID[&lt;Achse&gt;] = 0    ; 4. Messpunkt der Achse ist ungültig
$AA_MEAS_P4_VALID[&lt;Achse&gt;] = 1    ; 4. Messpunkt der Achse wird ermittelt
Der erfasste Messpunkt wird in $AA_MEAS_POINT4[&lt;Achse&gt;] gespeichert.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MEAS_POINT1</name>
<brief>1. Messpunkt</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die axiale Variable $AA_MEAS_POINT1[&lt;Achse&gt;] dient zum Beschreiben des 1. Messpunktes für die Werkstück- und Werkzeugvermessung.
Der Messpunkt kann entweder direkt beschrieben, oder über die Variablen $AC_MEAS_LATCH[0], $AA_MEAS_P1_VALID[&lt;Achse&gt;] erfasst werden.

Anwendung:
$AA_MEAS_POINT1[x] = $AA_IW[x]
$AA_MEAS_POINT1[y] = $AA_IW[y]
$AA_MEAS_POINT1[z] = $AA_IW[z]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MEAS_POINT2</name>
<brief>2. Messpunkt</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die axiale Variable $AA_MEAS_POINT2[&lt;Achse&gt;] dient zum Beschreiben des 2. Messpunktes für die Werkstück- und Werkzeugvermessung.
Der Messpunkt kann entweder direkt beschrieben, oder über die Variablen $AC_MEAS_LATCH[1], $AA_MEAS_P2_VALID[&lt;Achse&gt;] erfasst werden.

Anwendung:
$AA_MEAS_POINT2[x] = $AA_IW[x]
$AA_MEAS_POINT2[y] = $AA_IW[y]
$AA_MEAS_POINT2[z] = $AA_IW[z]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MEAS_POINT3</name>
<brief>3. Messpunkt</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die axiale Variable $AA_MEAS_POINT3[&lt;Achse&gt;] dient zum Beschreiben des 3. Messpunktes für die Werkstück- und Werkzeugvermessung.
Der Messpunkt kann entweder direkt beschrieben, oder über die Variablen $AC_MEAS_LATCH[2], $AA_MEAS_P3_VALID[&lt;Achse&gt;] erfasst werden.

Anwendung:
$AA_MEAS_POINT3[x] = $AA_IW[x]
$AA_MEAS_POINT3[y] = $AA_IW[y]
$AA_MEAS_POINT3[z] = $AA_IW[z]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MEAS_POINT4</name>
<brief>4. Messpunkt</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die axiale Variable $AA_MEAS_POINT4[&lt;Achse&gt;] dient zum Beschreiben des 4. Messpunktes für die Werkstück- und Werkzeugvermessung.
Der Messpunkt kann entweder direkt beschrieben, oder über die Variablen $AC_MEAS_LATCH[3], $AA_MEAS_P4_VALID[&lt;Achse&gt;] erfasst werden.

Anwendung:
$AA_MEAS_POINT4[x] = $AA_IW[x]
$AA_MEAS_POINT4[y] = $AA_IW[y]
$AA_MEAS_POINT4[z] = $AA_IW[z]
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_MEAS_SP_VALID</name>
<brief>Gültigkeit der Sollposition</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die axiale Variable $AA_MEAS_SP_VALID[&lt;Achse&gt;] dient dazu den vorgegebenen Sollwert einer Achse auf gültig oder ungültig zu setzen.

Anwendung:
$AA_MEAS_SP_VALID[&lt;Achse&gt;] = 0 ; Sollposition der Achse ist ungültig
$AA_MEAS_SP_VALID[&lt;Achse&gt;] = 1 ; Sollposition der Achse ist gültig
Die Sollposition steht in $AA_MEAS_SETPOINT[&lt;Achse&gt;]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MEAS_SETPOINT</name>
<brief>Sollposition einer Achse</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die axiale Variable $AA_MEAS_SETPOINT[&lt;Achse&gt;] dient zur Vorgabe einer Sollposition für eine Achse. Diese Sollposition wird bei der Berechnung der Werkstücklage oder der Werkzeuglänge berücksichtigt.

Anwendung:
$AA_MEAS_SETPOINT[x] = 0.0
$AA_MEAS_SETPOINT[y] = 0.0
$AA_MEAS_SETPOINT[z] = 0.0
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MEAS_SETANGLE</name>
<brief>Sollwinkel einer Achse</brief>
<description>Variable für die Werkstück- und Werkzeugvermessung.
Die axiale Variable $AA_MEAS_SETANGLE[&lt;Achse&gt;] dient zur Vorgabe eines Sollwinkels für eine Achse. Dieser Sollwinkel wird bei der Berechnung der Werkstücklage oder der Werkzeuglänge berücksichtigt.

Anwendung:
$AA_MEAS_SETANGLE[x] = 0.0
$AA_MEAS_SETANGLE[y] = 0.0
$AA_MEAS_SETANGLE[z] = 0.0
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_OFF</name>
<brief>Überlagerte Bewegung einer Achse</brief>
<description>Die axiale Variable $AA_OFF[&lt;Achse&gt;] dient zur überlagerten Bewegung für die programmierte Achse. Das Verhalten der überlagerten Bewegung kann mit $MA_AA_OFF_MODE projektiert werden.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_OFF_LIMIT</name>
<brief>Grenzwert bei Achsüberlagerung erreicht</brief>
<description>Die axiale Variable $AA_OFF_LIMIT[&lt;Achse&gt;] dient zur Abfrage eines Grenzwertes für die Achsüberlagerung $AA_OFF[&lt;Achse&gt;].

Folgende Werte sind möglich:
0:   Grenzwert nicht erreicht
1:   Grenzwert in positiver Achsrichtung erreicht
-1:  Grenzwert in negativer Achsrichtung erreicht
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_OFF_VAL</name>
<brief>Integrierter Weg der Achsüberlagerung</brief>
<description>Die axiale Variable $AA_OFF_VAL[&lt;Achse&gt;] ermittelt den integrierten Wert der überlagerten Bewegung für eine Achse.
Eine überlagerte Bewegung kann mit Hilfe des negativen Wertes dieser Variablen wieder rückgängig gemacht werden.
z.B. $AA_OFF[Achse] = -$AA_OFF_VAL[Achse]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_RETPOINT</name>
<brief>Wiederanfahrpunkt im ASUP</brief>
<description>Die Variable $AC_RETPOINT[&lt;Achse&gt;] liefert die WKS-Position einer Achse, an der ein ASUP gestartet wurde. Im ASUP kann dann auf diese Position repositioniert werden. Wird direkt nach Satzsuchlauf mit Berechnung ein ASUP gestartet, so liefert $AC_RETPOINT die aufgesammelte Suchlaufposition. Bei Modulo-Achsen liefert $AC_RETPOINT[] modulo gewandelte Positionen. Mit der Systemvariable $AC_RPVALID[] kann geprüft werden, ob $AC_RETPOINT[] einen im aktuellen Programmkontext gültigen Wiederanfahrpunkt liefert (siehe Doku zu $AC_RPVALID[]).

Hinweis zur Verwendung in Synchronaktionen:
Während der Bearbeitung der REPOS-Anfahrsätze, werden die durch REPOS erzeugten Wiederanfahrpositonen geliefert. Die aktuelle Parametrierung des REPOS-Vorgangs (Anfahren auf Unterbrechungspunkt, Satzanfangspunkt usw.) durch die G-Codes RMI, RMB, RME, RMN bzw. VDI-Signal werden dabei berücksichtigt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_TOFF</name>
<brief>Überlagerung in Werkzeugrichtung</brief>
<description>Die Variable $AA_TOFF[&lt;Geo-Achse&gt;] dient zur überlagerten Bewegung in der entsprechenden Werkzeugrichtung. Das Verhalten der überlagerten Bewegung kann mit $MC_TOFF_MODE projektiert werden. Die Aktivierung erfolgt aus dem Teileprogramm mit der Anweisung TOFFON. Mit der Anweisung TOFFOF können die Korrekturwerte rückgesetzt werden. Die Geschwindigkeit für die Überlagerung kann mit MD 21194 TOFF_VELO, die Beschleunigung mit MD21196 TOFF_ACCEL vorgegeben werden. Die Variable ist nur in Verbindung mit einer aktiven Orientierungstransformation oder einem aktiven Werkzeugträger sinnvoll.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_TOFF_VAL</name>
<brief>Integrierter Wert der Überlagerung in TKS</brief>
<description>Die Variable $AA_TOFF_VAL[&lt;Geo-Achse&gt;] ermittelt den integrierten Wert der überlagerten Bewegung in der entsprechenden Werkzeugrichtung.
Die Variable ist nur in Verbindung mit einer aktiven Orientierungstransformation oder einem aktiven Werkzeugträger sinnvoll.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_TOFF_LIMIT</name>
<brief>Grenzwert für Korrektur im TKS erreicht</brief>
<description>Die axiale Variable $AA_TOFF_LIMIT[&lt;Geo-Achse&gt;] dient zur Abfrage eines Grenzwertes für die Korrektur in Werkzeugrichtung (TKS) über $AA_TOFF[&lt;Geo-Achse&gt;].

Folgende Werte sind möglich:
0: Grenzwert nicht erreicht
1: Grenzwert in positiver Achsrichtung erreicht
-1: Grenzwert in negativer Achsrichtung erreicht

Die Grenzwerte können über SD 42970 TOFF_LIMIT vorgegeben werden.
Die Variable ist nur in Verbindung mit einer aktiven Orientierungstransformation oder einem aktiven Werkzeugträger sinnvoll.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_TOFF_PREP_DIFF</name>
<brief>Differenz-Wert VL/HL Überlagerung im TKS</brief>
<description>Die Variable $AA_TOFF_PREP_DIFF[&lt;Geo-Achse&gt;] ermittelt den Differenz-Wert der überlagerten Bewegung in der entsprechenden Werkzeugrichtung zwischen Hauptlauf und Vorlauf. Die Variable ist nur in Verbindung mit einer aktiven Orientierungstransformation oder einem aktiven Werkzeugträger sinnvoll.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_SOFTENDP</name>
<brief>Software-Endlage, positive Richtung</brief>
<description>Aktuelle Software-Endlage, positive Richtung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_SOFTENDN</name>
<brief>Software-Endlage, negative Richtung</brief>
<description>Aktuelle Software-Endlage, negative Richtung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTBW</name>
<brief>Weg vom Satzanfang im WKS</brief>
<description>Die axiale Variable $AA_DTBW[&lt;Achse&gt;] ermittelt den axialen Weg vom Satzanfang im Werkstückkoordinatensystem für Positionier- und Synchronachsen. Für die Wegberechnung ist allein die programmierte Position maßgeblich. Ist die Achse eine Koppelachse, bleibt der aus der Achskopplung resultierende Positionsanteil unberücksichtigt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTBB</name>
<brief>Weg vom Satzanfang im BKS</brief>
<description>Die axiale Variable $AA_DTBB[&lt;Achse&gt;] ermittelt den axialen Weg vom Satzanfang im Basiskoordinatensystem für Positionier- und Synchronachsen. Für die Wegberechnung ist allein die programmierte Position maßgeblich. Ist die Achse eine Koppelachse, bleibt der aus der Achskopplung resultierende Positionsanteil unberücksichtigt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTEW</name>
<brief>Weg zum Satzende im WKS</brief>
<description>Die axiale Variable $AA_DTEW[&lt;Achse&gt;] ermittelt den axialen Weg zum Satzende im Werkstückkoordinatensystem für Positionier- und Synchronachsen. Für die Wegberechnung ist allein die programmierte Position maßgeblich. Ist die Achse Koppelachse, bleibt der aus der Achskopplung resultierende Positionsanteil unberücksichtigt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTEB</name>
<brief>Weg zum Satzende im BKS</brief>
<description>Die axiale Variable $AA_DTEB[&lt;Achse&gt;] ermittelt den axialen Weg zum Satzende im Basiskoordinatensystem für Positionier- und Synchronachsen. Für die Wegberechnung ist allein die programmierte Position maßgeblich. Ist die Achse Koppelachse ist, bleibt der aus der Achskopplung resultierende Positionsanteil unberücksichtigt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTEPW</name>
<brief>Restweg einer Pendelachse im WKS</brief>
<description>Die axiale Variable $AA_DTEPW[&lt;Achse&gt;] ermittelt den axialen Restweg für die Zustellung Pendeln im Werkstückkoordinatensystem.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTEPB</name>
<brief>Restweg einer Pendelachse im BKS</brief>
<description>Die axiale Variable $AA_DTEPB[&lt;Achse&gt;] ermittelt den axialen Restweg für Zustellung Pendeln im Basiskoordinatensystem.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_OSCILL_REVERSE_POS1</name>
<brief>Pendeln Umkehrposition 1</brief>
<description>Die axiale Variable $AA_OSCILL_REVERSE_POS1[&lt;Achse&gt;] liefert die aktuelle Umkehrposition 1 für das Pendeln.
In Synchronaktionen wird der Settingdatenwert $SA_OSCILL_REVERSE_POS1 online ausgewertet.
Die Variable ist nur aus Synchronaktionen zugreifbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_OSCILL_REVERSE_POS2</name>
<brief>Pendeln Umkehrposition 2</brief>
<description>Die axiale Variable $AA_OSCILL_REVERSE_POS2[&lt;Achse&gt;] liefert aktuelle Umkehrposition 2 für das Pendeln.
In Synchronaktionen wird der Settingdatenwert $SA_OSCILL_REVERSE_POS2 online ausgewertet.
Die Variable ist nur aus Synchronaktionen zugreifbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DELT</name>
<brief>gespeicherter axialer Restweg nach RWL</brief>
<description>Die axiale Variable $AA_DELT[&lt;Achse&gt;] liefert den gespeicherten axialen Restweg im Werkstückkoordinatensystem nach axialem Restweg löschen durch eine Bewegungssynchronaktion.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_FA</name>
<brief>programmierter axialer Vorschub</brief>
<description>Die axialeVariable $P_FA[&lt;Achse&gt;] liefert den zuletzt programmierten axialen Vorschub.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_OVR</name>
<brief>axialer Override</brief>
<description>Die axiale Variable $AA_OVR[&lt;Achse&gt;] liefert den axialen Override für Bewegungssynchronaktionen.
Multiplikative Overridekomponente, wirkt zusätzlich zu Bedienoverride, programmierten Override und transformatorischen Override.
Der Wert wird begrenzt auf max. 200%. Wird ein Wert &lt; 0.0 eingegeben, so wird 0 angenommen und der Alarm 14756 gemeldet.
$AA_OVR[&lt;Achse&gt;} muss in jedem IPO-Takt neu geschrieben werden, sonst wirkt der Wert 100%.
Mit $AA_OVR[&lt;Spindel&gt;] wird der Spindeloverride verändert.
Die Variable ist nur aus Bewegungssynchronaktionen zugreifbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_PLC_OVR</name>
<brief>Axialer Override von PLC</brief>
<description>Die axiale Variable $AA_PLC_OVR[&lt;Achse&gt;] liefert den von der PLC vorgegebenen axialen Override.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_TOTAL_OVR</name>
<brief>Gesamter axialer Override</brief>
<description>Die axiale Variable $AA_TOTAL_OVR[&lt;Achse&gt;] liefert den gesamten axialen Override (PLC_OVR*NC_OVR).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_VC</name>
<brief>additive axiale Vorschubkorrektur</brief>
<description>Additive axiale Vorschubkorrektur für Bewegungssynchronaktionen.
Der Korrekturwert muss in jedem IPO-Takt neu geschrieben werden, sonst wirkt der Wert 0.
Bei Override 0 wird der Korrekturwert unwirksam, sonst wirkt der Override nicht auf den Korrekturwert.
Der Gesamtvorschub kann durch den Korrekturwert nicht negativ werden.
Nach oben wird so begrenzt, dass die maximalen Achsgeschwindigkeiten und Beschleunigungen nicht überschritten werden.
Die Berechnung der anderen Vorschubkomponenten wird nicht durch $AA_VC beeinflusst.
Der durch die Maschinendaten: $MN_OVR_FACTOR_LIMIT_BIN, $MN_OVR_FACTOR_FEEDRATE[30],
$MN_OVR_FACTOR_AX_SPEED[30], $MN_OVR_FACTOR_SPIND_SPEED festgelegten Overridewerte können nicht überschritten werden. Die additive Vorschubkorrektur wird so begrenzt, dass der resultierende Vorschub den maximalen Overridewert des programmierten Vorschub nicht überschreitet.
Die Variable ist nur aus Synchronaktionen zugreifbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_VACTB</name>
<brief>Achsgeschwindigkeit im BKS</brief>
<description>Die axiale Variable $AA_VACTB[&lt;Achse&gt;] ermittelt die Achsgeschwindigkeit im Basiskoordinatensystem.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_VACTW</name>
<brief>Achsgeschwindigkeit im WKS</brief>
<description>Die axiale Variable $AA_VACTW[&lt;Achse&gt;] ermittelt die Achsgeschwindigkeit im Werkstückkoordinatensystem.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_VACTM</name>
<brief>Achsgeschwindigkeit im MKS</brief>
<description>Die axiale Variable $AA_VACTM[&lt;Achse&gt;] ermittelt die sollwertseitige Achsgeschwindigkeit im Maschinenkoordinatensystem. Die Variable liefert auch für Tausch- und PLC-Achsen gültige Werte.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_VACTM</name>
<brief>Achsgeschwindigkeit-Istwert im MKS</brief>
<description>Die axiale Variable $VA_VACTM[&lt;Achse&gt;] ermittelt den Achsgeschwindigkeit-Istwert im Maschinenkoordinatensystem. Die Variable liefert einen undefinierten Wert, wenn die Gebergrenzfrequenz überschritten ist. Bei aktiver Spindel-/Achssperre liefert sie standardmäßig den aktuellen Geschwindigkeitssollwert. Soll weiterhin der tatsächliche Istgeschwindigkeit geliefert werden, muss das BIT3 im $MA_MISC_FUNCTION_MASK gesetzt werden.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_LOAD</name>
<brief>Antriebsauslastung</brief>
<description>Die Variable $AA_LOAD[&lt;Achse&gt;] liefert den Antriebsauslastung in %.
Nur bei PROFIdrive-Antrieben verfügbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_LOAD</name>
<brief>Antriebsauslastung</brief>
<description>Die Variable $VA_LOAD[&lt;Achse&gt;] liefert den Antriebsauslastung in %.
Nur bei PROFIdrive-Antrieben verfügbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_TORQUE</name>
<brief>Antriebsmomentensollwert</brief>
<description>Die Variable $AA_TORQUE[&lt;Achse&gt;] liefert den Antriebsmomentensollwert in Nm bzw. Kraftistwert in N.
Nur bei PROFIdrive-Antrieben verfügbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_TORQUE</name>
<brief>Antriebsmomentensollwert</brief>
<description>Die Variable $VA_TORQUE[&lt;Achse&gt;] liefert den Antriebsmomentensollwert in Nm bzw. Kraftistwert in N.
Nur bei PROFIdrive-Antrieben verfügbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_POWER</name>
<brief>Antriebswirkleistung</brief>
<description>Die Variable $AA_POWER[&lt;Achse&gt;] liefert den Antriebswirkleistung in W.
Nur bei PROFIdrive-Antrieben verfügbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_POWER</name>
<brief>Antriebswirkleistung</brief>
<description>Die Variable $VA_POWER[&lt;Achse&gt;] liefert den Antriebswirkleistung in W.
Nur bei PROFIdrive-Antrieben verfügbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_CURR</name>
<brief>Antriebs-Stromistwert</brief>
<description>Die Variable $AA_CURR[&lt;Achse&gt;] liefert den Stromistwert der Achse oder Spindel in A.
Nur bei PROFIdrive-Antrieben verfügbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_CURR</name>
<brief>Antriebs-Stromistwert</brief>
<description>Die Variable $VA_CURR[&lt;Achse&gt;] liefert den Stromistwert der Achse oder Spindel in A.
Nur bei PROFIdrive-Antrieben verfügbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_DIST_TORQUE</name>
<brief>Störmoment</brief>
<description>Die Variable $VA_DIST_TORQUE[&lt;Achse&gt;] liefert das normierte Störmoment (Störmoment/max. Motormoment) = Ausgangssignal des Störbeobachters im Antrieb.
Nur bei PROFIdrive-Antrieben mit Telegramm 203 verfügbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_VALVELIFT</name>
<brief>Hydraulik-Ventilisthub</brief>
<description>Die Variable $VA_VALVELIFT[&lt;Achse&gt;] liefert den Ventilisthub in mm.
(nur bei Hydraulik)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_PRESSURE_A</name>
<brief>Druck auf A-Seite des Hydraulik-Zylinders</brief>
<description>Die Variable $VA_PRESSURE_A[&lt;Achse&gt;] liefert den Druck auf A-Seite des Zylinders in bar.
(nur bei Hydraulik)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_PRESSURE_B</name>
<brief>Druck auf B-Seite des Hydraulik-Zylinders</brief>
<description>Die Variable $VA_PRESSURE_B[&lt;Achse&gt;] liefert den Druck auf B-Seite des Zylinders in bar.
(nur bei Hydraulik)
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_DP_ACT_TEL</name>
<brief>PROFIBUS/PROFINET-Ist-Telegramm von Antrieb an NC</brief>
<description>$VA_DP_ACT_TEL[b,a]
b: Wort-Index (16-Bit-Zugriff) im PROFIBUS/PROFINET-Telegramm
a: Maschinenachse
Istwert-Telegramm-Inhalte - nur bei PROFIBUS/PROFINET verfügbar.
Details vgl. Telegramm-Projektierung in PROFIdrive bzw. Antriebs-Dokumentation
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_STAT</name>
<brief>Achsstatus</brief>
<description>Die axiale Variable $AA_STAT[&lt;Achse&gt;] ermittelt den Achsstatus. Der Status "Genauhalt Fein" vom Servo-Zustand abgeleitet. Siehe auch $AA_INPOS_STAT[&lt;Achse&gt;]. Folgende Werte sind möglich:
0: Kein Achsstatus verfügbar
1: Verfahrbewegung steht an
2: Achse hat Ipo-Ende erreicht
3: Achse in Position (Genauhalt Grob)
4: Achse in Position (Genauhalt Fein)

Hinweis:
Bei der Positionsvorgabe für eine Achse/Spindel kann die Variable zum Zeitpunkt des Satzwechsels noch die Stati Genauhalt grob/fein liefern obwohl die Achse/Spindel mit der Verfahrbewegung beginnt.

Abhilfe: $AC_TIMEC zusätzlich abfragen.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_SNGLAX_STAT</name>
<brief>Status der  Einzelachse</brief>
<description>Achsstatus:
0: Achse ist keine Einzelachse
1: Einzelachse in Reset
2: Einzelachse ist beendet
3: Einzelachse ist unterbrochen
4: Einzelachse ist aktiv
5: Einzelachse Alarm steht an
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_REF</name>
<brief>Achse ist referenziert</brief>
<description>Achsstatus:
0: Achse ist nicht referenziert
1: Achse ist referenziert
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_TYP</name>
<brief>Achstyp</brief>
<description>Achstyp:
0: Achse in anderem Kanal
1: Programmachse
2: neutrale Achse
3: PLC-Achse
4: Pendelachse
5: neutrale Achse, die aktuell eine JOG- oder Referenzpunkt-Bewegung ausführt
6: Leitwertgekoppelte Folgeachse
7: Mitschleppen Folgeachse, aktiviert in einer Synchronaktion
8: Kommandoachse
9: CompileCyclen-Achse
10: Gekoppelte Slave-Achse (Master-Slave Funktion.)
11: Programmachse, die aktuell eine JOG- oder Referenzpunkt-Bewegung ausführt
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_MASL_STAT</name>
<brief>Kopplungszustand Master-Slave</brief>
<description>Der aktuelle Zustand einer Master-Slave Kopplung.
=0: Achse ist keine Slave-Achse bzw. keine Kopplung aktiv.
&gt;0: Kopplung aktiv, es wird die zugehörige Maschinenachsnummer der Master-Achse geliefert.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_SEARCH_MASLC</name>
<brief>Master-Slave Kopplungszustand geändert</brief>
<description>Der aktuelle Zustand einer Master-Slave Kopplung wurde im Satzsuchlauf verändert.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_SEARCH_MASLD</name>
<brief>Master-Slave Positionsversatz</brief>
<description>Im Satzsuchlauf beim Schließen der Kopplung ermittelter Positionsversatz zwischen der Master- und der Slave-Achse.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_FXS</name>
<brief>Status Sollzustand "Fahren auf Festanschlag"</brief>
<description>Status Sollzustand "Fahren auf Festanschlag"
0: Achse nicht im Anschlag
1: Anschlag wurde erfolgreich angefahren
2: Anfahren des Festanschlags fehlgeschlagen
3: Anwahl Fahren auf Festanschlag aktiv
4: Anschlag wurde erkannt
5: Abwahl Fahren auf Festanschlag aktiv
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VA_FXS</name>
<brief>Status Istzustand "Fahren auf Festanschlag"</brief>
<description>Status Istzustand "Fahren auf Festanschlag"
0: Achse nicht im Anschlag
1: Anschlag wurde erfolgreich angefahren
2: Anfahren des Festanschlags fehlgeschlagen
3: Anwahl Fahren auf Festanschlag aktiv
4: Anschlag wurde erkannt
5: Abwahl Fahren auf Festanschlag aktiv
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VA_FXS_INFO</name>
<brief>Zusatzinformation bei "Fahren auf Festanschlag"</brief>
<description>Zusatzinformation bei "Fahren auf Festanschlag", wenn $VA_FXS[]=2
0: keine Zusatzinformation vorhanden
1: keine Anfahrbewegung programmiert
2: programmierte Endposition erreicht, Bewegung beendet
3: Abbruch durch durch NC-RESET (Tasten-Reset)
4: Festanschlagsfenster verlassen
5: Momentenreduzierung wurde vom Antrieb verweigert
6: PLC hat Freigaben zurückgenommen
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VA_TORQUE_AT_LIMIT</name>
<brief>Status "Momentengrenze erreicht"</brief>
<description>Status "Momentengrenze erreicht"
0: Momentengrenze noch nicht erreicht
1: Momentengrenze erreicht
In digitalen Systemen wird vom Antrieb der Status geliefert, ob die programmierte Momentengrenze   erreicht ist.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_FOC</name>
<brief>Status Sollzustand "ForceControl"</brief>
<description>Die axiale Variable $AA_FOC[&lt;Achse&gt;] liefert den Sollzustand "ForceControl"
0: ForceControl nicht aktiv
1: ForceControl modal aktiv
2: ForceControl satzbezogen aktiv
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VA_FOC</name>
<brief>Status Istzustand "ForceControl"</brief>
<description>Die axiale Variable $VA_FOC[&lt;Achse&gt;] liefert den Istzustand "ForceControl"
0: ForceControl nicht aktiv
1: ForceControl modal aktiv
2: ForceControl satzbezogen aktiv
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_COUP_ACT</name>
<brief>Kopplungstyp einer Folgeachse/-spindel</brief>
<description>$AA_COUP_ACT[C]
C: Folgeachse C  oder  S2: Folgespindel 2
Für eine Achse/Spindel kann ermittelt werden ob diese von einer Kopplung verwendet wird. Bei aktiver Kopplung wird der Kopplungstyp zurückgegeben. Die Systemvariable muss für die Folgeachse/-spindel ausgelesen werden.

Werte:
0: Achse/Spindel hat keine Kopplung an eine Leitspindel/Leitachse
1,2,3:  Achse wird tangential nachgeführt (TANG)
    4:  Synchronspindelkopplung (COUP)
    8:  Achse wird mitgeschleppt (TRAIL)
16:     Folgeachse der Leitwertkopplung (LEAD)
32:     Folgeachse beim elektronischen Getriebe (ELG)
64:     Achse ist in einem Gantry-Verband aktiv.
128,256,384: Achse wird tangential nachgeführt (TANG mit Optimierung)
512:    Folgeachse der generischen Kopplung (CP)

Ist die Achse/Spindel eine Folgeachse/-spindel von mehreren Kopplungen, dann wird als Wert die Summe zurückgegeben.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_EG_SYNFA</name>
<brief>Synchronposition der Folgeachse</brief>
<description>$AA_EG_SYNFA[a]
a: Folgeachse
Synchronposition der Folgeachse
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$P_EG_BC</name>
<brief>Satzwechselkriterium bei aktiver Kopplung</brief>
<description>Die Variable $P_EG_BC[&lt;Achse&gt;] liefert das Satzwechselkriterium für EGONSYN, EGON, WAITC.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_EG_NUM_LA</name>
<brief>Anzahl der definierten Leitachsen</brief>
<description>Die axiale Variable $AA_EG_NUM_LA[&lt;Folgeachse&gt;] liefert die Anzahl der mit EGDEF spezifizierten Leitachsen.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_EG_SYNCDIFF</name>
<brief>Synchronlaufdifferenz</brief>
<description>Die axiale Variable $VA_EG_SYNCDIFF[&lt;Folgeachse&gt;] liefert die Synchronlaufdifferenz.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_EG_SYNCDIFF_S</name>
<brief>Synchronlaufdifferenz mit Vorzeichen</brief>
<description>Die axiale Variable $VA_EG_SYNCDIFF_S[&lt;Folgeachse&gt;] liefert die Synchronlaufdifferenz mit Vorzeichen.
</description>
</parameter>

<parameter type="AXIS" dim="2">
<name>$AA_EG_AX</name>
<brief>Bezeichner der Leitachse</brief>
<description>$AA_EG_AX[n, &lt;Achse&gt;]
Für die Folgeachse/-spindel &lt;Achse&gt; wird ein Achsbezeichner der n-ten aktiven Leitachse/Spindel (Zählung beginnt bei 0) zurückgegeben.
Handelt es sich bei der Leitachse um eine Geometrieachse, wird der Geometrieachsbezeichner zurückgegeben, andernfalls der Kanalachsbezeichner.
In folgenden Fällen wird NO_AXIS zurückgegeben:
   -  die angegebene Kopplung ist nicht aktiv
   -  n &gt;= $AA_EG_NUM_LA[&lt;Achse&gt;] (= Anzahl aktiver Leitachsen der Folgeachse)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_LEAD_SP</name>
<brief>Simulierte Leitwert - Position</brief>
<description>$AA_LEAD_SP[LW]
simulierte Leitwert - Position
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_LEAD_SV</name>
<brief>Simulierte Leitwert - Geschwindigkeit</brief>
<description>$AA_LEAD_SV[LW]
simulierte Leitwert - Geschwindigkeit
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_LEAD_P_TURN</name>
<brief>Modulokorrektur des Leitwertes</brief>
<description>$AA_LEAD_P_TURN[LW]
aktueller Leitwert - Positionsanteil, der durch Moduloreduktion verlorengeht.
Die tatsächliche Leitwert-Position (mit der die Steuerung intern rechnet) ist $AA_LEAD_P[LW] + $AA_LEAD_P_TURN[LW]
wenn LW eine Moduloachse ist, ist $AA_LEAD_P_TURN ein ganzzahliges Vielfaches von $MA_MODULO_RANGE.
wenn LW keine Moduloachse ist, ist $AA_LEAD_P_TURN stets 0.

Beispiel_1:
$MA_MODULO_RANGE[LW]=360
$AA_LEAD_P[LW] = 290
$AA_LEAD_P_TURN[LW] = 720
Die tatsächliche Leitwert-Position (mit der die Steuerung intern rechnet) ist 1010.

Beispiel_2:
$MA_MODULO_RANGE[LW]=360
$AA_LEAD_P[LW] = 290
$AA_LEAD_P_TURN[LW] = -360
Die tatsächliche Leitwert-Position (mit der die Steuerung intern rechnet) ist -70.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_LEAD_P</name>
<brief>Aktuelle Leitwert - Position</brief>
<description>$AA_LEAD_P[LW]
aktuelle Leitwert - Position (moduloreduziert)
Wenn LW eine Moduloachse ist, gilt stets
0 &lt;= $AA_LEAD_P[LW] &lt;= $MA_MODULO_RANGE[LW]
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_LEAD_V</name>
<brief>Aktuelle Leitwert - Geschwindigkeit</brief>
<description>$AA_LEAD_V[LW]
aktuelle Leitwert - Geschwindigkeit
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_SYNC</name>
<brief>Kopplungszustand der Folgeachse</brief>
<description>$AA_SYNC[&lt;Folgeachse&gt;]
Kopplungszustand der Folgeachse
0 = &gt; keine Synchronität
1 = &gt; Synchronlauf Grob
2 = &gt; Synchronlauf Fein
3 = &gt; Synchronlauf Grob und Fein
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_IN_SYNC</name>
<brief>Synchronisationszustand der Folgeachse</brief>
<description>$AA_IN_SYNC[&lt;Folgeachse&gt;]
Synchronisationszustand der Folgeachse bei Leitwertkopplung, ELG und Generischer Kopplung 1 = &gt; Synchronisation läuft, d.h. Folgeachse wird aussynchronisiert
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_COUP_OFFS</name>
<brief>Programmierter Positionsoffset</brief>
<description>$P_COUP_OFFS[S2]
S2: Spindel 2  oder  C: Achse C
Programmierter Positionsoffset der Synchronspindel (Folgespindel) zur Leitspindel
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_COUP_OFFS</name>
<brief>Sollwertseitiger Positionsoffset</brief>
<description>$AA_COUP_OFFS[S2]
S2: Spindel 2  oder  C: Achse C
sollwertseitiger Positionsoffset der Synchronspindel (Folgespindel) zur Leitspindel
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_COUP_OFFS</name>
<brief>Istwertseitiger Positionsoffset</brief>
<description>$VA_COUP_OFFS[S2]
S2: Spindel 2   oder  C: Achse C
istwertseitiger Positionsoffset der Synchronspindel (Folgespindel) zur Leitspindel
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$VA_DPE</name>
<brief>Leistungsfreigabe Maschinenachse</brief>
<description>Die Variable $VA_DPE[&lt;Achse&gt;] liefert den Status der Leistungsfreigabe einer Maschinenachse (Status der axialen Impulsfreigabe).
Bei PROFIdrive-Antrieben mit Telegrammtyp größer 100: Der Status stammt unmittelbar aus dem Antrieb (Meldewort, Bit5)
Bei sonstigen PROFIdrive-Antrieben: Der Status wird aus weiteren Antriebs-Zustandssignalen modelliert (identisch wie $VA_SCE, vgl. dort)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_ACC</name>
<brief>aktueller axialer Beschleunigungswert</brief>
<description>Aktueller Beschleunigungswert der Achse bei Einachsinterpolation.
$AA_ACC = $MA_MAX_AX_ACCEL * progr. Beschleunigungskorrektur.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_ACC_PERCENT</name>
<brief>Aktueller Beschleunigungswert prozentual</brief>
<description>Die Variable $AA_ACC_PERCENT liefert den aktuellen Beschleunigungswert der Achse bei Einachsinterpolation in Prozent.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$PA_ACCLIMA</name>
<brief>Beschleunigungskorrektur im Vorlauf</brief>
<description>Mit ACCLIMA gesetzte Beschleunigungskorrektur im Vorlauf
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$PA_VELOLIMA</name>
<brief>Geschwindigkeitskorrektur im Vorlauf</brief>
<description>Mit VELOLIMA gesetzte Geschwindigkeitskorrektur im Vorlauf
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$PA_JERKLIMA</name>
<brief>Ruckkorrektur im Vorlauf</brief>
<description>Mit JERKLIMA gesetzte Ruckkorrektur im Vorlauf
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_ACCLIMA</name>
<brief>Beschleunigungskorrektur</brief>
<description>Mit ACCLIMA gesetzte Beschleunigungskorrektur im Hauptlauf
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_VELOLIMA</name>
<brief>Geschwindigkeitskorrektur</brief>
<description>Mit VELOLIMA gesetzte Geschwindigkeitskorrektur im Hauptlauf
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_JERKLIMA</name>
<brief>Ruckkorrektur</brief>
<description>Mit JERKLIMA gesetzte Ruckkorrektur im Hauptlauf
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_MOTEND</name>
<brief>aktuelles axiales Bewegungsendekriterium</brief>
<description>Aktuelles Bewegungsendekriterium bei Einachsinterpolation
1 = Bewegungsende bei Genauhalt FEIN
2 = Bewegungsende bei Genauhalt GROB
3 = Bewegungsende bei Interpolationsende
4 = Satzwechsel in der Bremsrampe der Achsbewegung 5 = Satzwechsel in der Bremsrampe der Achsbewegung mit Toleranzfenster bzgl. Sollwert
6 = Satzwechsel in der Bremsrampe der Achsbewegung mit Toleranzfenster bzgl. Istwert
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_SCPAR</name>
<brief>Soll-Parametersatz</brief>
<description>Aktueller Soll-Parametersatz
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AA_SCTRACE</name>
<brief>IPO-Trigger für Servo-Trace</brief>
<description>Auslösen des Servo-Trace für die Achse mit $AA_SCTRACE[&lt;Achse&gt;] = 1.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_ESR_STAT</name>
<brief>ESR-Status einer Achse</brief>
<description>Die Variable $AA_ESR_STAT[&lt;Achse&gt;] liefert den Status des "Erweiterten Stillsetzens und Rückziehens", bitcodiert:
BIT0: Generatorbetrieb ist ausgelöst
BIT1: Rückziehen   ist ausgelöst
BIT2: Erweitertes Stillsetzen ist ausgelöst
BIT3: Zwischenkreis-Unterspannung
BIT4: Generator-Minimaldrehzahl
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AA_ESR_ENABLE</name>
<brief>ESR-Freigabe</brief>
<description>$AA_ESR_ENABLE[&lt;Achse&gt;] = 1
Freigabe des "Erweiterten Stillsetzen und Rückziehens"
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AA_ESR_TRIGGER</name>
<brief>löst Einzelachs-ESR aus</brief>
<description>$AA_ESR_TRIGGER[&lt;Achse&gt;] = 1
Auslösung des "NC-geführten ESR" für PLC kontrollierte &lt;Achse&gt; (= Einzelachse)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_POLFA</name>
<brief>programmierte Rückzugsposition Einzelachse</brief>
<description>$AA_POLFA[&lt;Achse&gt;] liefert die programmierte Rückzugsposition der PLC-kontrollierten &lt;Achse&gt; (= Einzelachse)
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_POLFA_VALID</name>
<brief>Status des  Wertes von $AA_POLFA</brief>
<description>Die Variable $AA_POLFA_VALID[&lt;Achse&gt;] liefert den aktuellen Status von $AA_POLFA[&lt;Achse&gt;] einer PLC-kontrollierten &lt;Achse&gt; (= Einzelachse)

Rückgabewerte:
0: Rückzug nicht programmiert
1: Rückzug als Position programmiert
2: Rückzug als Distanz programmiert
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_ALARM_STAT</name>
<brief>Anzeige ob Alarme anstehen</brief>
<description>Anzeige ob Alarme für eine PLC kontrollierte Achse anstehen.
Die codierten zugehörigen Alarm-Reaktionen können als Quelle für das "Erweiterte Stillsetzen und Rückziehen" genutzt werden.
Das Datum ist Bit-codiert, somit sind im Bedarfsfall auch Einzelzustände maskierbar bzw. getrennt auswertbar (nicht aufgeführte Bits liefern den Wert 0)
Bit2  = 1: NOREADY (aktive Schnellbremsung + Wegnahme der Reglerfreigabe)
Bit6  = 1: STOPBYALARM (Rampenstop aller Kanal-Achsen)
Bit9  = 1: SETVDI (VDI-Nahstellensignal Alarm wird gesetzt)
Bit13 = 1: FOLLOWUPBYALARM (Nachführen)
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AN_AXCTSWA</name>
<brief>Achs-Container-Drehung</brief>
<description>Ist Achs-Container-Drehung aktiv?
Beispiel:

 EVERY $AN_AXCTSWA[n] == TRUE DO M99

Lesen:
TRUE:  eine Achs-Container-Drehung wird augenblicklich auf dem Achs-Container mit dem Achs-Containernamen n ausgeführt
FALSE: es ist keine Achs-Container-Drehung aktiv.

Als Index kann der Achscontainername oder der Achsname einer Achse im Achs-Container angegeben werden.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_AXCTAS</name>
<brief>Achs-Container aktuelle Stellung</brief>
<description>Achs-Container aktuelle Stellung:
Für den Achs-Container mit dem Achs-Container-Namen n wird die aktuelle Stellung des Achs-Containers zurückgegeben Der Wertebereich liegt von 0 bis maximale Anzahl belegter Plätze im Achs-Container - 1. Bei Grundstellung des Achs-Containers ist $AN_AXCTAS = 0 Als Index kann der Achscontainername oder der Achsname einer Achse im Achs-Container angegeben werden.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AC_AXCTSWA</name>
<brief>Kanal-Freigabe Achs-Container-Drehung</brief>
<description>Freigabe der Achs-Container-Drehung im Kanal.
TRUE: Der Kanal hat für den Achs-Container-Namen n die Achs-Container-Drehung freigegeben und diese ist noch nicht beendet.
FALSE: Die Achs-Container-Drehung ist beendet.
Als Index kann der Achscontainername oder der Achsname einer Achse im Achs-Container angegeben werden.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VA_POSCTRL_MODE</name>
<brief>Lagereglermodus</brief>
<description>Die Variable $VA_POSCTRL_MODE[X] liefert den Lagereglermodus:
0 = Lageregelung
1 = Drehzahlregelung
2 = Halten
3 = Parken
4 = Nachführen
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$VA_SCE</name>
<brief>Status Drehzahlreglerfreigabe</brief>
<description>Die Variable $VA_SCE[&lt;Achse&gt;] liefert den Status der Drehzahlreglerfreigabe
Bei SINAMICS-Antrieben mit Telegrammtyp größer 100: Der Status wird direkt aus dem Antrieb geliefert (Meldewort, Bit11)
Bei sonstigen PROFIdrive-Antrieben: Der Status wird aus weiteren Antriebs-Zustandssignalen modelliert (u.a. Zustandswort1, Bit2)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_TRAVEL_DIST</name>
<brief>Gesamtverfahrweg</brief>
<description>Gesamtverfahrweg der Achse im MKS in mm bzw. Grad.
Es wird der gesamte Verfahrweg der Achse seit dem letzten Löschen des SRAMs addiert.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_TRAVEL_TIME</name>
<brief>Gesamtverfahrzeit der Achse</brief>
<description>Gesamtverfahrzeit der Achse im MKS in Sekunden. Es wird die gesamte Zeit in der die Achse fährt seit dem letzten Löschen des SRAMs addiert.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_TRAVEL_COUNT</name>
<brief>Anzahl der Verfahrvorgänge</brief>
<description>Anzahl der Verfahrvorgänge der Achse im MKS. Die gesamte Anzahl von Verfahrvorgängen seit dem letzten Löschen des SRAMs wird gespeichert.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_TRAVEL_DIST_HS</name>
<brief>Gesamtverfahrweg bei großer Geschw.</brief>
<description>Gesamtverfahrweg der Achse im MKS in mm bzw. Grad bei großer Geschwindigkeit, d.h.mit einer Geschwindigkeit&gt;= 80% der maximalen Achsgeschwindigkeit. Dieser Wert ist im SRAM gespeichert.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_TRAVEL_TIME_HS</name>
<brief>Gesamtverfahrzeit der Achse bei großer Geschwindigkeit</brief>
<description>Gesamtverfahrzeit der Achse in Sekunden bei großer Geschwindigkeit im MKS, d.h. mit einer Geschwindigkeit&gt;= 80% der maximalen Achsgeschwindigkeit. Dieser Wert ist im SRAM gespeichert.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_TRAVEL_COUNT_HS</name>
<brief>Anz. Verfahrvorgänge bei gr. Geschw.</brief>
<description>Anzahl der Verfahrvorgänge der Achse im MKS bei großer Geschwindigkeit, d.h. mit einer Geschwindigkeit&gt;= 80% der maximalen Achsgeschwindigkeit. Dieser Wert ist im SRAM gespeichert.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_JERK_TOT</name>
<brief>Gesamtsumme des Rucks</brief>
<description>Gesamte Summe des Rucks der Achse in m/s^3. Der gesamte Ruck, der auf die Achse wirkt, wird aufsummiert und im SRAM gespeichert.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_JERK_TIME</name>
<brief>Gesamtverfahrzeit der Achse mit Ruck</brief>
<description>Gesamtverfahrzeit der Achse in Sekunden im MKS mit Ruck. Die gesamte Zeit in der die Achse mit Ruck verfahren wird, wird aufsummiert und im SRAM gespeichert.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_JERK_COUNT</name>
<brief>Anzahl der Verfahrvorgänge mit Ruck</brief>
<description>Anzahl der Verfahrvorgänge der Achse im MKS mit Ruck Dieser Wert ist im SRAM gespeichert.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AC_RPVALID</name>
<brief>Wiederanfahrposition gültig</brief>
<description>Die Variable $AC_RPVALID[&lt;Achse&gt;] liefert TRUE wenn für diese Achse eine gültige Wiederanfahrposition existiert, die mit $AC_RETPOINT[&lt;Achse&gt;]     abgefragt werden kann. Prinzipiell sind während der Bearbeitung von System- und Anwender-ASUPs gültige Wiederanfahrposition vorhanden. In folgenden Situationen ist dies jedoch nicht der Fall:
- mit dem ASUP wird bei aktiver Werkzeugradiuskorrektur ein geänderter Radius aktiv. Für Geometrieachsen liefert $AC_RPVALID dann während der ASUP-Bearbeitung FALSE. Die neu berechneten Wiederanfahrpositionen stehen erst mit den durch den REPOS-Befehl generierten Anfahrsätzen zur Verfügung.
- die Endposition der Achse wurde zuletzt durch den Hauptlauf vorgegeben (FC18, Synchronaktionen, Pendeln, Übernahme aus anderem Kanal durch Achstausch).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_SYNCDIFF</name>
<brief>Synchronlaufdifferenz istwertseitig</brief>
<description>Die Variable $VA_SYNCDIFF[&lt;Folgeachse&gt;] liefert die Synchronlaufdifferenz istwertseitig für LEAD, TRAIL, ELG u. COUP.
Die Synchronlaufdifferenz istwertseitig ist die Wegdifferenz aus der Servo-Istposition der Folgeachse/Folgespindel und einer über das Koppelgesetz aus der Servo-Istposition der Leitachse/Leitspindel berechneten Position.
$VA_SYNCDIFF[&lt;Folgeachse&gt;] = $VA_IM[&lt;Folgeachse&gt;] - K($VA_IM[LA])
K: Koppelgesetz
LA: Leitachse/Leitspindel
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_SYNCDIFF</name>
<brief>Synchronlaufdifferenz sollwertseitig</brief>
<description>Die Variable $AA_SYNCDIFF[&lt;Folgeachse&gt;] liefert die Synchronlaufdifferenz sollwertseitig für LEAD, TRAIL, ELG u. COUP.
Die Synchronlaufdifferenz sollwertseitig ist die Wegdifferenz aus der Sollposition
der Folgeachse/Folgespindel und einer über das Koppelgesetz aus der Sollposition der Leitachse/Leitspindel berechneten Position.
$AA_SYNCDIFF[&lt;Folgeachse&gt;] = $AA_IM[&lt;Folgeachse&gt;] - K($AA_IM[LA])
K: Koppelgesetz
LA: Leitachse/Leitspindel
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VA_SYNCDIFF_STAT</name>
<brief>Status Synchronlaufdifferenz istwertseitig</brief>
<description>Die Variable VA_SYNCDIFF_STAT[&lt;Folgeachse&gt;] liefert den Status der Synchronlaufdifferenz istwertseitig:
-4: reserviert
-3: kein gültiger Wert in $VA_SYNCDIFF, Tangentialsteuerung ( nicht TANG(... "P") )
-2: kein gültiger Wert in $VA_SYNCDIFF, Leitwertkopplung und simulierter LW
-1: kein gültiger Wert in $VA_SYNCDIFF
 0: kein gültiger Wert in $VA_SYNCDIFF, Kopplung nicht aktiv
 1: gültiger Wert in $VA_SYNCDIFF
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_SYNCDIFF_STAT</name>
<brief>Status Synchronlaufdiff. sollwertseitig</brief>
<description>Die Variable $AA_SYNCDIFF_STAT[&lt;Folgeachse&gt;] liefert den Status der Synchronlaufdifferenz sollwertseitig:
-4: kein gültiger Wert in $AA_SYNCDIFF, Mitschleppen aus Teileprogramm
-3: reserviert
-2: reserviert
-1: kein gültiger Wert in $AA_SYNCDIFF
 0: kein gültiger Wert in $AA_SYNCDIFF, Kopplung nicht aktiv
 1: gültiger Wert in $AA_SYNCDIFF
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_OSCILL_BREAK_POS1</name>
<brief>Pendeln Unterbrechungsposition 1</brief>
<description>$AA_OSCILL_BREAK_POS1[&lt;Achse&gt;]
Das aktuelle Anfahren der Umkehrposition 1 wird auf dieser Position beendet, bzw. das letzte Anfahren der Umkehrposition 1 wurde auf dieser Position beendet (aktuell wird Umkehrposition 2 angefahren). $AA_OSCILL_BREAK_POS1[&lt;Achse&gt;] ist ungleich von $AA_OSCILL_REVERSE_POS1[&lt;Achse&gt;], wenn die Pendelbewegung durch ein externes Signal (PLC) unterbrochen wurde.
Die Variable ist nur aus Synchronaktionen zugreifbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_OSCILL_BREAK_POS2</name>
<brief>Pendeln Unterbrechungsposition 2</brief>
<description>$AA_OSCILL_BREAK_POS2[&lt;Achse&gt;]
Das aktuelle Anfahren der Umkehrposition 2 wird auf dieser Position beendet, bzw. das letzte Anfahren der Umkehrposition 2 wurde auf dieser Position beendet (aktuell wird Umkehrposition 1 angefahren). $AA_OSCILL_BREAK_POS2[&lt;Achse&gt;] ist ungleich von $AA_OSCILL_REVERSE_POS2[&lt;Achse&gt;], wenn die Pendelbewegung durch ein externes Signal (PLC) unterbrochen wurde.
Die Variable ist nur aus Synchronaktionen zugreifbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_BCS_OFFSET</name>
<brief>Summe der Achsüberlagerungen</brief>
<description>Die axiale Variable $AA_BCS_OFFSET[&lt;Achse&gt;] ermittelt die Summe der Achsüberlagerungen für eine Achse. Die Summe besteht aus der Handrad(DRF)-Verschiebung, der überlagerten Bewegung ($AA_OFF[&lt;Achse&gt;]) und der externen Nullpunktverschiebung. Dieser Offset wird im BKS eingerechnet. Das MKS ist entsprechend dem Offset zum BKS verschoben.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_CHANNO</name>
<brief>Achse im Kanal</brief>
<description>Die Variable liefert die Kanalnummer des Kanals, in welchem die Achse aktuell interpoliert wird.
Beim Wert 0 konnte die Achse zu keinem Kanal zugeordnet werden.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_IW_CORR</name>
<brief>Aktueller WKS-Sollwert einer Achse inkl. Überlagerungsanteile</brief>
<description>Die axiale Variable $AA_IW_CORR[&lt;Achse&gt;] ermittelt den aktuellen Sollwert im Werkstückkoordinatensystem (WKS) für die entsprechende Achse. Der Sollwert entspricht dem Interpolator-Ausgangswert für den aktuellen Interpolationstakt. Dieser Wert enthält im Gegensatz zu $AA_IW die axialen Überlagerungsanteile (DRF, AA_OFF, ext. Nullpunktverschiebung, Rückzug, etc.).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_IEN_CORR</name>
<brief>Aktueller ENS-Sollwert einer Achse inkl. Überlagerungsanteile</brief>
<description>Die axiale Variable $AA_IEN_CORR[&lt;Achse&gt;] ermittelt den aktuellen Sollwert im  einstellbaren Nullpunkt-Koordinatensystem (ENS) für die entsprechende Achse. Siehe auch $AA_IW_CORR[&lt;Achse&gt;]. Der ENS-Wert enthält die axialen Überlagerungsanteile (DRF, AA_OFF, ext. Nullpunktverschiebung, etc.).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_IBN_CORR</name>
<brief>Aktueller BNS-Sollwert einer Achse inkl. Überlagerungsanteile</brief>
<description>Die axiale Variable $AA_IBN_CORR[&lt;Achse&gt;] ermittelt den aktuellen Sollwert im Basis-Nullpunkt-Koordinatensystem (BNS) für die entsprechende Achse. Siehe auch $AA_IW_CORR[&lt;Achse&gt;]. Der BNS-Wert enthält die axialen Überlagerungsanteile (DRF, $AA_OFF, ext. Nullpunktverschiebung, etc.).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_IB_CORR</name>
<brief>Aktueller BKS-Sollwert einer Achse inkl. Überlagerungsanteile</brief>
<description>Die axiale Variable $AA_IB_CORR[&lt;Achse&gt;] ermittelt den aktuellen Sollwert im Basis-Koordinatensystem (BKS) für die entsprechende Achse. Siehe auch $AA_IW_CORR[&lt;Achse&gt;]. Der BKS-Wert enthält die axialen Überlagerungsanteile (DRF, $AA_OFF, ext. Nullpunktverschiebung, etc.).
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_TYPE</name>
<brief>Achstyp</brief>
<description>Die axiale Variable $AA_TYPE[&lt;Achse&gt;] dient zum Lesen des Achstyps. Die Variable ermittelt den Achstyp kanalübergreifend.

Die Variable liefert folgende Werte:
0: Achstyp nicht ermittelbar
1: NC-Programmachse
2: neutrale Achse
3: PLC-Achse
4: Pendelachse
5: neutrale Achse, die aktuell eine JOG- oder Referenzpunkt-Bewegung ausführt
6: Leitwertgekoppelte Folgeachse
7: Mitschleppen Folgeachse, aktiviert in einer Synchronaktion
8: Kommandoachse
9: CompileCyclen-Achse
10: Gekoppelte Slave-Achse (Master-Slave Funktion.)
11: Programmachse, die aktuell eine JOG- oder Referenzpunkt-Bewegung ausführt
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTSW</name>
<brief>Weg vom Startpunkt der Bewegung im WKS</brief>
<description>Die axiale Variable $AA_DTSW[&lt;Achse&gt;] ermittelt den axialen Weg (vorzeichenbehaftet) vom Startpunkt der Bewegung im Werkstückkoordinatensystem für Positionier- und Synchronachsen. Für die Wegberechnung ist allein die programmierte Position maßgeblich. Ist die Achse eine Koppelachse, bleibt der aus der Achskopplung resultierende Positionsanteil unberücksichtigt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTSB</name>
<brief>Weg vom Startpunkt der Bewegung im BKS</brief>
<description>Die axiale Variable $AA_DTSB[&lt;Achse&gt;] ermittelt den axialen Weg (vorzeichenbehaftet) vom Startpunkt der Bewegung im Basiskoordinatensystem für Positionier- und Synchronachsen. Für die Wegberechnung ist allein die programmierte Position maßgeblich. Ist die Achse eine Koppelachse, bleibt der aus der Achskopplung resultierende Positionsanteil unberücksichtigt.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_COUP_CORR</name>
<brief>Generische Kopplung: Korrekturwert für 'Synchronlaufdifferenz nachführen'</brief>
<description>Die Variable $AA_COUP_CORR[&lt;SpindelNr&gt;] mit Spindel Sn (n: Nummer der Spindel), Bsp. S2: Spindel 2 oder C: Achse C dient zum Ausführen der Funktionalität "Synchronlaufabweichung nachführen" und liefert den Korrekturwert zum Positionsversatz bei generischen Kopplungen mit CPFRS="MCS" (oder CPSETTYPE="COUP").
Für die Dauer (MD 30455 MISC_FUNCTION_MASK, Bit 7) der Aktivierung des NC/PLC-Nahtstellensignals &lt;Synchronlauf_nachfuehren/ &gt; (Synchronlauf nachführen) für die Folgespindel bei aktiver Kopplung werden die Istwerte dieser Spindel mit den Sollwerten verglichen. Die Differenz ist der Korrekturwert, der mit der Systemvariablen $AA_COUP_CORR gelesen werden kann.
Falls der Korrekturwert bekannt ist, so kann dieser auch direkt in die Systemvariable geschrieben werden. Das NC/PLC-Nahtstellensignal &lt;Synchronlauf_nachfuehren/ &gt; (Synchronlauf nachführen) sollte in diesem Fall nicht gesetzt sein. Die Variable wirkt erst dann, wenn für die Spindel einmal eine CP-Kopplung mit CPSETTYPE="COUP" oder CPFRS="MCS" aktiviert worden ist. Ist die Achse keine projektierte Spindel, wird das Schreiben ignoriert.
Im Kopplungsmodul wird die Variable $AA_COUP_CORR berücksichtigt und bewirkt ein Nachsetzen der Sollwerte.
Beim Referenzpunktfahren und Nullmarkensynchronisation bei Spindeln wird der Korrekturwert automatisch abgelöscht. Die Systemvariable liefert dann den Wert Null zurück.
Je nach Anwendungsfall kann der Korrekturwert durch Beschreiben der Variablen mit dem Wert '0' auch zu einem früheren Zeitpunkt gelöscht werden.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_AXCHANGE_TYP</name>
<brief>Achstyp bzgl. Achstausch</brief>
<description>Die axiale Variable $AA_AXCHANGE_TYP[&lt;Achse&gt;] liefert den Achstyp bzgl. Achstausch:
0: Achse dem NC-Programm zugeordnet
1: Achse der PLC zugeordnet   oder als Kommandoachse oder Pendelachse aktiv
2: anderer Kanal hat Interpolationsrecht
3: neutrale Achse
4: neutrale Achse von der PLC kontrolliert
5: anderer Kanal hat Interpolationsrecht, Achse ist angefordert für das NC-Programm
6: anderer Kanal hat Interpolationsrecht, Achse ist angefordert als neutrale Achse
7: Achse ist PLC-Achse oder als Kommandoachse oder Pendelachse aktiv, Achse ist angefordert für das NC-Programm
8: Achse ist PLC-Achse oder als Kommandoachse oder Pendelachse aktiv, Achse ist angefordert als neutrale Achse
9: fest zugeordnete PLC Achse, im Zustand neutrale Achse
10: fest zugeordnete PLC Achse von der PLC kontrolliert, im Zustand neutrale Achse
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_AXCHANGE_STAT</name>
<brief>Achsstatus bzgl. Achstausch</brief>
<description>Die axiale Variable $AA_AXCHANGE_STAT[&lt;Achse&gt;] liefert den Achsstatus bzgl. Achstausch:
0: Achse kann getauscht werden
1: Achse ist an den Kanal gebunden, kann aber zur PLC-, Kommando- oder Pendelachse werden
2: Achse kann nicht getauscht werden
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_INPOS_STAT</name>
<brief>Status zur programmierten Position</brief>
<description>Die Variable $AA_INPOS_STAT[&lt;Achse&gt;] gibt den Status bezüglich einer programmierten Achsposition zurück. Bei Teilungs-Achsen wird die Teilungsposition verwendet. Bei Spindeln bezieht sich $AA_INPOS_STAT auf die Spindelposition von SPOS/SPOSA/M19. Im Drehzahlsteuerbetrieb M3/M4/M5/SPCOF und nach M70 wird immer der Wert 0 gelesen. $AA_INPOS_STAT bezieht sich immer auf die programmierte Position. Bei Endpositionsveränderungen während der Interpolation (Restweglöschen, NC-Stop, REPOS) kann diese nicht erreicht werden. Die Variable liefert im Stillstand dann den Wert 0. Achspositionen können durch das Teileprogramm, Synchronaktionen, FC18 oder als Indexpositionen programmiert werden.

Die Variable liefert folgende Werte:
0: Kein Status verfügbar (Achse/Spindel steht außerhalb der programmierten Position)
1: Verfahrbewegung steht an
2: Position sollwertseitig erreicht
3: Position mit 'Genauhalt Grob' erreicht
4: Position mit 'Genauhalt Fein' erreicht

Hinweis 1:
Der Status zur programmierten Position ist unabhängig von der Betriebsart (AUTOMATIK, JOG, MDA,..).
Hinweis 2:
Werden zusätzliche Positionsanteile (z.B. Kopplungen-Folgeachse, Korrekturen, Kompensationen etc.) aufgeschaltet, dann ist die programmierte Position nicht mehr identisch mit der Maschinenachsposition. Während des Zeitraumes zusätzlicher Verfahrbewegungen werden die Genauhaltsignale gelöscht und der Status kann bis auf den Wert 1 abfallen.
Hinweis 3:
Beim Anfahren einer Position kann bei kleinen Genauhaltgrenzen im Verhältnis zur Dynamik einer Achse/Spindel der Status wegen Überschwingens kurzzeitig wieder abfallen.
Hinweis 4:
An der axialen VDI-Nahtstelle werden funktionsabhängig die Signale 'Spindel in Position' und 'Teilungsachse in Position' ausgegeben.
Hinweis 5:
Bei der Ermittlung des Status für eine Bahnachse mit G643/G644/G645 kann die Variable $AA_INPOS_STAT aufgrund des Überschleifverhaltens während der Bahnbewegung auf dem Wert '1' bleiben. Abhilfe: Variable $AA_STAT verwenden (die Variable $AA_STAT prüft jedoch nicht, ob eine programmierte Position erreicht wurde).
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_ENC_ZERO_MON_ERR_CNT</name>
<brief>Fehlerzähler Nullmarkenüberwachung</brief>
<description>Inkrementelle und abstandscodierte Messsysteme:
$VA_ENC_ZERO_MON_ERR_CNT[n,&lt;Achse&gt;] enthält die aktuelle Anzahl der erkannten Nullmarken-Fehler.

Absolute Messsysteme ($MA_ENC_TYPE=4):
ab NCK.71: $VA_ENC_ZERO_MON_ERR_CNT[n,&lt;Achse&gt;] enthält die aktuelle Anzahl der erkannten Grenzwert-Überschreitungen beim Vergleich zwischen absoluter und inkrementeller Geberspur (Grenzwerte vgl. MDs $MA_ENC_ABS_ZEROMON_WARNING und $MA_ENC_ABS_ZEROMON_INITIAL)
ab NCK.64: $VA_ENC_ZERO_MON_ERR_CNT[n,&lt;Achse&gt;] enthält die aktuelle Anzahl der Abweichungen in 1/2 Grobstrichen zwischen der absoluten und der inkrementellen Geberspur.

$VA_ENC_ZERO_MON_ERR_CNT[&lt;GeberNr&gt;,&lt;Achse&gt;] wird bei PowerOn auf 0 initialisiert. Es erfolgt kein Rücksetzen bei Reset.

s.a. $MA_ENC_ZERO_MONITORING und Alarm 25020
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_ABSOLUTE_ENC_ERR_CNT</name>
<brief>Fehlerzähler bei Absolutgeber</brief>
<description>Absolute Messsysteme ($MA_ENC_TYPE=4), nur bei SIMODRIVE611D:
Dieser Zähler wird inkrementiert wenn Fehler bei der Übertragung von Absolutwerten neu erkannt wurden. Dies kann zur Beobachtung der Absolutwert-Übertragung benutzt werden.

andere Systeme/Antriebe:
Variable liefert 0.

$VA_ABSOLUTE_ENC_ERR_CNT[&lt;GeberNr&gt;,&lt;Achse&gt;] wird bei PowerOn auf 0 initialisiert. Es erfolgt kein Rücksetzen bei Reset.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_ABSOLUTE_ENC_STATE</name>
<brief>Status Absolutgeber-Schnittstelle</brief>
<description>Absolute Messsysteme ($MA_ENC_TYPE=4), nur bei SIMODRIVE611D:
Die axiale Variable $VA_ABSOLUTE_ENC_STATE[n,&lt;Achse&gt;] ermittelt den zuletzt aufgetretenen Fehlerstatus der Absolutgeber-Schnittstelle.

Dabei bedeuten die Indizes:
n: Gebernummer
&lt;Achse&gt;: Maschinenachse

Details:
Bit 0   Schnittstelle ist aktiv
Bit 1   Fehler beim Parity-Check
Bit 2   Fehlerbit Alarm
Bit 3   Fehlerbit CRC-Fehler
Bit 4   Startbit bei EnDat-Übertragung fehlt (s.a. Funktionsbeschreibung Messsystem-Überwachung)

andere Systeme/Antriebe:
Variable liefert 0.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_DIAM_STAT</name>
<brief>Status der Durchmesserprogrammierung im Vorlauf</brief>
<description>Die Systemvariable $P_DIAM_STAT[&lt;Achse&gt;] liefert den programmierten Zustand der Durchmesserprogrammierung im Kanal.

Der programmierter Status der Durchmesserprogrammierung ist bitcodiert:
BIT0 = 0: Durchmesserprogrammierung nicht aktiv
BIT0 = 1: Durchmesserprogrammierung aktiv

Hinweis: Nur bei BIT0 = 1 haben nachfolgende Bits eine auswertbare Bedeutung:
BIT1 = 0: Kanalspezifische Durchmesserprogrammierung aktiv
BIT1 = 1: Achsspezifische Durchmesserprogrammierung aktiv
BIT2 = 0: Bezugs- und Kettenmaß im Durchmesser
BIT2 = 1: Bezugsmaß im Durchmesser, Kettenmaß im Radius
BIT3 = 0: DIAMCYCOF nicht aktiv
BIT3 = 1: DIAMCYCOF aktiv
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_DIAM_STAT</name>
<brief>Status der Durchmesserprogrammierung im Hauptlauf</brief>
<description>Die Systemvariable $AA_DIAM_STAT[&lt;Achse&gt;] liefert den aktiven Hauptlauf-Zustand der Durchmesserprogrammierung im Kanal.
Der aktive Status der Durchmesserprogrammierung ist bitcodiert:
BIT0 = 0: Durchmesserprogrammierung nicht aktiv
BIT0 = 1: Durchmesserprogrammierung aktiv

Hinweis : Nur bei BIT0 = 1 haben nachfolgende Bits eine auswertbare Bedeutung:
BIT1 = 0: Kanalspezifische Durchmesserprogrammierung aktiv
BIT1 = 1: Achsspezifische Durchmesserprogrammierung aktiv
BIT2 = 0: Bezugs- und Kettenmaß im Durchmesser
BIT2 = 1: Bezugsmaß im Durchmesser, Kettenmaß im Radius
BIT3 = 0: DIAMCYCOF nicht aktiv
BIT3 = 1: DIAMCYCOF aktiv
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_SCC_STAT</name>
<brief>Status der G96/G961/G962-Zuordnung im Vorlauf</brief>
<description>Die Systemvariable $P_SCC_STAT[&lt;Achse&gt;] liefert den projektierten bzw. mittels SCC[&lt;Achse&gt;]programmierten Vorlauf-Zustand der G96/G961/G962-Zuordnung im Kanal.

Der Status der G96/G961/G962-Zuordnung ist bitcodiert:
BIT0 = 0: Achse ist nicht G96/G961/G962 zugeordnet
BIT0 = 1: Achse ist G96/G961/G962 zugeordnet
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_SCC_STAT</name>
<brief>Status der G96/G961/G962-Zuordnung im Hauptlauf</brief>
<description>Die Systemvariable $AA_SCC_STAT[&lt;Achse&gt;] liefert den projektierten bzw. mittels SCC[&lt;Achse&gt;]programmierten Hauptlauf-Zustand der G96/G961/G962-Zuordnung im Kanal.

Der Status der G96/G961/G962-Zuordnung ist bitcodiert:
BIT0 = 0: Achse ist nicht G96/G961/G962 zugeordnet
BIT0 = 1: Achse ist G96/G961/G962 zugeordnet
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_CPNACTFA</name>
<brief>Anzahl der aktiven Folgeachsen/Spindeln</brief>
<description>Die Systemvariable $AA_CPNACTFA[&lt;Achse&gt;] liefert die Anzahl der aktiven Kopplungen (Folgeachsen/Spindeln), in denen die angegebene Achse &lt;Achse&gt; als Leitachse/Spindel aktiv ist
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_CPFCMDPT</name>
<brief>Achssollposition über alle Koppelanteile</brief>
<description>Die Systemvariable $AA_CPFCMDPT[&lt;Achse&gt;] liefert den Kopplungsanteil an der Achssollposition. Dieser Anteil ist die Summe aller abhängigen Anteile an der Achsposition aller Leitachsen/Spindeln der Folgeachse/Spindel
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_CPFCMDVT</name>
<brief>Achssollgeschwindigkeit über alle Koppelanteile</brief>
<description>Die Systemvariable $AA_CPFCMDVT[&lt;Achse&gt;] liefert den Kopplungsanteil an der Achssollgeschwindigkeit. Dieser Anteil ist die Summe aller abhängigen Anteile an der Achsgeschwindigkeit aller Leitachsen/Spindeln der Folgeachse/Spindel
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_CPFREQV</name>
<brief>Erforderliche Geschwindigkeit der Kopplung</brief>
<description>Die Systemvariable $AA_CPFREQV[&lt;Achse&gt;] gibt die durch die Leitachsen/Spindeln geforderte Geschwindigkeit zurück.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_CPNDEFLA</name>
<brief>Anzahl der definierten Leitachsen</brief>
<description>Die Systemvariable $AA_CPNDEFLA[&lt;Achse&gt;] gibt die Anzahl der für die Folgeachse/Spindel &lt;Achse&gt; definierten Leitachsen/Spindeln zurück.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_CPNACTLA</name>
<brief>Anzahl der aktiven Leitachsen</brief>
<description>Die Systemvariable $AA_CPNDEFLA[&lt;Achse&gt;] gibt die Anzahl der für die Folgeachse/Spindel &lt;Achse&gt; aktiven Leitachsen/Spindeln zurück
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_CPFACCT</name>
<brief>Achssollbeschleunigung über alle Koppelanteile</brief>
<description>Die Systemvariable $AA_CPFACCT[&lt;Achse&gt;] liefert den Kopplungsanteil an der Achssollbeschleunigung. Dieser Anteil ist die Summe aller ab hängigen Anteile an der Achsbeschleunigung aller Leitachsen/Spindeln der Folgeachse/Spindel
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$AA_CPFRS</name>
<brief>Bezugssystem der Kopplung</brief>
<description>Die Systemvariable gibt das Bezugssystem der Kopplung für die Folgeachse/Spindel zurück
"BCS" = BKS, Basiskoordinatensystem
"MCS" = MKS, Maschinenkoordinatesystem
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$AA_CPFMSON</name>
<brief>Synchronisationsmodus beim Einschalten der Kopplung</brief>
<description>Die Systemvariable $AA_CPFMSON[&lt;Achse&gt;] gibt den Synchronisationsmodus bei Einschalten der Kopplung der Folgeachse/Spindel &lt;Achse&gt; zurück.
Der Synchronisationsmodus bestimmt das Synchronisationsverhalten beim Einschalten der Kopplung.
Für weitere Details siehe Dokumentation Generische Kopplung
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$AA_CPFMON</name>
<brief>Verhalten der Folgeachse beim Einschalten der Kopplung</brief>
<description>Die Systemvariable gibt das Verhalten der Folgeachse/Spindel beim Einschalten der Kopplung zurück
"STOP" - Folgeachse/Spindel wird gestoppt
"CONT" - Aktive Bewegung der Folgeachse/Spindel wird als Startbewegung übernommen
"ADD"  - Aktive Bewegung bleibt als überlagerte Bewegung erhalten
Für weitere Details siehe Dokumentation Generische Kopplung
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$AA_CPFMOF</name>
<brief>Verhalten der Folgeachse beim Ausschalten der Kopplung</brief>
<description>Die Systemvariable gibt das Verhalten der Folgeachse/Spindel beim Ausschalten der Kopplung zurück
"STOP" - Folgeachse/Spindel wird gestoppt
"CONT" - Aktive Bewegung der Folgeachse/Spindel bleibt erhalten
Für weitere Details siehe Dokumentation Generische Kopplung
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$AA_CPMRESET</name>
<brief>Zustand der Kopplung nach Reset</brief>
<description>Die Systemvariable $AA_CPMRESET[&lt;Achse&gt;] gibt für die Folgeachse/Spindel den Zustand der Kopplung nach Reset bzw. Programmende zurück
"NONE" - aktueller Zustand bleibt erhalten
"ON"   - Kopplung wird aktiviert
"OFF"  - Kopplung wird deaktiviert
"DEL"  - Kopplung wird deaktiviert und gelöscht
Für weitere Details siehe Dokumentation Generische Kopplung
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$AA_CPMSTART</name>
<brief>Zustand der Kopplung nach Programmstart</brief>
<description>Die Systemvariable $AA_CPMSTART[&lt;Achse&gt;] gibt für die Folgeachse/Spindel &lt;Achse&gt; den Zustand der Kopplung nach Programmstart zurück
"NONE" - aktueller Zustand bleibt erhalten
"ON"   - Kopplung wird aktiviert
"OFF"  - Kopplung wird deaktiviert
"DEL"  - Kopplung wird deaktiviert und gelöscht
Für weitere Details siehe Dokumentation Generische Kopplung
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$AA_CPMSTARTPRT</name>
<brief>Zustand der Kopplung nach SERUPRO Start</brief>
<description>Die Systemvariable $AA_CPMSTART[&lt;Achse&gt;] gibt für die Folgeachse/Spindel &lt;Achse&gt; den Zustand der Kopplung nach SERUPRO Start zurück
"NONE" - aktueller Zustand bleibt erhalten
"ON"   - Kopplung wird aktiviert
"OFF"  - Kopplung wird deaktiviert
"DEL"  - Kopplung wird deaktiviert und gelöscht
Für weitere Details siehe Dokumentation Generische Kopplung
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$AA_CPSETTYPE</name>
<brief>Voreingestellter Kopplungstyp</brief>
<description>Die Systemvariable $AA_CPSETTYPE[&lt;Achse&gt;] gibt für die Folgeachse/Spindel &lt;Achse&gt; den voreingestellten Kopplungstyp zurück.
Für weitere Details siehe Dokumentation Generische Kopplung
"NONE"
"TRAIL"
"LEAD"
"EG"
"COUP"
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$AA_CPBC</name>
<brief>Satzwechselkriterium</brief>
<description>Die Systemvariable $AA_CPBC[&lt;Achse&gt;] gibt das aktive Satzwechselkriterium beim Einschalten der Kopplung der Folgeachse/Spindel &lt;Achse&gt; zurück
"NONE"    - Satzwechsel erfolgt unabhängig vom Koppelzustand
"FINE"    - Satzwechsel erfolgt erst beim Erreichen des Synchronablaufs "fein"
"COARSE"  - Satzwechsel erfolgt erst beim Erreichen des Synchronablaufs "grob"
"IPOSTOP" - Satzwechsel erfolgt erst beim Erreichen des sollwertseitigen Synchronlaufs
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_CPFACT</name>
<brief>Aktive Kopplungstypen einer Folgeachse/Spindel</brief>
<description>Für die Achse/Spindel &lt;Achse&gt; werden bitcodiert die aktiven Kopplungstypen zurückgegeben
0 = Kein aktives Koppeln
Bit 0,1 = TANG
Bit 2 = 1 ('H04') COUP
Bit 3 = 1 ('H08') TRAIL
Bit 4 = 1 ('H10') LEAD
Bit 5 = 1 ('H20') EG
Bit 6 = 1 ('H40') GANTRY
Bit 7,8 = 1 (H180) TANG mit Option P
Bit 9 = 1 ('H200') CP, Generische Kopplung
</description>
</parameter>

<parameter type="AXIS" dim="2">
<name>$AA_CPDEFLA</name>
<brief>Gibt die n-te definierte Leitachse/Spindel</brief>
<description>$AA_CPDEFLA[&lt;Achse&gt;,n]
Für die Folgeachse/-spindel &lt;Achse&gt; wird ein Achsbezeichner der n-ten definierten Leitachse/Spindel (Zählung beginnt bei 1) zurückgegeben
Handelt es sich bei der Leitachse um eine Geometrieachse, wird der Geometrieachsbezeichner zurückgegeben, andernfalls der Kanalachsbezeichner.
In folgenden Fällen wird NO_AXIS zurückgegeben:
   -  die angegebene Kopplung ist nicht definiert
   -  die gefundene Leitachse/Spindel ist im Kanal nicht bekannt
   -  n == 0
   -  n &gt; $AA_CPNDEFLA[&lt;Achse&gt;] (= Anzahl definierter Leitachsen der Folgeachse)
</description>
</parameter>

<parameter type="AXIS" dim="2">
<name>$AA_CPACTLA</name>
<brief>Gibt die n-te aktive Leitachse/Spindel</brief>
<description>$AA_CPACTLA[&lt;Achse&gt;,n]
Für die Folgeachse/-spindel &lt;Achse&gt; wird ein Achsbezeichner der n-ten aktiven Leitachse/Spindel (Zählung beginnt bei 1) zurückgegeben.
Handelt es sich bei der Leitachse um eine Geometrieachse, wird der Geometrieachsbezeichner zurückgegeben, andernfalls der Kanalachsbezeichner.
In folgenden Fällen wird NO_AXIS zurückgegeben:
   -  die angegebene Kopplung ist nicht aktiv
   -  die gefundene Leitachse/Spindel ist im Kanal nicht bekannt
   -  n == 0
   -  n &gt; $AA_CPNACTLA[&lt;Achse&gt;] (= Anzahl aktiver Leitachsen der Folgeachse)
</description>
</parameter>

<parameter type="AXIS" dim="2">
<name>$AA_CPACTFA</name>
<brief>Gibt die n-te aktive Folgeachse/Spindel</brief>
<description>$AA_CPACTFA[&lt;Achse&gt;,n]
Für die Leitachse/-spindel &lt;Achse&gt; wird ein Achsbezeichner der Folgeachse/Spindel der n-ten Kopplung (Zählung beginnt bei 1) , in der die Achse &lt;Achse&gt; als Leitachse/Spindel aktiv ist, zurückgegeben.
Handelt es sich bei der Folgeachse um eine Geometrieachse, wird der Geometrieachsbezeichner zurückgegeben, andernfalls der Kanalachsbezeichner.
In folgenden Fällen wird NO_AXIS zurückgegeben:
   -  die gefundene Folgeachse/Spindel ist im Kanal nicht bekannt
   -  n == 0
   -  n &gt; $AA_CPNACTFA[&lt;Achse&gt;] (= Anzahl aktiver Kopplungen der Achse als Leitachse)
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$PA_CPFACT</name>
<brief>Kopplungstyp einer Folgeachse/-spindel</brief>
<description>$PA_CPFACT[&lt;Achse&gt;]
Für die Achse/Spindel &lt;Achse&gt; kann ermittelt werden ob diese von einer Kopplung verwendet wird. Bei aktiver Kopplung wird der Kopplungstyp zurückgegeben. Die Systemvariable muss für die Folgeachse/-spindel ausgelesen werden
Bit0, Bit1 tangentiale Nachführung aktiv, TANG
Bit2 = 1 ('H04')   Synchronspindel aktiv, COUP
Bit3 = 1 ('H08')   Mitschleppen aktiv, TRAIL
Bit4 = 1 ('H10')   Leitwertkopplung aktiv, LEAD
Bit5 = 1 ('H20')   Elektronisches Getriebe aktiv, EG
Bit6 = 1 ('H40')   Gantryverband aktiv, GANTRY
Bit7, Bit8 tangentiale Nachführung aktiv, TANG (mit Optimierung)
Bit9 = 1 ('H200')  generische Kopplung aktiv, CP
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$PA_CPFPOSSTAT</name>
<brief>Gültigkeit der Synchronposition und Stopposition</brief>
<description>$PA_CPFPOSSTAT[&lt;Achse&gt;]
Für die Achse/Spindel &lt;Achse&gt; kann bei aktiver Kopplung die Gültigkeit der Synchronposition (Bit0) und der Stopposition (Bit1) gelesen werden.
Bit0 = 1 ('H01')   Synchronposition ist gültig
Bit1 = 1 ('H02')   Stopposition ist gültig
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$PA_CPSETTYPE</name>
<brief>Voreingestellter Kopplungstyp</brief>
<description>Für die Achse/Spindel &lt;Achse&gt; wird der voreingestellte Kopplungstyp zurückgegeben.
$PA_CPSETTYPE[&lt;Achse&gt;]
"NONE"
"TRAIL"
"LEAD"
"EG"
"COUP"
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$PA_CPNACTFA</name>
<brief>Anzahl der aktiven Folgeachsen/Spindeln</brief>
<description>Für die Leitachse/-spindel &lt;Achse&gt; wird die Anzahl der aktiven Folgeachsen/-spindeln zurückgegeben.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$PA_CPNDEFLA</name>
<brief>Anzahl der definierten Leitachsen/Spindeln</brief>
<description>Für die Achse/Spindel &lt;Achse&gt; wird die Anzahl der definierten Leitachsen/Spindeln zurückgegeben.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$PA_CPNACTLA</name>
<brief>Anzahl der aktiven Leitachsen/Spindeln</brief>
<description>Für die Achse/Spindel &lt;Achse&gt; wird die Anzahl der aktiven Leitachsen/Spindeln zurückgegeben.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$PA_CPFRS</name>
<brief>Koordinatenbezug</brief>
<description>Für die Achse/Spindel &lt;Achse&gt; wird der Koordinatenbezug der definierten Achs-/Spindelkopplung zurückgegeben
"NONE" = keine Kopplung aktiv
"BCS" = BKS, Basiskoordinatensystem
"MCS" = MKS, Maschinenkoordinatensystem
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$PA_CPFMSON</name>
<brief>Synchronisationsverhalten bei Einschalten</brief>
<description>Für die Achse/Spindel &lt;Achse&gt; wird der Synchronisationsmodus beim Einschalten der Kopplung zurückgegeben.
Für weitere Details siehe Dokumentation Generische Kopplung
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$PA_CPFMON</name>
<brief>Verhalten der Folgeachse beim Einschalten der Kopplung</brief>
<description>Die Systemvariable gibt das Verhalten der Folgeachse/Spindel beim Einschalten der Kopplung zurück.
"STOP" - Folgeachse/Spindel wird gestoppt
"CONT" - Aktive Bewegung der Folgeachse/Spindel wird als Startbewegung übernommen
"ADD"     - Aktive Bewegung der Folgeachse/Spindel bleibt als überlagerte Bewegung erhalten
Für weitere Details siehe Dokumentation Generische Kopplung
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$PA_CPFMOF</name>
<brief>Verhalten der Folgeachse beim Ausschalten der Kopplung</brief>
<description>Die Systemvariable gibt das Verhalten der Folgeachse/Spindel beim Ausschalten der Kopplung zurück.
"STOP" - Folgeachse/Spindel wird gestoppt
"CONT" - Aktive Bewegung der Folgeachse/Spindel bleibt erhalten
Für weitere Details siehe Dokumentation Generische Kopplung
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$PA_CPMRESET</name>
<brief>Zustand der Kopplung nach Reset</brief>
<description>Die Systemvariable $PA_CPMRESET[&lt;Achse&gt;] gibt für die Folgeachse/Spindel den Zustand der Kopplung nach Reset bzw. Programmende zurück.
"NONE" - aktueller Zustand bleibt erhalten
"ON"   - Kopplung wird aktiviert
"OFF"  - Kopplung wird deaktiviert
"DEL"  - Kopplung wird deaktiviert und gelöscht
Für weitere Details siehe Dokumentation Generische Kopplung
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$PA_CPMSTART</name>
<brief>Zustand der Kopplung nach Programmstart</brief>
<description>Die Systemvariable $PA_CPMSTART[&lt;Achse&gt;] gibt für die Folgeachse/Spindel &lt;Achse&gt; den Zustand der Kopplung nach Programmstart zurück
"NONE" - aktueller Zustand bleibt erhalten
"ON"   - Kopplung wird aktiviert
"OFF"  - Kopplung wird deaktiviert
"DEL"  - Kopplung wird deaktiviert und gelöscht
Für weitere Details siehe Dokumentation Generische Kopplung
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$PA_CPBC</name>
<brief>Satzwechselkriterium</brief>
<description>Die Systemvariable $PA_CPBC[&lt;Achse&gt;] gibt das aktive Satzwechselkriterium beim Einschalten der Kopplung der Folgeachse/Spindel &lt;Achse&gt; zurück
"NONE"    = Satzwechsel erfolgt unabhängig vom Koppelzustand
"FINE"    = Satzwechsel erfolgt erst beim Erreichen des Synchronablaufs "fein"
"COARSE"  = Satzwechsel erfolgt erst beim Erreichen des Synchronablaufs "grob"
"IPOSTOP" = Satzwechsel erfolgt erst beim Erreichen des sollwertseitigen Synchronlaufs
</description>
</parameter>

<parameter type="AXIS" dim="2">
<name>$PA_CPDEFLA</name>
<brief>Gibt die n-te definierte Leitachse/Spindel</brief>
<description>$PA_CPDEFLA[&lt;Achse&gt;,n]
Für die Achse/Spindel &lt;Achse&gt; wird ein Achsbezeichner der n-ten definierten Leitachse/Spindel (Zählung beginnt bei 1) zurückgegeben.
Handelt es sich bei der Leitachse um eine Geometrieachse, wird der Geometrieachsbezeichner zurückgegeben, andernfalls der Kanalachsbezeichner.
In folgenden Fällen wird NO_AXIS zurückgegeben:
   -  die angegebene Kopplung ist im Kanal nicht definiert
   -  n == 0
   -  n &gt;  Anzahl definierter Leitachsen der Folgeachse
</description>
</parameter>

<parameter type="AXIS" dim="2">
<name>$PA_CPACTLA</name>
<brief>Gibt die n-te aktive Leitachse/Spindel</brief>
<description>$PA_CPACTLA[&lt;Achse&gt;,n]
Für die Folgeachse/-spindel &lt;Achse&gt; wird ein Achsbezeichner der n-ten aktiven Leitachse/Spindel (Zählung beginnt bei 1) zurückgegeben.
Handelt es sich bei der Leitachse um eine Geometrieachse, wird der Geometrieachsbezeichner zurückgegeben, andernfalls der Kanalachsbezeichner.
In folgenden Fällen wird NO_AXIS zurückgegeben:
   -  die angegebene Kopplung ist im Kanal nicht aktiv
   -  n == 0
   -  n &gt; Anzahl aktiver Leitachsen der Folgeachse
</description>
</parameter>

<parameter type="AXIS" dim="2">
<name>$PA_CPACTFA</name>
<brief>Gibt die n-te aktive Folgeachse/Spindel</brief>
<description>$PA_CPACTFA[&lt;Achse&gt;,n]
Für die Leitachse/-spindel &lt;Achse&gt; wird ein Achsbezeichner der Folgeachse/Spindel der n-ten Kopplung (Zählung beginnt bei 1), in der die Achse &lt;Achse&gt; als Leitachse/Spindel aktiv ist, zurückgegeben.
Handelt es sich bei der Folgeachse um eine Geometrieachse, wird der Geometrieachsbezeichner zurückgegeben, andernfalls der Kanalachsbezeichner.
In folgenden Fällen wird NO_AXIS zurückgegeben:
   -  n == 0
   -  n &gt;    Anzahl aktiver Kopplungen der Achse im Kanal als Leitachse
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_DEPAXO</name>
<brief>Abhängigkeit zu anderen Achsen</brief>
<description>Die Variable $AA_DEPAXO[&lt;Achse&gt;] liefert für die angegebene Achse AX einen Achsschlüssel zurück, in der alle Maschinenachsen enthalten sind, die mit der angegebenen Achse in einer mechanischen Abhängigkeit stehen.

Eine Abhängigkeit wird erzeugt durch:
      aktive Koppelmodule, die Folgeachse ist abhängig von der Leitachse
      aktive Transformationen, Ausgangsachsen der Transformation sind abhängig
      von den Eingangsachsen der Transformation
      geschlossene Gantryverbände, Die Slave-Achsen sind von der
      Master-Achse abhängig
      Im Achschlüssel wird die gegebene Achse selbst mit geliefert
Der Achsschlüssel verweist dabei, wie das Maschinendatum $MC_AXCONF_MACHAX_USED, nicht direkt auf die Maschinenachsen sondern auf das logische NCK Maschinenachsabbild ($MN_AXCONF_LOGIC_MACHAX_TAB).
      Bit 0 = 0  zur logischen  Maschinenachse AX1 besteht keine Abhängigkeit
      Bit 0 = 1  zur logischen Maschinenachse AX1 besteht eine Abhängigkeit
      Bit 1 = 0  zur logischen Maschinenachse AX2 besteht keine Abhängigkeit
      Bit 1 = 1  zur logischen  Maschinenachse AX2 besteht eine Abhängigkeit
      Usw.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_FIX_POINT_SELECTED</name>
<brief>ausgewählter Festpunkt</brief>
<description>$AA_FIX_POINT_SELECTED[&lt;Achse&gt;]
=0: kein Festpunkt ausgewählt
&gt;0: Nummer des ausgewählten Festpunkts
Über das NC/PLC-Nahtstellensignal &lt;Aktiviere_Festpunktfahren_inJOG/ &gt; (Aktiviere Festpunktfahren in JOG) wird in der Betriebsart JOG das Festpunktfahren aktiviert.
Dabei geben die Bits 0-2 die Nummer des anzufahrenden Festpunkts an.
Die Aktivierung wird über das NC/PLC-Nahtstellensignal &lt;Festpunktfahren_in_JOG_aktiv/ &gt; (Festpunktfahren in JOG aktiv) bestätigt. Die Bits geben die Nummer des Festpunkts an, der angefahren wird.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_ON_FIX_POINT</name>
<brief>Nummer des Festpunkts auf dem die Achse aktuell steht</brief>
<description>$AA_ON_FIX_POINT[&lt;Achse&gt;]
=0: Achse steht auf keinem Festpunkt
&gt;0: Nummer des Festpunkts auf dem die Achse aktuell steht (die Festpunktposition ist die aktuelle Position).
Dies ist unabhängig von der Art wie diese Position erreicht wurde.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_ENC1_COMP_VAL</name>
<brief>EEC Kompensationswert Geber 1</brief>
<description>Die axiale Variable $VA_ENC1_COMP_VAL[&lt;Achse&gt;] ermittelt den aktuellen Kompensationswert der Messsystemfehlerkompensation (Encoder 1) im Maschinenkoordinatensystem (MKS).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_ENC2_COMP_VAL</name>
<brief>EEC Kompensationswert Geber 2</brief>
<description>Die axiale Variable $VA_ENC2_COMP_VAL[&lt;Achse&gt;] ermittelt den aktuellen Kompensationswert der Messsystemfehlerkompensation (Encoder 2) im Maschinenkoordinatensystem (MKS).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_CEC_COMP_VAL</name>
<brief>CEC Kompensationswert</brief>
<description>Die axiale Variable $VA_CEC_COMP_VAL[&lt;Achse&gt;] ermittelt den aktuellen Kompensationswert der Durchhangkompensation im Maschinenkoordinatensystem (MKS).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_TEMP_COMP_VAL</name>
<brief>TEMP Kompensationswert</brief>
<description>Die axiale Variable $VA_TEMP_COMP_VAL[&lt;Achse&gt;] ermittelt den aktuellen Kompensationswert der Temperaturkompensation im Maschinenkoordinatensystem (MKS).
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTBREB</name>
<brief>Gesamtbremsweg im BKS</brief>
<description>$AA_DTBREB[&lt;Achse&gt;]
Gesamtbremsweg der Achse &lt;Achse&gt; im BKS. Der Wert ist der geschätzte Bremsweg der Achse bis zum Stillstand.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTBREB_CMD</name>
<brief>Kommandoanteil am Gesamtbremsweg im BKS</brief>
<description>$AA_DTBREB_CMD[&lt;Achse&gt;]
Kommandoanteil am Gesamtbremsweg der Achse &lt;Achse&gt; im BKS. Der Wert ist der geschätzte Bremsweg der Achse bis zum Stillstand
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTBREB_CORR</name>
<brief>Korrekturanteil am Gesamtbremsweg im BKS</brief>
<description>$AA_DTBREB_CORR[&lt;Achse&gt;]
Korrekturanteil am Gesamtbremsweg der Achse &lt;Achse&gt; im BKS. Der Wert ist der geschätzte Bremsweg der Achse bis zum Stillstand
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTBREB_DEP</name>
<brief>Kopplungsanteil am Gesamtbremsweg im BKS</brief>
<description>$AA_DTBREB_DEP[&lt;Achse&gt;]
Kopplungsanteil am Gesamtbremsweg der Achse &lt;Achse&gt; im BKS. Der Wert ist der geschätzte Bremsweg der Achse bis zum Stillstand
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTBREM</name>
<brief>Gesamtbremsweg im MKS</brief>
<description>$AA_DTBREM[&lt;Achse&gt;]
Gesamtbremsweg der Achse &lt;Achse&gt; im MKS. Der Wert ist der geschätzte Bremsweg der Achse bis zum Stillstand
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTBREM_CMD</name>
<brief>Kommandoanteil am Gesamtbremsweg im MKS</brief>
<description>$AA_DTBREM_CMD[&lt;Achse&gt;]
Kommandoanteil am Gesamtbremsweg der Achse &lt;Achse&gt; im MKS. Der Wert ist der geschätzte Bremsweg der Achse bis zum Stillstand
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTBREM_CORR</name>
<brief>Korrekturanteil am Gesamtbremsweg im MKS</brief>
<description>$AA_DTBREM_CORR[&lt;Achse&gt;]
Korrekturanteil am Gesamtbremsweg der Achse &lt;Achse&gt; im MKS. Der Wert ist der geschätzte Bremsweg der Achse bis zum Stillstand
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_DTBREM_DEP</name>
<brief>Kopplungsanteil am Gesamtbremsweg im MKS</brief>
<description>$AA_DTBREM_DEP[&lt;Achse&gt;]
Kopplungsanteil am Gesamtbremsweg der Achse &lt;Achse&gt; im MKS. Der Wert ist der geschätzte Bremsweg der Achse bis zum Stillstand
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_BRAKE_CONDB</name>
<brief>kontextsensitive Bedingungen zum Interpolator-Stopp im BKS</brief>
<description>Die axiale Variable $AA_BRAKE_CONDB[&lt;Achse&gt;] zeigt die für die Achse/Spindel anstehenden Bremsanforderungen (Bedingungen) zum Interpolator-Stopp an. Eine Bremsanforderung besteht aus einer Kollisionsrichtung, die sich auf eine Koordinatenachse im BKS bezieht, und einer Bremspriorität, die sich auf die Bearbeitungsstufe bezieht. Falls die Achse/Spindel aufgrund dieser Anforderung(en) eine aktuelle Bremsanforderung erhält, wird Bit 0 in $AA_BRAKE_STATE[X] (im nächsten IPO-Takt) gesetzt.

In den Bits 0 bis 3 wird die höchste Bremspriorität in positiver Richtung angezeigt:
0x0: keine anstehende Bremsanforderung
0x1: Priorität 1 umfasst alle Positioniervorgänge (G0, POS, SPOS)
0x2: Priorität 2 umfasst DYNNORM und alle Bewegungen der Priorität 1
0x3: Priorität 3 umfasst DYNPOS und alle Bewegungen der Prioritäten 1 bis 2
0x4: Priorität 4 umfasst DYNROUGH und alle Bewegungen der Prioritäten 1 bis 3
0x5: Priorität 5 umfasst DYNSEMIFIN und alle Bewegungen der Prioritäten 1 bis 4
0x6: Priorität 6 umfasst alle Bewegungen (einschließlich DYNFINISH). Die Anforderung kann auch durch einen CP-SW-Limit-Stop ausgelösst worden sein.
0x7: Priorität 7 umfasst alle Bewegungen. Die Anforderung wurde durch das NC/PLC-Nahtstellensignal &lt;VorschubHalt-SpindelHalt/ &gt; (Vorschub halt/Spindel halt) ausgelöst. Es wird unabhängig von der Bewegungsrichtung immer gebremst.
0xD: Priorität 13 umfasst alle Bewegungen. Es wird axial mit einer Notaus-Bremsrampe gebremst.

In den Bits 16 bis 19 wird die höchste Bremspriorität in negativer Richtung angezeigt:
0x0 bis 0xD: gleiche Bedeutung wie bei den Bits 0 bis 3

Alle anderen Bits sind reserviert und werden nicht gesetzt.

Lässt man sich den Wert der Variablen hexadezimal anzeigen, zeigt die fünfte Ziffer von rechts die Bremspriorität in negativer Richtung und die rechte Ziffer diejenige in positiver Richtung an.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_BRAKE_STATE</name>
<brief>aktueller Bremsstatus</brief>
<description>$AA_BRAKE_STATE[X]
gibt für die Achse/Spindel zurück, ob aufgrund der Anforderung durch $AA_BRAKE_CONDB[X] bzw. eines NC/PLC-Nahtstellensignal &lt;VorschubHalt-SpindelHalt/ &gt; (Vorschub halt/Spindel halt) eine Bremsung eingeleitet wurde.
Bit 0 = 1: Aktuelle Bremsanforderung aufgrund eines Stopps durch eine OEM Anwendung bzw. CP-SW-Limit-Stop bzw. eines NC/PLC-Nahtstellensignals &lt;VorschubHalt-SpindelHalt/ &gt; (Vorschub halt/Spindel halt) ($AA_BRAKE_CONDB[X])
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_BRAKE_CONDM</name>
<brief>kontextsensitive Bedingungen zum Interpolator-Stopp im MKS</brief>
<description>Die axiale Variable $AA_BRAKE_CONDM[&lt;Achse&gt;] zeigt die für die Achse/Spindel anstehenden Bremsanforderungen (Bedingungen) zum Interpolator-Stopp an. Eine Bremsanforderung besteht aus einer Kollisionsrichtung, die sich auf eine Koordinatenachse im MKS bezieht, und einer Bremspriorität, die sich auf die Bearbeitungsstufe bezieht.

In den Bits 0 bis 3 wird die höchste Bremspriorität in positiver Richtung angezeigt:
0x0: keine anstehende Bremsanforderung
0x1: Priorität 1 umfasst alle Positioniervorgänge (G0, POS, SPOS)
0x2: Priorität 2 umfasst DYNNORM und alle Bewegungen der Priorität 1
0x3: Priorität 3 umfasst DYNPOS und alle Bewegungen der Prioritäten 1 bis 2
0x4: Priorität 4 umfasst DYNROUGH und alle Bewegungen der Prioritäten 1 bis 3
0x5: Priorität 5 umfasst DYNSEMIFIN und alle Bewegungen der Prioritäten 1 bis 4
0x6: Priorität 6 umfasst alle Bewegungen (einschließlich DYNFINISH). Die Anforderung kann auch durch einen CP-SW-Limit-Stop ausgelöst worden sein.
0x7: Priorität 7 umfasst alle Bewegungen. Die Anforderung wurde durch das NC/PLC-Nahtstellensignal &lt;VorschubHalt-SpindelHalt/ &gt; (Vorschub halt/Spindel halt) ausgelöst. Es wird unabhängig von der Bewegungsrichtung immer gebremst.
0xD: Priorität 13 umfasst alle Bewegungen. Es wird axial mit einer Notaus-Bremsrampe gebremst.

In den Bits 16 bis 19 wird die höchste Bremspriorität in negativer Richtung angezeigt:
0x0 bis 0xD: gleiche Bedeutung wie bei den Bits 0 bis 3

Alle anderen Bits sind reserviert und werden nicht gesetzt.

Lässt man sich den Wert der Variablen hexadezimal anzeigen, zeigt die fünfte Ziffer von rechts die Bremspriorität in negativer Richtung und die rechte Ziffer diejenige in positiver Richtung an.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AA_JOG_POS_SELECTED</name>
<brief>Joggen auf Position</brief>
<description>$AA_JOG_POS_SELECTED[&lt;Achse&gt;]
FALSE: joggen auf Position nicht aktiv
TRUE: joggen auf Position aktiv
Über das NC/PLC-Nahtstellensignal &lt;Aktiviere_Anfahren_einer_Position_inJOG/ &gt; (Aktiviere Anfahren einer Position in JOG) wird in der
Betriebsart JOG das Joggen auf Position aktiviert.
Die Aktivierung wird über das NC/PLC-Nahtstellensignal &lt;Anfahren_einer_Position_inJOGaktiv/ &gt; (Anfahren einer Position in JOG aktiv) bestätigt.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AA_JOG_POS_ACT</name>
<brief>Joggen auf Position: Position erreicht</brief>
<description>Die Variable $AA_JOG_POS_ACT[&lt;Achse&gt;] hat folgende Werte:
FALSE:      Position bei Joggen auf Position ist nicht erreicht.
TRUE:       Position, bei Joggen auf Position, ist erreicht
Über das PLC-Signal &lt;Aktiviere_Anfahren_einer_Position_inJOG/ &gt; (Aktiviere Anfahren einer Position in JOG) wird in der Betriebsart JOG das Joggen auf Position aktiviert.
Die Aktivierung wird über das NC/PLC-Nahtstellensignal &lt;Anfahren_einer_Position_inJOGaktiv/ &gt; DB31, ... DBX75.6 und die Systemvariable $AA_JOG_POS_SELECTED[&lt;Achse&gt;] bestätigt.
Das Erreichen der Position wird über das NC/PLC-Nahtstellensignal &lt;InJOGanzufahrendePosition_ist_erreicht/ &gt; (In JOG anzufahrende Position ist erreicht) gemeldet.
Die erreichte Position wurde über das Settingdatum $SA_JOG_POSITION[&lt;Achse&gt;] vorgegeben.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_PCS_REL</name>
<brief>Aktueller relativer WKS-Sollwert einer Achse</brief>
<description>Die axiale Variable $AA_PCS_REL[&lt;Achse&gt;] ermittelt den aktuellen relativen Sollwert im Werkstückkoordinatensystem (WKS) für die entsprechende Achse. Der Sollwert entspricht $AA_IW[&lt;Achse&gt;], der durch das aktuelle relative Systemframe $P_RELFRAME transformiert wird. Die axialen Positionen liegen im relativen WKS-Koordinatensystem.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_ACS_REL</name>
<brief>Aktueller relativer ENS-Sollwert einer Achse</brief>
<description>Die axiale Variable $AA_ACS_REL[&lt;Achse&gt;] ermittelt den aktuellen relativen Sollwert im einstellbaren Nullpunkt-Koordinatensystem (ENS) für die entsprechende Achse. Der Sollwert entspricht $AA_IEN[&lt;Achse&gt;], der durch das aktuelle relative Systemframe $P_RELFRAME transformiert wird. Die axialen Positionen liegen im relativen ENS-Koordinatensystem.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AA_EG_TYPE</name>
<brief>Kopplungsart</brief>
<description>$AA_EG_TYPE[a,b]
a: Folgeachse
b: Leitachse
Art der Kopplung für die Leitachse b
-1: keine Kopplung definiert
0: Istwertkopplung
1: Sollwertkopplung
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_EG_NUMERA</name>
<brief>Zähler des Koppelfaktors</brief>
<description>$AA_EG_NUMERA[a,b]
a: Folgeachse
b: Leitachse
Zähler des Koppelfaktors für die Leitachse b
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_EG_DENOM</name>
<brief>Nenner des  Koppelfaktors</brief>
<description>$AA_EG_DENOM[a,b]
a: Folgeachse
b: Leitachse
Nenner des Koppelfaktors für die Leitachse b
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_EG_SYN</name>
<brief>Synchronposition der Leitachse</brief>
<description>$AA_EG_SYN[a,b]
a: Folgeachse
b: Leitachse
Synchronposition der Leitachse b
</description>
</parameter>

<parameter type="BOOL" dim="2">
<name>$AA_EG_ACTIVE</name>
<brief>Kopplung für die Leitachse ist aktiv</brief>
<description>$AA_EG_ACTIVE[a,b]
a: Folgeachse
b: Leitachse
Kopplung für die Leitachse b ist aktiv, d.h. eingeschaltet
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLCMDP</name>
<brief>Achspositionsanteil der Leitachse/Spindel</brief>
<description>$AA_CPLCMDP[&lt;Folgeachse&gt;,&lt;Leitachse&gt;]
Positionsanteil an der Achsposition der Folgeachse/Spindel &lt;Folgeachse&gt; verursacht durch eine aktive Kopplung zur der Leitachse/Spindel &lt;Leitachse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLCMDV</name>
<brief>Geschwindigkeitsanteil der Leitachse/Spindel</brief>
<description>$AA_CPLCMDV[&lt;Folgeachse&gt;,&lt;Leitachse&gt;]
Geschwindigkeitsanteil an der Gesamtgeschwindigkeit der Folgeachse/Spindel &lt;Folgeachse&gt; verursacht durch eine aktive Kopplung zur der Leitachse/Spindel &lt;Leitachse&gt;
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AA_CPLTYPE</name>
<brief>Kopplungsart</brief>
<description>$AA_CPLTYPE[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Für die Achse/Spindel der Folgeachse/Spindel &lt;Folgeachse&gt; zur Leitachse/Spindel &lt;Leitachse&gt; werden bitcodiert die aktiven Kopplungstypen zurückgegeben
Bit 0,1 = TANG
Bit 2 = 1 ('H04') COUP
Bit 3 = 1 ('H08') TRAIL
Bit 4 = 1 ('H10') LEAD
Bit 5 = 1 ('H20') EG
Bit 6 = 1 ('H40') GANTRY
Bit 7,8 = 1 (H180) TANG mit Option P
Bit 9 = 1 ('H200') CP, Generische Kopplung
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLACC</name>
<brief>Beschleunigungsanteil der Leitachse/Spindel</brief>
<description>$AA_CPLACC[&lt;Folgeachse&gt;,&lt;Leitachse&gt;]
Beschleunigungsanteil der Folgeachse/Spindel &lt;Folgeachse&gt; verursacht durch eine aktive Kopplung zur Leitachse/Spindel &lt;Leitachse&gt;
</description>
</parameter>

<parameter type="STRING" dim="3">
<name>$AA_CPLSTATE</name>
<brief>Zustand der Kopplung</brief>
<description>$AA_CPLSTATE[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Zustand der Kopplung zwischen der Folgeachse/Spindel &lt;Folgeachse&gt; und der Leitachse/Spindel &lt;Leitachse&gt;
"NONE" = keine Kopplung definiert
"DEF" = Kopplung definiert, nicht aktiviert
"ON" = Kopplung ist aktiv
"OFF" = Kopplung deaktiviert
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLNUM</name>
<brief>Zähler des Koppelfaktors</brief>
<description>$AA_CPLNUM[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Zähler des Koppelfaktors zwischen der Folgeachse/Spindel &lt;Folgeachse&gt; und der Leitachse/Spindel &lt;Leitachse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLDEN</name>
<brief>Nenner des Koppelfaktors</brief>
<description>$AA_CPLDEN[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Nenner des Koppelfaktors zwischen der Folgeachse/Spindel &lt;Folgeachse&gt; und der Leitachse/Spindel &lt;Leitachse&gt;
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AA_CPLCTID</name>
<brief>Kurventabellen ID der Kopplung</brief>
<description>$AA_CPLCTID[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Tabellennummer der aktiven Kurventabelle zwischen der Folgeachse/Spindel &lt;Folgeachse&gt; und der Leitachse/Spindel &lt;Leitachse&gt;
</description>
</parameter>

<parameter type="STRING" dim="3">
<name>$AA_CPLSETVAL</name>
<brief>Kopplungsbezug der Leitachse</brief>
<description>$AA_CPLSETVAL[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Kopplungsbezug der Leitachse/Spindel &lt;Leitachse&gt; der Folgeachse/Spindel &lt;Folgeachse&gt;
"ACTPOS" = Istposition
"CMDPOS" = Sollposition
"CMDVEL" = Sollgeschwindigkeit
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$PA_CPLTYPE</name>
<brief>Kopplungsart</brief>
<description>$PA_CPLTYPE[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Für die Achse/Spindel der Folgeachse/Spindel &lt;Folgeachse&gt; zur Leitachse/Spindel &lt;Leitachse&gt; werden bitcodiert die aktiven Kopplungstypen zurückgegeben
Bit 0,1 = TANG
Bit 2 = 1 ('H04') COUP
Bit 3 = 1 ('H08') TRAIL
Bit 4 = 1 ('H10') LEAD
Bit 5 = 1 ('H20') EG
Bit 6 = 1 ('H40') GANTRY
Bit 7,8 = 1 (H180) TANG mit Option P
Bit 9 = 1 ('H200') CP, Generische Kopplung
</description>
</parameter>

<parameter type="STRING" dim="3">
<name>$PA_CPLSTATE</name>
<brief>Zustand der Kopplung</brief>
<description>$PA_CPLSTATE[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Zustand der Kopplung zwischen der Folgeachse/Spindel &lt;Folgeachse&gt; und der Leitachse/Spindel &lt;Leitachse&gt;
"NONE" = keine Kopplung definiert
"DEF" = Kopplung definiert, nicht aktiviert
"ON" = Kopplung ist aktiv
"OFF" = Kopplung deaktiviert
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$PA_CPLNUM</name>
<brief>Zähler des Koppelfaktors</brief>
<description>$PA_CPLNUM[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Zähler des Koppelfaktors zwischen der Folgeachse/Spindel &lt;Folgeachse&gt; und der Leitachse/Spindel &lt;Leitachse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$PA_CPLDEN</name>
<brief>Nenner des Koppelfaktors</brief>
<description>$PA_CPLDEN[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Nenner des Koppelfaktors zwischen der Folgeachse/Spindel &lt;Folgeachse&gt; und der Leitachse/Spindel &lt;Leitachse&gt;
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$PA_CPLCTID</name>
<brief>Kurventabellen ID der Kopplung</brief>
<description>$PA_CPLCTID[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Tabellennummer der aktiven Kurventabelle zwischen der Folgeachse/Spindel &lt;Folgeachse&gt; und der Leitachse/Spindel &lt;Leitachse&gt;
</description>
</parameter>

<parameter type="STRING" dim="3">
<name>$PA_CPLSETVAL</name>
<brief>Kopplungsbezug der Leitachse</brief>
<description>$PA_CPLSETVAL[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Kopplungsbezug der Leitachse/Spindel &lt;Leitachse&gt; der Folgeachse/Spindel &lt;Folgeachse&gt;
"ACTPOS" = Istposition
"CMDPOS" = Sollposition
"CMDVEL" = Sollgeschwindigkeit
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_ENC_ZERO_MON_ACCESS_CNT</name>
<brief>Aktualisierungszähler gültiger Nullmarkenüberwachung-Zugriffe</brief>
<description>Inkrementelle und abstandscodierte Messsysteme, nur bei SIMODRIVE611D:
Die Variable ist bei diesem Gebertyp sehr Rechenzeit-intensiv und wird nur versorgt, wenn in $MA_ENC_ZERO_MON_SYSVAR_CTRLBit_0 = 1 gesetzt ist.
Die Systemvariable wird nach der Initialisierungsphase nach jeder Minute einmal inkrementiert, wenn in dieser Zeit eine oder mehrere Nullmarken detektiert wurden. In der Initialisierungsphase erfolgt die Inkrementierung an jeder abgesicherten detektierten Nullmarke.
s.a. $MA_ENC_ZERO_MON_SYSVAR_CTRL

Absolute Messsysteme ($MA_ENC_TYPE=4), nur bei SIMODRIVE611D:
Dieser Zähler wird bei jedem erfolgreichen NC-Zugriff auf einen gültigen EnDat-Absolutwert inkrementiert.

andere Antriebe bzw. deaktiviert:
Variable liefert 0.

$VA_ENC_ZERO_MON_ACCESS_CNT[n,&lt;Achse&gt;] wird bei PowerOn auf 0 initialisiert. Es erfolgt kein Rücksetzen bei Reset.

Dabei bedeuten die Indizes:
n: Gebernummer
&lt;Achse&gt;: Maschinenachse
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_ABSOLUTE_ENC_ZERO_MON_MAX</name>
<brief>Maximum von $VA_ENC_ZERO_MON_ACT</brief>
<description>Absolute Messsysteme ($MA_ENC_TYPE=4), nur bei SIMODRIVE611D:
Diese Systemvariable enthält den seit dem Geber-Einschalten aufgetretenden Maximalwert aus $VA_ENC_ZERO_MON_ACT.

andere Systeme/Antriebe:
Variable liefert 0.

$VA_ABSOLUTE_ENC_ZERO_MON_MAX[n,&lt;Achse&gt;] wird bei PowerOn bzw. Geber-Anwahl auf 0 initialisiert. Es erfolgt kein Rücksetzen bei Reset.

Dabei bedeuten die Indizes:
n: Gebernummer
&lt;Achse&gt;: Maschinenachse
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_ABSOLUTE_ENC_DELTA_INIT</name>
<brief>Anfangs-Differenz bei Absolutgeber</brief>
<description>Nur bei Absolutgeber:
Dieser Wert enthält den Anfangs-Differenzwert zwischen letzter im SRAM gepufferter Absolut-Position und aktueller Absolut-Position (im Format interne Inkremente - vgl. Maschinendaten $MN_INT_PER_MM bzw. $MN_INT_PER_DEG). Der Wert wird aktualisiert bei PowerOn, Warmstart, Parken-Abwahl und Rückkehr unter die Gebergrenzfrequenz.

andere Geber:
Variable liefert 0.

$VA_ABSOLUTE_ENC_DELTA_INIT[n,&lt;Achse&gt;] wird bei PowerOn neu berechnet. Es erfolgt kein Rücksetzen bei Reset.

Dabei bedeuten die Indizes:
n: Gebernummer
&lt;Achse&gt;: Maschinenachse
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_ENC_ZERO_MON_ACT</name>
<brief>aktuelle interne Werte Nullmarkenüberwachung</brief>
<description>Inkrementelle und abstandscodierte Messsysteme, nur bei SIMODRIVE611D:
Die Systemvariable enthält den aktuellen Hardware-Zählerstand der letzten überfahrenen Nullmarke

Absolute Messsysteme ($MA_ENC_TYPE=4), nur bei SIMODRIVE611D:
Diese Systemvariable enthält die aktuelle Abweichung (Betrag) zwischen Steuerungs-Position und neu-gebildeter Absolutposition im Format 1/4 Geber-Grobstriche.

andere Antriebe:
Variable liefert 0.

$VA_ENC_ZERO_MON_ACT[n,&lt;Achse&gt;] wird bei PowerOn auf 0 initialisiert. Es erfolgt kein Rücksetzen bei Reset.

Dabei bedeuten die Indizes:
n: Gebernummer
&lt;Achse&gt;: Maschinenachse
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_ENC_ZERO_MON_INIT</name>
<brief>Initialisierungswerte Hardwarezähler bei Nullmarkenüberwachung</brief>
<description>Inkrementelle und abstandscodierte Messsysteme nur bei SIMODRIVE611D:
Diese Systemvariable enthält den Hardware-Initial-Zählerstand gegen den alle weiteren Hardware-Zählerstände der Nullmarken verglichen werden.

andere Systeme/Antriebe:
Variable liefert 0.

$VA_ENC_ZERO_MON_INIT[n,&lt;Achse&gt;] wird bei PowerOn bzw. Geber-Anwahl auf 0 initialisiert. Es erfolgt kein Rücksetzen bei Reset.

Dabei bedeuten die Indizes:
n: Gebernummer
&lt;Achse&gt;: Maschinenachse
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_COUP_CORR_DIST</name>
<brief>Generische Kopplung: Restweg von $AA_COUP_CORR</brief>
<description>Die axiale Variable $AA_COUP_CORR_DIST[&lt;Achse&gt;] liefert für die Funktionalität "Synchronlaufabweichung nachführen" den Restweg von $AA_COUP_CORR (Korrekturwert zum Positionsversatz bei generischen Kopplungen).
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLINTR</name>
<brief>Verschiebewert für den Eingangswert der Kopplung</brief>
<description>$AA_CPLINTR[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Verschiebewert für den Eingangswert der Leitachse/Spindel &lt;Leitachse&gt; der Kopplung zur Folgeachse/Spindel &lt;Folgeachse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLINSC</name>
<brief>Skalierfaktor für den Eingangswert der Kopplung</brief>
<description>$AA_CPLINSC[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Skalierfaktor für den Eingangswert der Leitachse/Spindel &lt;Leitachse&gt; der aktiven Kopplung zur Folgeachse/Spindel &lt;Folgeachse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLOUTTR</name>
<brief>Verschiebewert für den Ausgangswert der Kopplung</brief>
<description>$AA_CPLOUTTR[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Verschiebewert den Ausgangswert der Leitachse/Spindel &lt;Leitachse&gt; der aktiven Kopplung zur Folgeachse/Spindel &lt;Folgeachse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLOUTSC</name>
<brief>Skalierfaktor für den Ausgangswert der Kopplung</brief>
<description>$AA_CPLOUTSC[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Skalierfaktor für den Ausgangswert der Leitachse/Spindel &lt;Leitachse&gt; der aktiven Kopplung zur Folgeachse/Spindel &lt;Folgeachse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$PA_CPLINTR</name>
<brief>Verschiebewert für den Eingangswert der Kopplung</brief>
<description>$PA_CPLINTR[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Verschiebewert für den Eingangswert der Leitachse/Spindel &lt;Leitachse&gt; der Kopplung zur Folgeachse/Spindel &lt;Folgeachse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$PA_CPLINSC</name>
<brief>Skalierfaktor für den Eingangswert der Kopplung</brief>
<description>$PA_CPLINSC[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Skalierfaktor für den Eingangswert der Leitachse/Spindel &lt;Leitachse&gt; der aktiven Kopplung zur Folgeachse/Spindel &lt;Folgeachse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$PA_CPLOUTTR</name>
<brief>Verschiebewert für den Ausgangswert der Kopplung</brief>
<description>$PA_CPLOUTTR[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Verschiebewert den Ausgangswert der Leitachse/Spindel &lt;Leitachse&gt; der aktiven Kopplung zur Folgeachse/Spindel &lt;Folgeachse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$PA_CPLOUTSC</name>
<brief>Skalierfaktor für den Ausgangswert der Kopplung</brief>
<description>$PA_CPLOUTSC[&lt;Folgeachse&gt;, &lt;Leitachse&gt;]
Skalierfaktor für den Ausgangswert der Leitachse/Spindel &lt;Leitachse&gt; der aktiven Kopplung zur Folgeachse/Spindel &lt;Folgeachse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_CPSYNCOP</name>
<brief>Schwellwert für Positionssynchronlauf Grob</brief>
<description>$AA_CPSYNCOP[&lt;Achse&gt;]
Schwellwert für Positionssynchronlauf Grob der Folgeachse/Spindel &lt;Achse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_CPSYNFIP</name>
<brief>Schwellwert für Positionssynchronlauf Fein</brief>
<description>$AA_CPSYNFIP[&lt;Achse&gt;]
Schwellwert für Positionssynchronlauf Fein der Folgeachse/Spindel &lt;Achse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_CPSYNCOV</name>
<brief>Schwellwert für Geschwindigkeitssynchronlauf Grob</brief>
<description>$AA_CPSYNCOV[&lt;Achse&gt;]
Schwellwert für Geschwindigkeitssynchronlauf Grob der Folgeachse/Spindel &lt;Achse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_CPSYNFIV</name>
<brief>Schwellwert für Geschwindigkeitssynchronlauf Fein</brief>
<description>$AA_CPSYNFIV[&lt;Achse&gt;]
Schwellwert für Geschwindigkeitssynchronlauf Fein der Folgeachse/Spindel &lt;Achse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$PA_CPSYNCOP</name>
<brief>Schwellwert für Positionssynchronlauf Grob</brief>
<description>$PA_CPSYNCOP[&lt;Achse&gt;]
Schwellwert für Positionssynchronlauf Grob der Folgeachse/Spindel &lt;Achse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$PA_CPSYNFIP</name>
<brief>Schwellwert für Positionssynchronlauf Fein</brief>
<description>$PA_CPSYNFIP[&lt;Achse&gt;]
Schwellwert für Positionssynchronlauf Fein der Folgeachse/Spindel &lt;Achse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$PA_CPSYNCOV</name>
<brief>Schwellwert für Geschwindigkeitssynchronlauf Grob</brief>
<description>$PA_CPSYNCOV[&lt;Achse&gt;]
Schwellwert für Geschwindigkeitssynchronlauf Grob der Folgeachse/Spindel &lt;Achse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$PA_CPSYNFIV</name>
<brief>Schwellwert für Geschwindigkeitssynchronlauf Fein</brief>
<description>$PA_CPSYNFIV[&lt;Achse&gt;]
Schwellwert für Geschwindigkeitssynchronlauf Fein der Folgeachse/Spindel &lt;Achse&gt;
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_ITR</name>
<brief>Aktueller Sollwert am Ausgang der n-ten Transformation</brief>
<description>Die axiale Variable $AA_ITR[&lt;Achse&gt;] ermittelt den aktuellen Sollwert einer Achse am Ausgang der n-ten verketteten Transformation.
Für die Angabe des Trafo-Layer gilt:
Trafo-Layer 0: Die Positionen entsprechen den BCS-Positionen, d.h. $AA_ITR[x, 0] entspricht $AA_IB[x]
Trafo-Layer 1: Sollposition der Achse am Ausgang der 1. Transformation.
Trafo-Layer 2: Sollposition der Achse am Ausgang der 2. Transformation.
Trafo-Layer 3: Sollposition der Achse am Ausgang der 3. Transformation.
Trafo-Layer 4: Sollposition der Achse am Ausgang der 4. Transformation, d.h. $AA_ITR[x, 4] entspricht $AA_IM[x]
Besteht die Transformationskette nicht aus 4 Einzeltransformationen, so liefern die höchsten Ebenen die gleichen Sollwerte.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_IBC</name>
<brief>Aktueller Sollwert einer kartesischen Achse</brief>
<description>Die axiale Variable $AA_IBC[&lt;Achse&gt;] ermittelt die zwischen BKS und MKS liegende Sollposition einer kartesischen Achse. Kartesisch bedeutet, dass die Achse eine Linearachse ist und diese planparallel zu einer Koordinatenachse in einem rechtsdrehenden Koordinatensystem liegt. Ist eine Geometrieachse am Ausgang der n-ten Transformation noch kartesisch, so wird dieser Wert geliefert. Der verwendete Achsbezeichner muss im BKS eine Geometrieachse repräsentieren, ansonsten liefert die Variable den Wert 0 zurück.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_IW</name>
<brief>Aktueller WKS-Istwert einer Achse</brief>
<description>Die Variable $VA_IW[&lt;Achse&gt;] ermittelt die ins WKS rücktransformierte Encoder-Position einer Achse. Der WKS-Wert enthält alle axialen Überlagerungsanteile (DRF, AA_OFF, ext. Nullpunktverschiebung, etc. ) und Korrekturwerte (CEC, etc.). Aus Performance-Gründen werden die Positionen pro IPO-Takt nur einmal berechnet. Beim Lesen der Variable innerhalb eines IPO-Taktes ändert sich der Wert der Variablen nicht, obwohl sich der Istwert verändert haben könnte. Bei aktiven Transformationen ist zu berücksichtigen, dass die Transformation der Istwerte ins BKS im IPO-Takt sehr zeitaufwändig sein kann. In diesem Fall ist ein ausreichender IPO-Takt einzustellen.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_IB</name>
<brief>Aktuelle BKS-Encoder-Position einer Achse</brief>
<description>Die Variable $VA_IB[&lt;Achse&gt;] ermittelt die ins BKS rücktransformierte Encoder-Position einer Achse. Der BKS-Wert enthält alle axialen Überlagerungsanteile (DRF, AA_OFF, ext. Nullpunktverschiebung, etc. ) und Korrekturwerte (CEC, etc.). Aus Performance-Gründen werden die Positionen pro IPO-Takt nur einmal berechnet. Beim Lesen der Variable innerhalb eines IPO-Taktes ändert sich der Wert der Variablen nicht, obwohl sich der Istwert verändert haben könnte. Bei aktiven Transformationen ist zu berücksichtigen, dass die Transformation der Istwerte ins BKS im IPO-Takt sehr zeitaufwändig sein kann. In diesem Fall ist ein ausreichender IPO-Takt einzustellen.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_IBC</name>
<brief>Aktuelle kartesische BKS-Encoder-Position einer Achse</brief>
<description>Die Variable $VA_IBC[&lt;Geo-Achse&gt;] ermittelt die zwischen BKS und MKS liegende Encoder-Position einer kartesischen Achse. Kartesisch bedeutet, dass die Achse eine Linearachse ist und diese planparallel zu einer Koordinatenachse in einem rechtsdrehenden Koordinatensystem liegt. Der verwendete Achsbezeichner kann ein Geometrie-, Kanal- oder ein Maschinen-Achsbezeichner sein. Dieser Bezeichner muss im BKS eine Geometrie-Achse repräsentieren, ansonsten liefert die Variable den Wert 0.0 zurück. Aus Performance-Gründen werden die Positionen pro IPO-Takt nur einmal berechnet. Beim Lesen der Variable innerhalb eines IPO-Taktes ändert sich der Wert der Variablen nicht, obwohl sich der Istwert verändert haben könnte. Bei aktiven Transformationen ist zu berücksichtigen, dass die Transformation der Istwerte ins BKS im IPO-Takt sehr zeitaufwändig sein kann. In diesem Fall ist ein ausreichender IPO-Takt einzustellen.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_ITR</name>
<brief>Aktueller Istwert am Ausgang der n-ten Transformation</brief>
<description>Die axiale Variable $VA_ITR[&lt;Achse&gt;, n] ermittelt die aktuelle Encoder-Position einer Achse am Ausgang der n-ten verketteten Transformation.

Für die Angabe des Trafo-Layer gilt:
Trafo-Layer 0: Die Positionen entsprechen den BCS-Positionen, d.h. $VA_ITR[x, 0] entspricht $VA_IB[x]
Trafo-Layer 1: Sollposition der Achse am Ausgang der 1. Transformation.
Trafo-Layer 2: Sollposition der Achse am Ausgang der 2. Transformation.
Trafo-Layer 3: Sollposition der Achse am Ausgang der 3. Transformation.
Trafo-Layer 4: Sollposition der Achse am Ausgang der 4. Transformation, d.h. $VA_ITR[x, 4] entspricht $VA_IM[x]

Besteht die Transformationskette nicht aus 4 Einzeltransformationen, so liefern die höchsten Ebenen die gleichen Sollwerte. Bei aktiven Transformationen ist zu berücksichtigen, dass die Transformation der Istwerte ins BKS im IPO-Takt sehr zeitaufwändig sein kann. In diesem Fall ist ein ausreichender IPO-Takt einzustellen.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_ATOL</name>
<brief>Aktive Achstoleranz</brief>
<description>$AA_ATOL nennt die Achstoleranz für Kompressor und Überschleifen, die bei der Aufbereitung des aktuellen Hauptlaufsatzes wirksam war.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$PA_ATOL</name>
<brief>Programmierte Achstoleranz</brief>
<description>$PA_ATOL nennt im Teileprogramm die programmierte Achstoleranz für Kompressor und Überschleifen. Ist kein Wert programmiert, liefert die Variable -1.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_FGREF</name>
<brief>Aktiver Radius für Rundachsweg</brief>
<description>$AA_FGREF nennt den Radius, mit dem eine Rundachse zum Bahnweg beiträgt.
Voreingestellt ist ein Wert von 180mm/PI = 57.296mm, was einem Beitrag von 1mm pro Grad entspricht.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AA_FGROUP</name>
<brief>Einfluss einer Achse auf Bahngeschwindigkeit</brief>
<description>Wenn der Weg einer Achse einen Einfluss auf die Bahngeschwindigkeit im aktuellen Hauptlaufsatz hat (FGROUP), liefert die Variable TRUE, sonst FALSE.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$PA_FGROUP</name>
<brief>Einfluss einer Achse auf Bahngeschwindigkeit</brief>
<description>Wenn der Weg einer Achse einen Einfluss auf die Bahngeschwindigkeit hat (FGROUP), liefert die Variable TRUE, sonst FALSE.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$PA_FGREF</name>
<brief>Faktor für Rundachsweg</brief>
<description>$PA_FGREF nennt im Teileprogramm den Radius, mit dem eine Rundachse zum Bahnweg beiträgt.
Voreingestellt ist ein Wert von 180mm/PI = 57.296mm, was einem Beitrag von 1mm pro Grad entspricht.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_CPMVDI</name>
<brief>Verhalten des Koppelmoduls bzgl. VDI-Signale</brief>
<description>Die Variable $AA_CPMVDI[&lt;Folgeachse&gt;] liefert für die angegebene Achse/Spindel bei aktiver Kopplung einen bitcodierten Wert zurück, der das Verhalten des Koppelmoduls auf bestimmte VDI-Signale wiedergibt.

Das Verhalten wird durch das CP-Schlüsselwort CPMVDI festgelegt
Bit 0   reserviert
Bit 1   reserviert
Bit 2   reserviert
Bit 3 = 0 DBAchse.DBX1.3, Achs-/Spindelsperre wird für die Folgeachse nicht wirksam
Bit 3 = 1 DBAchse.DBX1.3, Achs-/Spindelsperre wird für die Folgeachse wirksam
Bit 4 = 0 Abhängige Positionsanteile der Leitachsen/Spindeln werden unabhängig vom Zustand der Achs-/Spindelsperre der jeweiligen Leitachse/Spindel wirksam
Bit 4 = 1 Abhängige Positionsanteile der Leitachsen/Spindeln werden nur dann wirksam, wenn der Zustand der Achs-/Spindelsperre der Leitachse/Spindel mit dem Zustand der Achs-/Spindelsperre der Folgeachse/Spindel übereinstimmt.
Bit 5 = 0 VDI-Signal DB21.DBX25.7 bzw. DB21.DBX1.7, Programmtest wird für die Folgeachse nicht wirksam. Der Zustand der Leitachse wirkt
Bit 5 = 1 VDI-Signal DB21.DBX25.7 bzw. DB21.DBX1.7, Programmtest wird für die Folgeachse wirksam.
Bit 6 = 0 Abhängige Positionsanteile der Leitachsen/Spindeln werden unabhängig vom Zustand der Achs-/Spindelsperre der jeweiligen Leitachse/Spindel wirksam
Bit 6 = 1 Abhängige Positionsanteile der Leitachsen/Spindeln werden nur dann wirksam, wenn der Zustand derAchs-/Spindelsperre der Leitachse/Spindel mit dem Zustand der Achs-/Spindelsperre der Folgeachse/Spindel übereinstimmt.
Bit 7 - 31 reserviert
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_AX_DISABLE_SRC</name>
<brief>Quelle der Achsen-/Spindelsperre</brief>
<description>Bitmaske die die Quelle einer aktiven Achsen-/Spindelsperre liefert.
Das Datum ist bitcodiert, somit sind im Bedarfsfall auch Einzelzustände maskierbar bzw. getrennt auswertbar.
Bit0 = 1: resultierender Zustand aus allen Quellen: Achsen-/Spindelsperre aktiv.
Bit1 = 1: axiales Signal Achsen-/Spindelsperre von PLC ausgelöst ist aktiv.
Bit2 = 1: kanalspezifischer Programmtest ist aktiv.
Bit3 = 1: axiale Unterdrückung des Programmtests von PLC ausgelöst ist aktiv.
Bit4 = 1: axiales Signal Programmtest (Energiesparmodus) ist aktiv.
Bit5 = 1: Serupro ist aktiv.
Bit6 = 1: Koppelobjekt Gesamtzustand Achsen-/Spindelsperre ist aktiv.
Bit7 = 1: Koppelobjekt Gesamtzustand reales Fahren ist aktiv.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$AA_AX_DISABLE</name>
<brief>Status der Achsen-/Spindelsperre</brief>
<description>0: Achsen-/Spindelsperre ist nicht aktiv.
1: Achsen-/Spindelsperre ist aktiv.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_MASL_DEF</name>
<brief>Kopplungsdefinition Master-Slave</brief>
<description>Der aktuelle Zustand einer Master-Slave Kopplung.
=0: Achse ist keine Slave-Achse bzw. keine Kopplung aktiv.
&gt;0: Kopplung aktiv, es wird die zugehörige Maschinenachsnummer der Master-Achse geliefert.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_MACHAX</name>
<brief>Zuordnung physikalischen Achse</brief>
<description>Zu einer Achse wird die NCU und die Maschinenachse gemeldet, die das physikalische Abbild der Achse darstellt. Dabei wird die NCU-Id ab der 10000 Stelle gemeldet, z.B. 20005: NCU 2 Achse 5. Ohne NCU-Link, d.h. es gibt nur eine NCU, wird nur die Nummer der Maschinenachse gemeldet. Die NCU-Id ist in diesem Fall gleich Null. Wird der Maschinenachsbezeichner verwendet, so muss die Maschinenachse auf dieser NCU mindestens einem Kanal zugeordnet sein, sonst wird der Alarm 17040 Kanal %1: Satz %2 unerlaubter Achsindex gemeldet.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_IPO_NC_CHANAX</name>
<brief>Zuordnung zu NC, Kanal und Kanalachsnummer des Interpolators.</brief>
<description>Wird die Achse derzeit auf dieser NCU interpoliert, so wird der Kanal und der Kanalachsnummer gemeldet, die den Interpolator der Achse definieren. Dabei wird der Kanal ab der hunderter Stelle und der Kanalachsnummer ab der Einerstelle gemeldet, z.B. 1005 - Kanal 10 Kanalachse 5. Diese Werte sind immer kleiner als 10000. Wird die Achse derzeit auf einer anderen NCU interpoliert, so wird der NCU Identifier der interpolierenden NCU und die globale Achsnummer der Maschinenachse gemeldet. Dabei wird die NCU ab der 10000 Stelle gemeldet, z.B. 20203: NCU 2 und die globale Achsnummer ist 203. Mit dieser globalen Achsnummer kann dann auf der anderen NCU, mit NCU-Id 2, mit $AN_IPO_CHANAX[203] der interpolierende Kanal und die Kanalachsnummer ermittelt werden. Wird der Maschinenachsbezeichner verwendet, so muss die Maschinenachse auf dieser NCU mindestens einem Kanal zugeordnet sein, sonst wird der Alarm 17040 Kanal %1: Satz %2 unerlaubter Achsindex gemeldet.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VA_IPO_NC_CHANAX</name>
<brief>Zuordnung Maschinenachse zu NC o. Kanal und K.Achsnummer des Interpolators.</brief>
<description>Wird die Maschinenachse derzeit auf dieser NCU interpoliert, so wird der Kanal und der Kanalachsnummer gemeldet, die den Interpolator der Achse definieren. Dabei wird der Kanal ab der hunderter Stelle und der Kanalachsnummer ab der Einerstelle gemeldet, z.B. 1005 - Kanal 10 Kanalachse 5. Diese Werte sind immer kleiner als 10000. Wird die Maschinenachse derzeit auf einer anderen NCU interpoliert, so wird der NCU Identifier der interpolierenden NCU und die globale Achsnummer der Maschinenachse gemeldet. Dabei wird die NCU ab der 10000 Stelle gemeldet, z.B. 20103: NCU 2 und die globale Achsnummer ist 103. Mit dieser globalen Achsnummer kann dann auf der anderen NCU, mit NCU-Id 2, mit $AN_IPO_CHANAX[103] der interpolierende Kanal und die Kanalachsnummer ermittelt werden. Wird eine Maschinenachse nicht verwendet, so wird der Alarm 17040 Kanal %1: Satz %2 unerlaubter Achsindex gemeldet.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VA_MOT_SENSOR_CONF</name>
<brief>Konfiguration von Motor-Sensoren</brief>
<description>Über die Variable $VA_MOT_SENSOR_CONF[&lt;Achse&gt;] kann die Konfiguration von Sensoren des Motors abgefragt werden.

Die Variable ist bitcodiert und hat folgende Ausprägung:
Bit0 = 1: Sensorik vorhanden.
Bit1 = 1: Sensor S1 vorhanden. Analogmesswert für Position der Zugstange.
Bit2 = 0:
Bit3 = 0:
Bit4 = 1: Sensor S4 vorhanden. Digitalwert für die Kolbenendlage.
Bit5 = 1: Sensor S5 vorhanden. Digitalwert für die Winkellage der Welle.
Bit10 = 1: Zustandswert wird gebildet, Drehzahlbegrenzungen p5043 aktiv.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VA_MOT_CLAMPING_STATE</name>
<brief>Zustand des Spannsystems</brief>
<description>Die Variable $VA_MOT_CLAMPING_STATE[&lt;Achse&gt;] ermittelt ausgehend von der Position der Zugstange (Wert des S1) den Spannzustand.
Jedem Zustand ist eine maximale Drehzahl zugeordnet. Diese sind in den Antriebsparametern p5043[0..6] hinterlegt.

Folgende Werte sind möglich:
0:   Sensor nicht vorhanden
1:   Initzustand, Drehzahlgrenze 0 Upm
2:   Alarm, Drehzahlgrenze 0 Upm
3:   Werkzeug gelöst / ausgestoßen, Drehzahlgrenze siehe Antriebsparameter p5043[0]
4:   Spannend (über Federkraft), Drehzahlgrenze siehe Antriebsparameter p5043[1]
5:   Lösend (über Druckluft), Drehzahlgrenze siehe Antriebsparameter p5043[2]
6:   Lösend (über Druckluft), Drehzahlgrenze siehe Antriebsparameter p5043[3]
7:   Gespannt mit Werkzeug, Drehzahlgrenze siehe Antriebsparameter p5043[4]
8:   Gespannt mit Werkzeug, Drehzahlgrenze siehe Antriebsparameter p5043[4]
9:   Weiter spannend (über Federkraft), Drehzahlgrenze siehe Antriebsparameter p5043[5]
10: Gespannt ohne Werkzeug, Drehzahlgrenze siehe Antriebsparameter p5043[6]
11: Alarm, Drehzahlgrenze 0 Upm
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VA_MOT_SENSOR_ANA</name>
<brief>Analogsensor auf dem Motor</brief>
<description>Die Variable $VA_MOT_SENSOR_ANA[&lt;Achse&gt;] ermittelt den Analogmesswert des Sensors S1. Der Analogwert 0 - 10 V wird bei einer Auflösung von 1mV auf maximal +10000 Inkremente abgebildet.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VA_MOT_SENSOR_DIGI</name>
<brief>Digitale Sensoren auf dem Motor</brief>
<description>Die Variable $VA_MOT_SENSOR_DIGI[&lt;Achse&gt;] ermittelt die Zustände der digitalen Sensoren S4 und S5.

Die Variable ist bitcodiert und hat folgende Ausprägung:
Bit0 = 0:
Bit1 = 0:
Bit2 = 0:
Bit3 = 0:
Bit4 = 1: Sensor S4 Kolbenendlage
Bit5 = 1: Sensor S5 Winkellage der Welle
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VA_CPSYNC2</name>
<brief>Zustand Synchronlauf(2) der Folgeachse/-spindel</brief>
<description>Die axiale Variable $VA_CPSYNC2[&lt;Folgeachse&gt;] liefert den Zustand der zweiten Synchronlaufüberwachung der Folgeachse/-spindel.

0: Überwachung nicht aktiv
Bit 0 = 1: Überwachung 'Synchronlauf(2) grob' aktiv
Bit 1 = 1: Synchronlauf(2) grob vorhanden
Bit 2 = 1: Überwachung 'Synchronlauf(2) fein' aktiv
Bit 3 = 1: Synchronlauf(2) fein vorhanden
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_CPSYNCOP2</name>
<brief>Schwellwert Zweite Synchronlaufüberwachung      Grob</brief>
<description>Die axiale Variable $AA_CPSYNCOP2[&lt;Folgeachse&gt;] liefert den "Schwellwert grob" der zweiten Synchronlaufüberwachung der Folgeachse/-spindel.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_CPSYNFIP2</name>
<brief>Schwellwert Zweite Synchronlaufüberwachung Fein</brief>
<description>Die axiale Variable $AA_CPSYNFIP2[&lt;Folgeachse&gt;] liefert den "Schwellwert fein" der zweiten Synchronlaufüberwachung der Folgeachse/-spindel.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_POSRES</name>
<brief>Achsposition ist restauriert</brief>
<description>Die axiale Variable $AA_POSRES[&lt;Achse&gt;] liefert den Achsstatus:
0: Achs-Position ist nicht restauriert
1: Achs-Position ist restauriert
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_CPMALARM</name>
<brief>Verhalten des Koppelmoduls bzgl. Alarmhandling</brief>
<description>Die Variable $AA_CPMALARM[&lt;Achse&gt;] liefert für die angegebene Achse/Spindel bei aktiver Kopplung einen bitcodierten Wert zurück, der das Verhalten des Koppelmoduls in Bezug auf das Alarmhandling festlegt.
Das Verhalten wird durch das CP-Schlüsselwort CPMALARM festgelegt Die Defaultwerte ergeben sich aus den MD11410 $MN_SUPPRESS_ALARM_MASK und MD11415 $MN_SUPPRESS_ALARM_MASK_2 Anhand der einzelnen Bits wird entschieden, welche Alarme unterdrückt werden.

Bit gesetzt: Der entsprechende Alarm (Warnung) wird NICHT ausgelöst.
   Bit 0:  Alarm 16772 "Kanal %1 Satz %2 Achse %3 ist Folgeachse, Kopplung wird geöffnet"
   Bit 1:  Alarm 16773 "Kanal %1 Achse %3 ist Folgeachse. Die Achs-/Spindelsperren der Leitachsen sind unterschiedlich"
   Bit 2:  Alarm 16774 "Kanal %1 Achse %2 Synchronisation abgebrochen"
   Bit 3:  Alarm 22012 "Kanal %1 Satz %2. Leitachse %3 ist im Simulationsbetrieb"
   Bit 4:  Alarm 22013 "Kanal %1 Satz %2. Folgeachse %3 ist im Simulationsbetrieb"
   Bit 5:  Alarm 22014 "Kanal %1 Satz %2. Die Dynamik von Leitachse %3 und Folgeachse %4 ist stark unterschiedlich"
   Bit 6:  Alarm 22015 "Kanal %1 Satz %2 Folgespindel %3 keine Dynamik für Zusatzbewegung"
   Bit 7:  Alarm 22016 "Kanal %1 Satz %2 Folgespindel %3 im Bereich reduzierten Beschleunigungsvermögens"
   Bit 8:  Alarm 22025 "Kanal %1 Satz %2 Folgeachse/-spindel %3 Synchronlauf(2): Toleranz fein überschritten"
   Bit 9:  Alarm 22026 "Kanal %1 Satz %2 Folgeachse/-spindel %3 Synchronlauf(2): Toleranz grob überschritten"
   Bit 10 - 31 reserviert
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_COLLPOS</name>
<brief>Kollisionsposition</brief>
<description>Die axiale Variable $AA_COLLPOS[&lt;Achse&gt;] liefert die Position bei drohender Kollision.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_CC_COMP_VAL</name>
<brief>OA-Kompensationswert</brief>
<description>Die axiale Variable $VA_CC_COMP_VAL[&lt;Achse&gt;, n] ermittelt den aktuellen Kompensationswert der n-ten OA-Kompensation über Compilezyklen im Maschinenkoordinatensystem (MKS). Wenn kein Compilezyklus aktiv ist, der OA-Kompensationswerte aufschaltet, hat die Variable den Wert 0.0.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_CC_COMP_VAL_TOTAL</name>
<brief>OA-Summenkompensationswert</brief>
<description>Die axiale Variable $VA_CC_COMP_VAL[&lt;Achse&gt;] ermittelt den aktuellen Summenkompensationswert aller OA-Kompensationen über Compilezyklen im Maschinenkoordinatensystem (MKS). Wenn kein Compilezyklus aktiv ist, der OA-Kompensationswerte aufschaltet, hat die Variable den Wert 0.0.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_LOAD_SMOOTH</name>
<brief>geglättete Antriebsauslastung</brief>
<description>Die axiale Variable $AA_LOAD_SMOOTH[&lt;Achse&gt;] ermittelt die mittels PT1-Filter geglättete Antriebsauslastung in Prozent. Die Filterkonstante wird mit dem Maschinendatum MD32925 LOAD_SMOOTH_FILTER_TIME eingestellt.

Nur bei PROFIdrive-Antrieben verfügbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_POWER_SMOOTH</name>
<brief>geglättete Antriebswirkleistung</brief>
<description>Die axiale Variable $AA_POWER_SMOOTH[&lt;Achse&gt;] ermittelt die mittels PT1-Filter geglättete Antriebswirkleistung in W. Die Filterkonstante wird mit dem Maschinendatum MD32926 POWER_SMOOTH_FILTER_TIME eingestellt.

Nur bei PROFIdrive-Antrieben verfügbar.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_INERTIA_TOTAL</name>
<brief>Trägheitsmoment/Masse der Achse</brief>
<description>Die axiale Variable $VA_INERTIA_TOTAL[&lt;Achse&gt;] beschreibt die Massenträgheit bei rotatorischen Antrieben in kgm2 bzw. Masse bei Linearantrieben in kg.

Nur bei SINAMICS-Antrieben verfügbar.

Der Wert von $VA_INERTIA_TOTAL entspricht dem Inhalt von Parameter p1493 nur, wenn die zugehörige Antriebsfunktion "Trägheitsmomentschätzer" aktiviert (p0108.10 = 1, p1400.18 = 1) und eingeschwungen (p1407.26 =1) ist. In allen anderen Fällen wird der Wert Null in $VA_INERTIA_TOTAL geliefert.
Für die Inbetriebnahme und Randbedingungen der Antriebsfunktion "Trägheitsmomentschätzer" siehe SINAMICS Funktionshandbuch Antriebsfunktionen (FH1).

Hinweis zur Verwendung:
Die Massenträgheit/Masse wird motorseitig ohne Berücksichtigung des Getriebes ermittelt.
Bei mechanisch gekoppelten Achsen sind für einen Gesamtwert des Verbundes die einzelnen Werte zu addieren.
Das Lesen von $VA_INERTIA_TOTAL aus Synchronaktionen ist nicht möglich und führt zum Alarm 20144.
Korrespondiert bei SINAMICS-Antrieben mit:
   - Parameter p108.10:  Aktivierung Funktionsmodul "Trägheitsmomentschätzer"
   - Parameter p1493:    Trägheitsmoment gesamt
   - Parameter p1400.18: Trägheitsmomentschätzer aktiv
   - Parameter p1407.26: Trägheitsmomentschätzer eingeschwungen
   - Parameter p1226:    Stillstandserkennung Drehzahlschwelle
   - Parameter p1560:    Trägheitsmomentschätzer Beschleunigungsdrehmoment Schwellwert
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_AX_FORCE</name>
<brief>Vorschubkraft</brief>
<description>Die axiale Variable $VA_AX_FORCE[&lt;Achse&gt;] liefert

bei rotatorischen Antrieben:
  auf die Lastseite umgerechneter Antriebsmomentensollwert $VA_TORQUE.

bei Linearantrieben:
  den Kraftistwert in N

Nur bei PROFIdrive-Antrieben verfügbar.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_STOPESI</name>
<brief>Stop E aktiv</brief>
<description>aktueller Safety Integrated Stop E bei irgendeiner Achse:
=0: kein Stop E
!0: Bei irgendeiner Achse steht aktuell ein Stop E an
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_INSE</name>
<brief>externes NCK-SPL-Eingangs-Signal</brief>
<description>externes NCK-SPL-Eingangs-Signal
Schnittstelle der NCK-SPL zur Peripherie-Anschaltung von SPL-Steuersignalen
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_INSED</name>
<brief>externe NCK-SPL-Eingangs-Signale (32 Bit)</brief>
<description>externe NCK-SPL-Eingangs-Signale (32 Bit)
Schnittstelle der NCK-SPL zur Peripherie-Anschaltung von SPL-Steuersignalen
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_INSEP</name>
<brief>externes PLC-SPL-Eingangs-Signal</brief>
<description>Abbild eines externen PLC-SPL-Eingangs-Signals
Schnittstelle der PLC-SPL zur Peripherie-Anschaltung von SPL-Steuersignalen
Nur während der SPL-Inbetriebnahme-Phase lesbar
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_INSEPD</name>
<brief>externe PLC-SPL-Eingangs-Signale (32 Bit)</brief>
<description>Abbild der externen PLC-SPL-Eingangs-Signale (32 Bit)
Schnittstelle der PLC-SPL zur Peripherie-Anschaltung von SPL-Steuersignalen
Nur während der SPL-Inbetriebnahme-Phase lesbar
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_OUTSE</name>
<brief>externes NCK-SPL-Ausgangs-Signal</brief>
<description>externes NCK-SPL-Ausgangs-Signal
Schnittstelle der NCK-SPL zur Peripherie-Anschaltung von SPL-Statussignalen Nur aus SPL (Programm SAFE.SPF) schreibbar
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_OUTSED</name>
<brief>externe NCK-SPL-Ausgangs-Signale (32  Bit)</brief>
<description>externe NCK-SPL-Ausgangs-Signale (32 Bit)
Schnittstelle der NCK-SPL zur Peripherie-Anschaltung von SPL-Statussignalen Nur aus SPL (Programm SAFE.SPF) schreibbar
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_OUTSEP</name>
<brief>externes PLC-SPL-Ausgangs-Signal</brief>
<description>Abbild eines externen PLC-SPL-Ausgangs-Signals
Schnittstelle der PLC-SPL zur Peripherie-Anschaltung von SPL-Statussignalen
Nur während der SPL-Inbetriebnahme-Phase lesbar
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_OUTSEPD</name>
<brief>externe PLC-SPL-Ausgangs-Signale (32 Bit)</brief>
<description>Abbild der externen PLC-SPL-Ausgangs-Signale (32 Bit)
Schnittstelle der PLC-SPL zur Peripherie-Anschaltung von SPL-Statussignalen
Nur während der SPL-Inbetriebnahme-Phase lesbar
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_INSI</name>
<brief>internes NCK-SPL-Eingangs-Signal</brief>
<description>internes NCK-SPL-Eingangs-Signal
Schnittstelle zu den Statussignalen der axialen NCK-Überwachungskanäle
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_INSID</name>
<brief>interne NCK-SPL-Eingangs-Signale    (32  Bit)</brief>
<description>interne NCK-SPL-Eingangs-Signale (32 Bit)
Schnittstelle zu den Statussignalen der axialen NCK-Überwachungskanäle
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_INSIP</name>
<brief>internes PLC-SPL-Eingangs-Signal</brief>
<description>Abbild eines internen PLC-SPL-Eingangs-Signals
Schnittstelle zu den Statussignalen der axialen Antriebsüberwachungskanäle
Nur während der SPL-Inbetriebnahme-Phase lesbar
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_INSIPD</name>
<brief>interne PLC-SPL-Eingangs-Signale (32  Bit)</brief>
<description>Abbild der internen PLC-SPL-Eingangs-Signale (32 Bit)
Schnittstelle zu den Statussignalen der axialen Antriebsüberwachungskanäle
Nur während der SPL-Inbetriebnahme-Phase lesbar
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_OUTSI</name>
<brief>internes NCK-SPL-Ausgangs-Signal</brief>
<description>$A_OUTSI[n]
n = Bitnummer (1...192)
internes NCK-SPL-Ausgangs-Signal
Schnittstelle zu den Steuersignalen der axialen NCK-Überwachungskanäle Nur aus SPL (Programm SAFE.SPF) schreibbar
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_OUTSID</name>
<brief>interne NCK-SPL-Ausgangs-Signale (32 Bit)</brief>
<description>interne NCK-SPL-Ausgangs-Signale (32 Bit)
Schnittstelle zu den Steuersignalen der axialen NCK-Überwachungskanäle Nur aus SPL (Programm SAFE.SPF) schreibbar
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_OUTSIP</name>
<brief>internes PLC-SPL-Ausgangs-Signal</brief>
<description>Abbild eines internen PLC-SPL-Ausgangs-Signals
Schnittstelle zu den Steuersignalen der axialen Antriebsüberwachungskanäle
Nur während der SPL-Inbetriebnahme-Phase lesbar
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_OUTSIPD</name>
<brief>interne PLC-SPL-Ausgangs-Signale  (32  Bit)</brief>
<description>Abbild der internen PLC-SPL-Ausgangs-Signale (32 Bit)
Schnittstelle zu den Steuersignalen der axialen Antriebsüberwachungskanäle
Nur während der SPL-Inbetriebnahme-Phase lesbar
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_MARKERSI</name>
<brief>NCK-SPL-Merker</brief>
<description>NCK-SPL-Merker Nur aus SPL (Programm SAFE.SPF) schreibbar
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_MARKERSID</name>
<brief>NCK-SPL-Merkerwort</brief>
<description>NCK-SPL-Merkerwort (32Bit) Nur aus SPL (Programm SAFE.SPF) schreibbar
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_MARKERSIP</name>
<brief>PLC-SPL-Merker</brief>
<description>Abbild eines PLC-SPL-Merker
Nur während der SPL-Inbetriebnahme-Phase lesbar
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_MARKERSIPD</name>
<brief>PLC-SPL-Merkerwort</brief>
<description>Abbild eines PLC-SPL-Merkerwort (32 Bit)
Nur während der SPL-Inbetriebnahme-Phase lesbar
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$A_TIMERSI</name>
<brief>SPL-Timer</brief>
<description>$A_TIMERSI[n]
n=Timernummer (1...16)
Einheit in Sekunden

Die Zeit wird intern in Vielfachen des Interpolationstaktes gezählt.

Das Hochzählen der Zeitvariable wird gestartet durch die Wertzuweisung
   $A_TIMERSI[n] = &lt;Startwert&gt;

Das Hochzählen einer Zeitvariable wird gestoppt durch Zuweisung eines negativen Wertes
   $A_TIMERSI[n] = -1

Der aktuelle Zeitwert kann bei laufender oder gestoppter Zeitvariable gelesen werden. Nach dem Stoppen der Zeitvariable durch Zuweisung von -1 bleibt der zuletzt aktuelle Zeitwert stehen und kann weiterhin gelesen werden.^Die Timer werden durch Kanal-/BAG-Reset nicht gestoppt.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_STATSID</name>
<brief>SPL-Statussignale</brief>
<description>Status des Kreuzweisen Datenvergleichs zwischen NCK und PLC (SPL-KDV).
Wenn der Wert ungleich Null ist, ist ein Fehler im SPL-KDV aufgetreten.
Bedeutung Bit 0...5  = 1: KDV-Fehler in Eingangs-/Ausgangs-Signalen, Merkern oder dynamischen Daten der FSENDDP/FRECVDP-Kommunikation
Bit 6...25 = 0: nicht belegt
Bit 26 = 1: Fehler in PROFIsafe-Kommunikation aufgetreten
Bit 27 = 1: KDV-Fehler in statischen Daten
Bit 28 = 1: KDV-Fehler "SPL-Schutz-Status" (Status $MN_PREVENT_SYNACT_LOCK ungleich DB18 DBX36.0 (SPL READY))
Bit 29 = 1: Zeitfehler in Kommunikation zwischen NCK und PLC (in 5 sec werden alle ext.NCK-SPL-Ausgänge auf Null gesetzt, die PLC geht in Stop)
Bit 30 = 1: Stop von PLC an NCK gemeldet
Bit 31 = 0: nicht belegt
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_CMDSI</name>
<brief>Steuersignale SPL-KDV</brief>
<description>Steuerwort für den Kreuzweisen Datenvergleich zwischen NCK und PLC (SPL-KDV).

$A_CMDSI[1]: Zeit für Signal-Änderungsüberwachung auf 10 s erhöhen.

Nur aus SPL (Programm SAFE.SPF) schreibbar
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_LEVELSID</name>
<brief>SPL-KDV-Füllstand</brief>
<description>Anzeige des Füllstands der Signal-Änderungsüberwachung im Kreuzweisen Datenvergleich zwischen NCK- und PLC-SPL (SPL-KDV).
Gibt die Anzahl der momentan zur Überprüfung durch den Kreuzweisen Datenvergleich vermerkten Signale an. Dieser Wert ist bereits ungleich Null, wenn ein SPL-Signal unterschiedlichen Pegel auf NCK und PLC aufweist, die erlaubte Diskrepanzzeit für die Signale (2 sec) aber noch nicht abgelaufen ist.
</description>
</parameter>

<parameter type="INT" dim="0">
<name>$A_XFAULTSI</name>
<brief>KDV-Status</brief>
<description>Information über Stop F bei einer Safety-Achse:
Bit 0 = 1:  Im Kreuzvergleich zwischen NCK und Antrieb einer beliebigen Safety-Achse wurde ein Istwertfehler aufgedeckt.
Bit 1 = 1:  Im Kreuzvergleich zwischen NCK und Antrieb einer beliebigen Achse wurde irgendein Fehler aufgedeckt und die Wartezeit (&lt;&gt;0) bis zur Auslösung von Stop B in dieser Achse läuft oder ist abgelaufen ($MA_SAFE_STOP_SWITCH_TIME_F).
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_PLCSIIN</name>
<brief>SPL-Signal von PLC an NCK</brief>
<description>Einkanalige Signale von PLC-SPL (DB18) an NCK-SPL.

Anwendung:
$A_MARKERSI[1] = $A_PLCSIIN[1]   ; Meldung von PLC-SPL
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_PLCSIOUT</name>
<brief>SPL-Signal von NCK an PLC</brief>
<description>Einkanalige Signale von NCK-SPL an PLC-SPL (DB18).

Anwendung:
$A_PLCSIOUT[1] = $A_MARKERSI[1]       ; Meldung an PLC-SPL

Nur aus SPL (Programm SAFE.SPF) schreibbar
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_FSDP_ERR_REAC</name>
<brief>Reaktion auf Kommunikationsfehler F_SENDDP</brief>
<description>Über die Systemvariable wird die Reaktion bei Auftreten eines Kommunikationsfehlers eingestellt. Abhängig von der aktuellen Abhängigkeit der beiden an der F_DP-Kommunikationsbeziehung beteiligten Anlagenkomponenten, kann die Reaktion auf einen Kommunikationsfehler hervorgerufen durch eine Störung auf dem Kommunikationsweg oder durch ein bewusstes Abschalten einer der Anlagenkomponenten, gezielt vorgegeben werden.
0 = Alarm 27350 + Stop D/E
1 = Alarm 27350
2 = Alarm 27351 (nur Anzeige, selbstlöschend)
3 = es wird kein Alarm angezeigt
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_FSDP_ERROR</name>
<brief>Kommunikationsfehler F_SENDDP</brief>
<description>Über die Systemvariable wird mitgeteilt, dass ein Kommunikationsfehler vorliegt. Die von F_SENDDP ermittelte Fehlerursache ist in den Diagnosedaten $A_FSDP_DIAG enthalten.
TRUE = Kommunikationsfehler
FALSE = Normalbetrieb
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_FSDP_SUBS_ON</name>
<brief>Ersatzwerte im Empfänger aktiv</brief>
<description>Über die Systemvariable wird mitgeteilt, dass am F_RECVDP (Empfänger) Ersatzwerte an die Applikation ausgegeben werden.
TRUE = Ausgabe von Ersatzwerten
FALSE = Ausgabe von Prozesswerten
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_FSDP_DIAG</name>
<brief>Ursache des Kommunikationsfehler F_SENDDP</brief>
<description>Über die Systemvariable wird die von F_SENDDP ermittelte Ursache des Kommunikations- (Bit 4 - 5) bzw. Systemfehlers (Bit 13 - 15) angezeigt.
Bit 0 - 3: reserviert
Bit 4:  1 = Timeout erkannt
Bit 5:  1 = Sequenznummernfehler erkannt
Bit 6:  1 = CRC-Fehler erkannt
Bit 7 - 12: reserviert
Bit 13: 1 = Abweichungen in den F-Telegrammdaten (TelegramDiscrepancy)
Bit 14: 1 = Lebenszeichenüberwachung (LifeSign)
Bit 15: 1 = Asynchroner Fehlerzustand (StateFault)
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_FRDP_SUBS</name>
<brief>Ersatzwert F_RECVDP</brief>
<description>Über die Systemvariable werden die Ersatzwerte vorgegeben, die an die SPL in folgenden Zuständen ausgegeben werden:
- Anlauf der zyklischen Kommunikation
- Kommunikationsfehler
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_FRDP_ERR_REAC</name>
<brief>Reaktion auf Kommunikationsfehler F_RECVDP</brief>
<description>Über die Systemvariable wird die Reaktion bei Auftreten eines Kommunikationsfehlers eingestellt. Abhängig von der aktuellen Abhängigkeit der beiden an der F_DP-Kommunikationsbeziehung beteiligten Anlagenkomponenten, kann die Reaktion auf einen Kommunikationsfehler hervorgerufen durch eine Störung auf dem Kommunikationsweg oder durch ein bewusstes Abschalten einer der Anlagenkomponenten, gezielt vorgegeben werden.
0 = Alarm 27350 + Stop D/E
1 = Alarm 27350
2 = Alarm 27351 (nur Anzeige, selbstlöschend)
3 = es wird kein Alarm angezeigt
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_FRDP_ERROR</name>
<brief>Kommunikationsfehler F_RECVDP</brief>
<description>Über die Systemvariable wird mitgeteilt, dass ein Kommunikationsfehler vorliegt. Die von F_RECVDP ermittelte Fehlerursache ist in den Diagnosedaten $A_FRDP_DIAG enthalten.
TRUE = Kommunikationsfehler
FALSE = Normalbetrieb
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_FRDP_SUBS_ON</name>
<brief>Ersatzwerte aktiv</brief>
<description>Über die Systemvariable wird mitgeteilt, dass Ersatzwerte an die Applikation ausgegeben werden.
TRUE = Ausgabe von Ersatzwerten
FALSE = Ausgabe von Prozesswerten
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_FRDP_ACK_REQ</name>
<brief>Anwenderquittierung angefordert</brief>
<description>Über die Systemvariable wird mitgeteilt, dass nach einem Kommunikationsfehler wieder fehlerfrei zyklisch F-Telegramme ausgetauscht werden und zur Quittierung des Fehlers und zur Ausgabe der Prozesswerte noch die Anwenderquittierung über Nahtstellensignal DB18.FRDP_ACK_REI oder Kanal_1-Reset erforderlich ist.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_FRDP_DIAG</name>
<brief>Ursache des Kommunikationsfehler F_RECVDP</brief>
<description>Über die Systemvariable wird die von F_RECVDP ermittelte Ursache des Kommunikations- (Bit 4 - 5) bzw. Systemfehlers (Bit 13 - 15) angezeigt.
Bit 0 - 3: reserviert
Bit 4:  1 = Timeout erkannt
Bit 5:  1 = Sequenznummernfehler erkannt
Bit 6:  1 = CRC-Fehler erkannt
Bit 7 - 12: reserviert
Bit 13: 1 = Abweichungen in den F-Telegrammdaten (TelegramDiscrepancy)
Bit 14: 1 = Lebenszeichenüberwachung (LifeSign)
Bit 15: 1 = Asynchroner Fehlerzustand (StateFault)
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$A_FRDP_SENDMODE</name>
<brief>Sicherheitsbetrieb im Kommunikationspartner inaktiv</brief>
<description>Über die Systemvariable wird die aktuelle Betriebsart der F-CPU des F_SENDDP-Kommunikationspartners angezeigt:
TRUE = die F-CPU befindet sich im deaktivierten Sicherheitsbetrieb
FALSE = die F-CPU befindet sich im Sicherheitsbetrieb
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VA_IS</name>
<brief>Sichere  Istposition NCK</brief>
<description>Die Variable $VA_IS[&lt;Achse&gt;] liefert die sichere Istposition NCK-Überwachungskanal.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VA_STOPSI</name>
<brief>Stop von Safety Integrated</brief>
<description>Die Variable $VA_STOPSI[&lt;Achse&gt;] liefert den aktuellen Safety Integrated Stop der jeweiligen Achse.

Wert Bedeutung
-1   kein Stop
 0   Stop A
 1   Stop B
 2   Stop C
 3   Stop D
 4   Stop E
 5   Stop F
10   Teststop NC
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VA_XFAULTSI</name>
<brief>Stop F durch Kreuzvergleichsfehler aktiv</brief>
<description>Die Variable $VA_XFAULTSI[&lt;Achse&gt;] liefert Informationen über Safety Integrated Stop F bei dieser Achse:
Bit 0 = 1: Im Kreuzvergleich zwischen NCK und Antrieb wurde ein Istwertfehler aufgedeckt.
Bit 1 = 1: Im Kreuzvergleich zwischen NCK und Antrieb wurde irgendein Fehler aufgedeckt und die Wartezeit (&lt;&gt;0) bis zur Auslösung von Stop B ($MA_SAFE_STOP_SWITCH_TIME_F) läuft oder ist abgelaufen
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VA_SAFE_TYPE</name>
<brief>axiale Safety-Betriebsart</brief>
<description>Die Variable $VA_SAFE_TYPE[&lt;Achse&gt;] liefert Informationen über die aktive Safety Integrated Betriebsart dieser Achse:
= 0: keine Safety Integrated Bewegungsüberwachungen aktiv.
= 1: Safety Integrated NCK-integrierte Bewegungsüberwachungen aktiv.
= 2: Safety Integrated Drive Based Bewegungsüberwachungen aktiv.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>SYG_RM</name>
<brief>Synact-Parameter Real für GUD2-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens vier GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>SYG_IM</name>
<brief>Synact-Parameter Integer für GUD2-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens vier GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>SYG_BM</name>
<brief>Synact-Parameter BOOL für GUD2-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens vier GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>SYG_AM</name>
<brief>Synact-Parameter AXIS für GUD2-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens vier GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>SYG_CM</name>
<brief>Synact-Parameter CHAR für GUD2-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens vier GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>SYG_SM</name>
<brief>Synact-Parameter STRING für GUD2-Baustein</brief>
<description>Die maximale Stringlänge ist auf 31 Zeichen begrenzt. Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens vier GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>SYG_RU</name>
<brief>Synact-Parameter Real für UGUD-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens drei GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>SYG_IU</name>
<brief>Synact-Parameter Integer für UGUD-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens drei GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>SYG_BU</name>
<brief>Synact-Parameter BOOL für UGUD-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens drei GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>SYG_AU</name>
<brief>Synact-Parameter AXIS für UGUD-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens drei GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>SYG_CU</name>
<brief>Synact-Parameter CHAR für UGUD-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens drei GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>SYG_SU</name>
<brief>Synact-Parameter STRING für UGUD-Baustein</brief>
<description>Die maximale Stringlänge ist auf 31 Zeichen begrenzt.
Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens drei GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>SYG_R4</name>
<brief>Synact-Parameter Real für GUD4-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens vier GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>SYG_I4</name>
<brief>Synact-Parameter Integer für GUD4-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens vier GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>SYG_B4</name>
<brief>Synact-Parameter BOOL für GUD4-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens vier GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>SYG_A4</name>
<brief>Synact-Parameter AXIS für GUD4-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens vier GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>SYG_C4</name>
<brief>Synact-Parameter CHAR für GUD4-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens vier GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>SYG_S4</name>
<brief>Synact-Parameter STRING für GUD4-Baustein</brief>
<description>Die maximale Stringlänge ist auf 31 Zeichen begrenzt.
Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens vier GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>SYG_R5</name>
<brief>Synact-Parameter Real für GUD5-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens fünf GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>SYG_I5</name>
<brief>Synact-Parameter Integer für GUD5-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens fünf GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>SYG_B5</name>
<brief>Synact-Parameter BOOL für GUD5-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens fünf GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>SYG_A5</name>
<brief>Synact-Parameter AXIS für GUD5-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens fünf GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>SYG_C5</name>
<brief>Synact-Parameter CHAR für GUD5-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens fünf GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>SYG_S5</name>
<brief>Synact-Parameter STRING für GUD5-Baustein</brief>
<description>Die maximale Stringlänge ist auf 31 Zeichen begrenzt.
Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens fünf GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>SYG_R6</name>
<brief>Synact-Parameter Real für GUD6-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens sechs GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>SYG_I6</name>
<brief>Synact-Parameter Integer für GUD6-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens sechs GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>SYG_B6</name>
<brief>Synact-Parameter BOOL für GUD6-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens sechs GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>SYG_A6</name>
<brief>Synact-Parameter AXIS für GUD6-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens sechs GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>SYG_C6</name>
<brief>Synact-Parameter CHAR für GUD6-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens sechs GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>SYG_S6</name>
<brief>Synact-Parameter STRING für GUD6-Baustein</brief>
<description>Die maximale Stringlänge ist auf 31 Zeichen begrenzt.
Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens sechs GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>SYG_R7</name>
<brief>Synact-Parameter Real für GUD7-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens sieben GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>SYG_I7</name>
<brief>Synact-Parameter Integer für GUD7-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens sieben GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>SYG_B7</name>
<brief>Synact-Parameter BOOL für GUD7-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens sieben GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>SYG_A7</name>
<brief>Synact-Parameter AXIS für GUD7-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens sieben GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>SYG_C7</name>
<brief>Synact-Parameter CHAR für GUD7-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens sieben GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>SYG_S7</name>
<brief>Synact-Parameter STRING für GUD7-Baustein</brief>
<description>Die maximale Stringlänge ist auf 31 Zeichen begrenzt.
Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens sieben GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>SYG_R8</name>
<brief>Synact-Parameter Real für GUD8-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens acht GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>SYG_I8</name>
<brief>Synact-Parameter Integer für GUD8-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens acht GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>SYG_B8</name>
<brief>Synact-Parameter BOOL für GUD8-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens acht GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>SYG_A8</name>
<brief>Synact-Parameter AXIS für GUD8-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens acht GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>SYG_C8</name>
<brief>Synact-Parameter CHAR für GUD8-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens acht GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>SYG_S8</name>
<brief>Synact-Parameter STRING für GUD8-Baustein</brief>
<description>Die maximale Stringlänge ist auf 31 Zeichen begrenzt.
Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens acht GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>SYG_R9</name>
<brief>Synact-Parameter Real für GUD9-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens neun GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>SYG_I9</name>
<brief>Synact-Parameter Integer für GUD9-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens neun GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>SYG_B9</name>
<brief>Synact-Parameter BOOL für GUD9-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens neun GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>SYG_A9</name>
<brief>Synact-Parameter AXIS für GUD9-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens neun GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>SYG_C9</name>
<brief>Synact-Parameter CHAR für GUD9-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens neun GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>SYG_S9</name>
<brief>Synact-Parameter STRING für GUD9-Baustein</brief>
<description>Die maximale Stringlänge ist auf 31 Zeichen begrenzt.
Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, müssen mindestens neun GUD-Bausteine mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>SYG_RS</name>
<brief>Synact-Parameter Real für SGUD-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, muss mindestens ein GUD-Baustein mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>SYG_IS</name>
<brief>Synact-Parameter Integer für SGUD-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, muss mindestens ein GUD-Baustein mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>SYG_BS</name>
<brief>Synact-Parameter BOOL für SGUD-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, muss mindestens ein GUD-Baustein mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="AXIS" dim="1">
<name>SYG_AS</name>
<brief>Synact-Parameter AXIS für SGUD-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, muss mindestens ein GUD-Baustein mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>SYG_CS</name>
<brief>Synact-Parameter CHAR für SGUD-Baustein</brief>
<description>Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, muss mindestens ein GUD-Baustein mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>SYG_SS</name>
<brief>Synact-Parameter STRING für SGUD-Baustein</brief>
<description>Die maximale Stringlänge ist auf 31 Zeichen begrenzt.
Den Parametern kann über REDEF eine Schutzstufe zugewiesen werden.
Damit die Parameter angelegt werden, muss mindestens ein GUD-Baustein mit MD $MN_MM_NUM_GUD_MODULES aktiviert sein.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NK_NAME</name>
<brief>Name des Kettengliedes</brief>
<description>Name des n-ten Kettengliedes einer kinematischen Kette. Die maximal mögliche Anzahl von Kettengliedern wird durch das MD $MN_MM_MAXNUM_KIN_CHAIN_ELEM eingestellt.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NK_NEXT</name>
<brief>Name des nächsten Kettengliedes</brief>
<description>Name des nächsten Kettengliedes, d.h.im Gegensatz zu der Systemvariable $NK_PARALLEL zweigt die Teilkette, auf die mit $NK_NEXT verwiesen wird, am Ende des aktuellen Kettengliedes ab.
Leerstring "" bedeutet das Ende der Kette.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NK_PARALLEL</name>
<brief>Name eines parallelen Kettengliedes</brief>
<description>Name eines Kettenglieds, das parallel zum aktuellen Kettenglied abzweigt, d.h. im Gegensatz zu der Systemvariable $NK_NEXT zweigt die Teilkette, auf die mit $NK_PARALLEL verwiesen wird, am Beginn des aktuellen Kettengliedes ab.
Leerstring "" bedeutet, dass kein paralleles Kettenglied vorhanden ist.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NK_TYPE</name>
<brief>Typ des Kettenglieds</brief>
<description>Folgende Typen sind zugelassen (keine Unterscheidung zwischen Groß- und Kleinschreibung):
"OFFSET"
"AXIS_LIN"
"AXIS_LIN_VIRT"
"AXIS_ROT"
"AXIS_ROT_VIRT"
"ROT_CONST"
"SWITCH"
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NK_OFF_DIR</name>
<brief>Offset- bzw. Richtungsvektor</brief>
<description>Beschreibt die 3 Komponenten des Offsetvektors eines konstanten Kettengliedes bzw. die Richtung der Achse eines veränderlichen Kettengliedes. Beschreibt der Vektor eine Richtung, muss der Betrag des Vektors ungleich 0 sein, ist im Übrigen bedeutungslos.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NK_AXIS</name>
<brief>Achsname, Framename</brief>
<description>Bei den Elementtypen "OFFSET" und "ROT_CONST" ($NK_TYPE) wird der Inhalt dieser Komponente nicht ausgewertet. Bei allen anderen Elementtypen muss gewährleistet, dass ein entsprechendes Element (Achse, Frame) mit dem angegebenen Namen existiert. Dabei wird zwischen Groß- und Kleinschreibung nicht unterschieden.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$NK_A_OFF</name>
<brief>Achsoffset</brief>
<description>Ist nur dann von Bedeutung, wenn das Kettenglied eine Achse beschreibt. In diesem Fall gibt dieses Element die Position der Achse im Nullpunkt an. Bei Linearachsen ist dieser Wert redundant, da er auch durch einen veränderten Offset des Vorgängergliedes ersetzt werden kann.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$NK_SWITCH_INDEX</name>
<brief>Schalterindex</brief>
<description>Liefert den Index eines Schalters in einer kinematischen Kette. Diese Systemvariable wird nur bei Kettenelementen des Typs "SWITCH" ausgewertet.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$NK_SWITCH_POS</name>
<brief>Schalterposition</brief>
<description>Zeigt an, bei welcher Position (Stellung) eines Schalters in einer kinematischen Kette eine Verbingung zwischen dem Eingang des Elements und dem Ausgang $NK_NEXT hergestellt wird.
Diese Systemvariable wird nur bei Kettenelementen des Typs "SWITCH" ausgewertet.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$NK_SWITCH</name>
<brief>Schaltersteuerung</brief>
<description>Position (Stellung) eines Schalters in einer kinematischen Kette.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NT_NAME</name>
<brief>Name des Transformationsdatensates</brief>
<description>Name des Transformationsdatensatzes n.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NT_TRAFO_TYPE</name>
<brief>Transformationstyp</brief>
<description>Typ der Transformation für den der Transformationsdatensatz gilt. Für den Inhalt dieses Systemdatums sind nur bestimmte, reservierte Schlüsselwörter zulässig.

Die gültigen Schlüsselwörter sind derzeit:
- TRAORI         für dynamische Orientierungstransformationen
- TRAORI_STAT    für statische Orientierungstransformationen
- TRAANG_K       für Transformationen ohne Orientierungsachsen. Die Geometrieachsen müssen nicht senkrecht aufeinander stehen (Schräge-Achse-Transformation).
- TRANSMIT_K     für Polartransformationen
- TRAFO_OEM      für OEM Transformationen, die in einem CC implementiert sind, jedoch ohne Orientierungsachsen.
- TRAFO_OEM_ORI  für OEM Transformationen, die in einem CC implementiert sind, mit Orientierungsachsen.
- TRACON_K       für verkettete Transformationen, die Teiltransformationen sind mit $NT_TRACON_CHAIN[i] anzugeben.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NT_T_CHAIN_LAST_ELEM</name>
<brief>Letztes Elem. der   kin. Kette zum Werkzeug</brief>
<description>Name eines Elements in der kinematischen Beschreibung der Maschine. Mit diesem Kettenelement wird das letzte Glied einer kinematischen Kette bezeichnet. Es definiert den Punkt der Transformation, an dem das Werkzeug ansetzt.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NT_P_CHAIN_LAST_ELEM</name>
<brief>Letztes Element der kin. Kette zum Werkstück</brief>
<description>Name eines Elements in der kinematischen Beschreibung der Maschine. Mit diesem Kettenelement wird das letzte Glied einer kinematischen Kette bezeichnet. Es definiert den Werkstücknullpunkt.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NT_T_REF_ELEM</name>
<brief>Referenzpunkt für Werkzeuglängenberechnung</brief>
<description>Diese Systemvariable bezeichnet den Referenzpunkt für die Werkzeuglängenberechnung (Werkzeugreferenzpunkt). Der Werkzeugreferenzpunkt ist der Anfangspunkt des bezeichneten kinematischen Elements. Der Werkzeugreferenzpunkt definiert den Punkt in der kinematischen Kette, an dem Werkzeugverschleißkomponenten eingerechnet werden können, deren Orientierung gegenüber den Grundlängenkomponenten gedreht sein können, siehe dazu die Beschreibung der G-Codes der Gruppe 56 (Einrechnung Werkzeugverschleißes).
Ist die Systemvariable nicht leer, muss sie den Namen eines Kettenelements enthalten, das Bestandteil der aktuellen Kette zum Werkzeug ist.
</description>
</parameter>

<parameter type="STRING" dim="3">
<name>$NT_GEO_AX_NAME</name>
<brief>Namen der Linearachsen</brief>
<description>Mit diesem Systemdatum wird auf maximal 3 Maschinenachsen verwiesen. Es enthält die Namen der Kettenglieder ($NK_NAME), die die Achsen definieren, die die Ausgleichsbewegungen ausführen müssen, die sich aus einer kinematischen Transformation ergeben. Diese Achsen können sowohl Linearachsen (z.B. bei allen Orientierungstransformationen) als auch Rundachsen (z.B. die Rundachse bei TRANSMIT) sein. Die Reihenfolge, dieser Achsen definiert die Zuordnung der Geometrieachsen zu den Kanalachsen entsprechenden dem Maschinendatum $MC_AXCONF_GEO_AX_ASSIGN_TAB.

Beispiel:
Das Systemdatum $NT_GEO_AX_NAME[n,1] verweist auf ein Kettenglied, das die rotatorische Maschinenachse C1 enthält. C1 sei im aktuellen Kanal die 7. Achse. Dieser Eintrag ist dann bei aktiver Transformation gleichbedeutend mit dem Eintrag $MC_AXCONF_GEOAX_ASSIGN_TAB[1] = 7 bei ausgeschalteter Transformation.
</description>
</parameter>

<parameter type="STRING" dim="3">
<name>$NT_ROT_AX_NAME</name>
<brief>Namen der Rundachsen</brief>
<description>Mit diesem Systemdatum wird auf maximal 3 Achsen verwiesen, die zur Einstellung der Orientierung dienen. Es enthält die Namen der Kettenglieder ($NK_NAME), die diejenigen Maschinenachsen (Rundachsen) definieren, die die Orientierungsbewegungen ausführen müs sen, die sich aus einer kinematischen Transformation ergeben. Die Reihenfolge, in der die maximal drei Rundachsen in diesem Systemdatum enthalten sind, ist für die Maschinenkinematik bedeutungslos, da diese aus der Struktur der kinematischen Ketten abgeleitet wird. Sie definiert aber, die Reihenfolge, mit der andere Variable, die sich ebenfalls auf die Rundachsen beziehen (z.B. die Hirth-Paramter), auf die Rundachsen zugreifen.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NT_ROT_AX_POS</name>
<brief>Postion einer manuellen rundachse</brief>
<description>Diese Systemvariable ist nur dann von Bedeutung, wenn die Rundachse, auf die sie sich bezieht ($NT_ROT_AX_NAME) eine manuelle Rundachse ist. In diesem Fall ergibt sich die Rundachsposition als die Summe dieser Systemvariablen und der Systemvariablen $NK_A_OFF und $NK_A_OFF_FINE des betreffenden kinematischen Kettenelements.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NT_HIRTH_OFF</name>
<brief>Offset der Hirth-Verzahnung</brief>
<description>Eine Hirthverzahnung ist für eine Rundachse dann aktiv, wenn das zugehörige Systemdatum $NT_HIRT_INC[n, i] einen Wert ungleich 0 enthält. Bei einer vorgegebenen Sollposition PHIsoll einer Rundachse ergibt sich der tatsächlich eingestellte Winkel zu

   PHIist = $NT_HIRTH_OFF[n, i] + k * $NT_HIRTH_INC

wobei k eine ganze Zahl ist und so gewählt wird, dass die Differenz zwischen PHIist und PHIsoll minimal wird.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NT_HIRTH_INC</name>
<brief>Inkrementschritt der Hirth-Verzahnung</brief>
<description>Eine Hirthverzahnung ist für eine Rundachse dann aktiv, wenn dieses Systemdatum einen Wert ungleich 0 enthält. Bei einer vorgegebenen Sollposition PHIsoll einer Rundachse ergibt sich der tatsächlich eingestellte Winkel zu

    PHIist = $NT_HIRTH_OFF[n, i] + k * $NT_HIRTH_INC

wobei k eine ganze Zahl ist und so gewählt wird, dass die Differenz zwischen PHIist und PHIsoll minimal wird.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NT_ROT_AX_MIN</name>
<brief>Minimalposition einer Rundachse</brief>
<description>Diese Systemvariable wird nur dann ausgewertet, wenn nicht $NT_ROT_AX_MIN[n, i] und $NT_ROT_AX_MAX[n,i] beide Null sind. In diesem Fall gibt sie die minimal zulässige Position der Rundachse an, auf die mit $NT_ROT_AX_NAME[n, i] verwiesen wird.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NT_ROT_AX_MAX</name>
<brief>Maximalposition einer Rundachse</brief>
<description>Diese Systemvariable wird nur dann ausgewertet, wenn nicht $NT_ROT_AX_MIN[n, i] und $NT_ROT_AX_MAX[n,i] beide Null sind. In diesem Fall gibt sie die maximal zulässige Position der Rundachse an, auf die mit $NT_ROT_AX_NAME[n, i] verwiesen wird.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NT_BASE_ORIENT</name>
<brief>Vektor der Werkzeuggrundorientierung bei Orientierungstransformationen</brief>
<description>Gibt Vektor der Werkzeugorientierung bei einer allgemeinen Orientierungstransformation an. Der Vektor wird nur dann wirksam, wenn die Werkzeugorientierung nicht beim Aufruf der Transformation angegeben oder aus einem programmierten Werkzeug gelesen wird. Der Betrag des Vektors ist beliebig, muss aber ungleich Null sein.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NT_BASE_ORIENT_NORMAL</name>
<brief>Normalenvektor bei Orientierungstrafos mit 3 Orientierungsfreiheitsgraden</brief>
<description>Gibt einen Vektor an, der bei Orientierungstransformationen mit 3 Freiheitsgeraden der Orientierung senkrecht auf der Werkzeugorientierung ($NT_BASE_ORIENT) steht. Der Vektor wird nur dann wirksam, wenn die Werkzeugorientierung nicht beim Aufruf der Transformation angegeben oder aus einem programmierten Werkzeug gelesen wird. Der Betrag des Vektors ist beliebig, muss aber ungleich Null sein. Sind $NT_BASE_ORIENT_NORMAL und $NT_BASE_ORIENT nicht orthogonal aber auch nicht parallel, so werden die beiden Vektoren orthogonalisiert indem der Normalenvektor modifiziert wird. Der Normalenvektor wird dabei in der Ebene, die von beiden Vektoren aufgespannt wird, so gedreht, dass die beiden Vektoren aufeinander senkrecht stehen. Die beiden genannten Vektoren dürfen nicht parallel sein.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$NT_POLE_LIMIT</name>
<brief>Endwinkeltoleranz bei Interpolation durch Pol für 5/6-Achstrafo</brief>
<description>Diese Systemvariable kennzeichnet eine Endwinkeltoleranz für die fünfte Achse der ersten 5-Achs-Transformation mit folgenden Eigenschaften:

Bei der Interpolation durch einen Polpunkt der Orientierung bewegt sich nur die 2. Rundachse Achse, die 2. Rundachse behält ihre Start position bei. Wird eine Bewegung programmiert, die nicht exakt durch den Polpunkt, aber innerhalb des durch MD: TRAFO5_NON_POLE_LIMIT gegebenen Bereichs in der Nähe des Pols verlaufen soll, wird von der vorgegebenen Bahn abgewichen, da die Interpolation exakt durch den Polpunkt verläuft. Dadurch ergibt sich im Endpunkt der vierten Achse (der Polachse) eine Positionsabweichung gegenüber dem programmierten Wert.

Diese Systemvariable gibt den Winkel an, um den die Polachse bei der 5-Achs-Transformation vom programmierten Wert abweichen darf, wenn von der programmierten Interpolation auf die Interpolation durch den Polpunkt umgeschaltet wird. Ergibt sich eine größere Abweichung, wird eine Fehlermeldung ausgegeben (Alarm 14112) und die Interpolation nicht durchgeführt.

Nicht relevant:
- wenn die Option "5-Achs-Transformation" nicht installiert ist.
- bei Programmierung im Maschinenkoordinatensystem ORIMKS.

Korrespondiert mit:
MD: TRAFO5_NON_POLE_LIMIT_n
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$NT_POLE_TOL</name>
<brief>Endwinkeltoleranz bei Pol-Interpolation</brief>
<description>Endwinkel-Toleranz bei Interpolation durch den Pol für 1. 5/6-Achs-Transformation. Diese Systemvariable wird nur von der generischen 5/6-Achs Transformation ausgewertet. Liegt die Endorientierung innerhalb des Polkegels und innerhalb des mit dieser Systemvariable angegebenen Toleranzkegels, bewegt sich die Polachse nicht und behält ihre Startpositionen bei. Die andere Rundachse nimmt dagegen den programmierten Winkel an. Dadurch gibt es eine Abweichung der Endorientierung von der programmierten Orientierung. Maximal wirksamer Wert dieser Systemvariable ist der Wert des MD TRAFO5_POLE_LIMIT_1 mit dem der Polkegel festgelegt wird.
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>$NT_ROT_OFFSET_FROM_FRAME</name>
<brief>Rundachsoffset bei Trafoanwahl aus NPV übernehmen</brief>
<description>Für Orientierungstransformationen:
Ist der Inhalt dieses Datum ungleich Null, wird der programmierbare Offset für Orientierungsachsen automatisch aus der bei Einschalten einer Orientierungstransformation für die Orientierungsachsen aktiven Nullpunktsverschiebung übernommen.

Für Transmit:
0:   axiale Verschiebung der Rundachse wird nicht berücksichtigt.
1:   axiale Verschiebung der Rundachse wird berücksichtigt.
2:   axiale Verschiebung der Rundachse wird bis zum ENS berücksichtigt.
     Die ENS-Frames enthalten transformierte Drehungen um die Rundachse.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$NT_IGNORE_TOOL_ORIENT</name>
<brief>Werkzeugorientierung aus $NT_BASE_ORIENT lesen</brief>
<description>Jedes Werkzeug hat eine definierte Werkzeugorientierung, die normalerweise bei der Orientierungsprogrammierung der Berechnung der Bewegungen bzw. Endpunkte der Orientierungsachsen zu Grunde gelegt wird. Ist dieses Systemdatum gesetzt, wird auch bei aktivem Werkzeug nicht die Werkzeugorientierung sondern die in den Systemdaten $NT_BASE_ORIENT / $NT_BASE_ORIENT_NORMAL enthal tene Orientierung verwendet.
</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$NT_TRAFO_INCLUDES_TOOL</name>
<brief>Werkzeugbehandlung bei aktiver Transformation</brief>
<description>Diese Systemvariable gibt an, ob das Werkzeug bei einer aktiven Transformation intern oder extern behandelt wird. Sie wird nur bei bestimmten Transformationen ausgewertet. Bedingung für eine mögliche Auswertung ist, dass die Orientierung des Werkzeugs in Bezug auf das Basikoordinatensystem durch die Transformation nicht verändert werden kann. Bei den Standardtransformationen ist diese Bedingung nur für die "Schräge-Achse-Transformation" erfüllt.Ist diese Systemvariable gesetzt, bezieht sich das Basiskoordinatensystem (BKS) auch bei aktiver Transformation auf den Werkzeugbezugspunkt, während es sich andernfalls auf die Werkzeugspitze (Tool Center Point - TCP) bezieht. Entsprechend unterschiedlich ist die Wirkungsweise von Schutzbereichen und Arbeitsfeldbegrenzungen.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NT_AUX_POS</name>
<brief>Hilfsposition</brief>
<description>Diese Systemvariable enthält einen Positionsvektor zur Verwendung durch die Messzyklen. Er hat innerhalb NCK keine Bedeutung.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$NT_IDENT</name>
<brief>Kennung</brief>
<description>Diese Systemvariable enthält eine numerische Kennung zur Kennzeichnung eines Transformationsdatensatzes zur Verwendung durch die Messzyklen.
Sie haben innerhalb NCK keine Bedeutung.
</description>
</parameter>

<parameter type="STRING" dim="3">
<name>$NT_CORR_ELEM_T</name>
<brief>Namen der Korrekturelemente</brief>
<description>Mit diesem Systemdatum wird auf maximal 4 konstante Kettenelemente ($NK_NAME) in der Tool-Kette verwiesen, die zur Aufnahme von Korrekturwerten (linearen Offsets), wie sie z.B. in Messzyklen ermittelt werden, vorgesehen sind. Es ist (vorerst) nur bei Orientierungstransformationen von Bedeutung.

Zwischen zwei dieser Elemente muss in der kinematischen Kette immer eine Orientierungsachse liegen. Das bedeutet, dass nur bei 6-Achs-Transformationen, bei denen alle 3 Orientierungsachsen in der Tool-Kette definiert sind, alle 4 Kettenelemente auch belegt sein können, während z.B. bei 5-Achstransformationen dieses Systemdatum nur maximal drei Einträge enthalten darf.

Die gesamte kinematische Kette vom Maschinennullpunkt (Bezugspunkt der kinematischen Kette) bis zur Werkzeugaufnahme wird durch die Orientierungsachsen in maximal 4 Abschnitte geteilt. In jedem dieser Abschnitte kann es maximal ein Korrekturelement geben. Das  Korrekturelement mit dem Index n muss im n-ten Abschnitt liegen (Beispiel: $NT_CORR_ELEM_T[k, 1] muss auf eine Kettenelement zwischen der ersten und der zweiten Orientierungsachse der Tool-Kette verweisen).
</description>
</parameter>

<parameter type="STRING" dim="3">
<name>$NT_CORR_ELEM_P</name>
<brief>Namen der Korrekturelemente</brief>
<description>Mit diesem Systemdatum wird auf maximal 4 konstante Kettenelemente ($NK_NAME) in der Part-Kette verwiesen, die zur Aufnahme von Korrekturwerten (linearen Offsets), wie sie z.B. in Messzyklen ermittelt werden, vorgesehen sind. Es ist (vorerst) nur bei Orientierungstransformationen von Bedeutung.

Zwischen zwei dieser Elemente muss in der kinematischen Kette immer eine Orientierungsachse liegen. Das bedeutet, dass nur bei 6-Achs-Transformationen, bei denen alle 3 Orientierungsachsen in der Tool-Kette definiert sind, alle 4 Kettenelemente auch belegt sein können, während z.B. bei 5-Achstransformationen dieses Systemdatum nur maximal drei Einträge enthalten darf.

Die gesamte kinematische Kette vom Maschinennullpunkt (Bezugspunkt der kinematischen Kette) bis zur Werkstücknullpunkt wird durch die Orientierungsachsen in maximal 4 Abschnitte geteilt. In jedem dieser Abschnitte kann es maximal ein Korrekturelement geben. Das Korrekturelement mit dem Index n muss im n-ten Abschnitt liegen (Beispiel: $NT_CORR_ELEM_P[k, 1] muss auf eine Kettenelement zwischen der ersten und der zweiten Orientierungsachse in der Part-Kette verweisen).
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$NT_CNTRL</name>
<brief>bitcodiertes Steuerwort</brief>
<description>Dieses Systemdatum ist ein bitcodiertes Steuerwort, mit dem das Verhalten in bestimmten Situationen beeinflusst werden kann.

Die einzelnen Bits haben die folgenden Bedeutungen:

Bit 0:
Nicht belegt

Bit 1 - 3:
Die Orientierungsachse, die dem Bit zugeordnet ist (Bit 1: erste Orientierungsachse, Bit 2: zweite Orientierungsache, Bit 3: dritte Orientierungsachse) wird als drehzahlgesteuerte Spindel interpretiert.
Derzeit werden nur die Fälle unterstützt, dass entweder die erste oder die dritte Orientierungsachse als Spindel parametriert ist (Drehen auf Fräsmaschinen bzw. 5-Achs-Fräsen auf Maschinen, bei denen die dritte Orientierungsachse nicht lagegeregelt betrieben wird).

Bit 4 - 6:
Die Orientierungsachse, die dem Bit zugeordnet ist (Bit 4: erste Orientierungsachse, Bit 5: zweite Orientierungsachse, Bit 6: dritte Orientierungsachse) ist Hirth-verzahnt. Für die Hirthverzahnung werden nur die Maschinendaten $MA_INDEX_AX_NUMERATOR, $MA_INDEX_AX_DENOMINATOR und $MA_INDEX_AX_OFFSET ausgewertet. Der Inhalt des Maschinendatums $MA_HIRTH_IS_ACTIVE wird nicht ausgewertet, d.h. die Achse muss nicht als echte Hirthachse parametriert sein.

Ist die Achse als Moduloachse parametriert, wird das Maschinendatum $MA_INDEX_AX_NUMERATOR durch das Maschinendatum $MA_MODULO_RANGE ersetzt. Die Abstände der zulässigen Achspositionen ergeben sich dann durch $MA_MODULO_RANGE / $MA_INDEX_AX_DENOMINATOR. Das Maschinendatum $MA_INDEX_AX_OFFSET wird auch bei Moduloachsen ausgewertet.

Bit 7 - 8:
Sind diese Bits gesetzt, werden an den Startpunkten der Teilketten (Bit7: Part-Kette; Bit 8: Tool-Kette) bei Bedarf intern automatisch zusätzliche konstante Kettenelemente eingefügt, die eine Verbindung vom Endpunkt der Kette zum Maschinennullpunkt herstellen ("Kette schließen").

Bit 12 - 15:
Reserviert für OEM Transformationen. Diese Bits können bei den verschiedenen OEM Transformationen unterschiedliche Bedeutungen haben.

Bit 12:
Aktiviert für eine OEM Orientierungstransformation eine Standard Polbehandlung, die sich nur auf die Orientierung bezieht.

Bit 16 - 31:
Nicht belegt
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NT_CLOSE_CHAIN_P</name>
<brief>Punkt zum Schließen der Part-Kette.</brief>
<description>Dieses Systemdatum verweist auf ein Element der kinematischen Kette, dessen Endpunkt als Bezugspunkt für das "Schließen" der Part-Kette dient. Beim Schließen der kinematischen Kette wird am Startpunkt ein solches Offset-Element eingefügt, dass bei Nullstellung aller Achsen der genannte Bezugspunkt mit dem Startpunkt der Kette zusammenfällt. Ist das Systemdatum leer, ist der Endpunkt der Kette der Bezugspunkt.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NT_CLOSE_CHAIN_T</name>
<brief>Punkt zum Schließen der Tool-Kette.</brief>
<description>Dieses Systemdatum verweist auf ein Element der kinematischen Kette, dessen Endpunkt als Bezugspunkt für das "Schließen" der Part-Kette dient. Beim Schließen der kinematischen Kette wird am Startpunkt ein solches Offset-Element eingefügt, dass bei Nullstellung aller Achsen der genannte Bezugspunkt mit dem Startpunkt der Kette zusammenfällt. Ist das Systemdatum leer, ist der Endpunkt der Kette der Bezugspunkt.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$NT_TRAFO_INDEX</name>
<brief>Index für Trafoaufruf mit herkömmlicher Syntax</brief>
<description>Statt mit dem Aufruf TRAFOON(&lt;Name&gt;) kann eine mit kinematischen Ketten definierte Transformation auch mit konventionellen Sprach befehlen wie z.B. TRAORI(&lt;n&gt;) oder TRANSMIT(&lt;n&gt;) aktiviert werden, wenn in diesem Systemdatum ein Wert ungleich Null eingetragen ist.

Der Inhalt der Systemvariable ist dezimal-codiert. Die Dezimalstellen haben die folgenden Bedeutungen:

Einerstelle:
Definiert den Trafotyp, bei dem der konventionelle Transformationsaufruf auf eine mit kinematischen Ketten definierte Transformation umgeleitet werden soll. Dabei gelten die folgenden Zuordnungen:
   1: TRAORI
   2: TRANSMIT
   3: TRACYL
   4: TRAANG
   5: TRACON

Zehner- und Hunderterstelle:
Trafonummer (zweistellig)

Tausender- und Zehntausenderstelle:
Nummer des Kanals, in dem der konventionelle Transformationsaufruf auf eine mit kinematischen Ketten definierte Transformation umgeleitet werden soll. Der Eintrag 0 ist äquivalent zum Eintrag 1, d.h. die Definition gilt automatisch für den ersten Kanal, falls die Kanalnummer nicht explizit bezeichnet wird.

Damit eine mit kinematischen Ketten definierte Transformation mit einem konventionellen Sprachbefehl aufgerufen werden kann, dürfen die drei niederwertigen Dezimalstellen dieses Systemdatums nicht Null sein. Die Orientierungstransformation, die mit dem Index 1 bezeichnet ist, wird aus Kompatibilitätsgründen zur herkömmlichen Aufrufsyntax aber außer mit TRAORI(1) auch mit TRAORI(0), TRAORI() oder TRAORI aktiviert. Gleiches gilt für die übrigen Transformationstypen (TRANSMIT, TRACYL, TRAANG und TRACON).

Beispiel:
Der Aufruf TRANSMIT(3) im fünften Kanal wird auf eine mit kinematischen Ketten definierte Transformation umgeleitet, die im Systemdatum $NT_TRAFO_INDEX den Eintrag 5032 enthält. Es wird nicht überprüft, ob die aufgerufene Transformation von einem Typ ist, der mit dem Trafotyp des Originalaufrufs kompatibel ist.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$NT_POLE_SIDE_FIX</name>
<brief>Einschränkung d. Arbeitsbereichs vor/hinter dem Pol bei TRANSMIT</brief>
<description>Einschränkung des Arbeitsbereiches vor/hinter dem Pol oder keine Einschränkung, d.h. Fahren durch den Pol.
Die zugewiesenen Werte haben die folgende Bedeutung:
0: Keine Einschränkung des Arbeitsbereiches. Fahren durch den Pol ist erlaubt.
1: Arbeitsbereich der Linearachse für Positionen &gt;= 0,
   (wenn Werkzeuglängenkorrektur parallel zu Linearachse = 0)
2: Arbeitsbereich der Linearachse für Positionen &lt;=0,
   (wenn Werkzeuglängenkorrektur parallel zu Linearachse = 0)
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$NT_ROT_AX_CNT</name>
<brief>Zahl der Rundachsen in der Part- bzw. Tool-Kette</brief>
<description>Diese Systemvariable kann die Zahl der relevanten Rundachsen einer Transformation in der Part-Kette (Index 0) bzw. in der Tool-Kette (Index 1) enthalten. Sie dient zur Unterstützung der Parametrierung einer Transformation mit kinematischen Ketten über die Bedieneroberfläche. Sind die Inhalte beider Komponenten -1 (Initialisierungswert), wird ihr Inhalt nicht ausgewertet. Ist der Inhalt mindestens einer Komponente ungleich Null, müssen die Inhalte beider Komponenten mit der Zahl der relevanten Rundachsen übereinstimmen, die bei der Analyse der kinematischen Ketten gefunden werden. Relevante Rundachsen in diesem Sinne sind die Rundachsen, die in der Systemvariable $NT_ROT_AX_Name definiert sind.
</description>
</parameter>

<parameter type="STRING" dim="3">
<name>$NT_TRACON_CHAIN</name>
<brief>Name der Teiltransformation</brief>
<description>Diese Systemvariable ist nur für den Transformationstyp $NT_TRAFO_TYPE[] = "TRACON_K" relevant. Damit werden die Namen der Teiltransformationen in der Reihenfolge angegeben, wie die Transformation vom BCS ins MCS ausgeführt werden soll.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NT_OEM_PAR_I</name>
<brief>Parameter für OEM-Trafo</brief>
<description>Dieser Integer-Parameter wird von OEM-Transformationen ausgewertet. Die Bedeutung der einzelnen Parameterwerte hängt von der jeweiligen OEM-Transformation ab. Die Details sind in der Dokumentation der jeweiligen OEM-Transformation beschrieben.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NT_OEM_PAR_D</name>
<brief>Parameter für OEM-Trafo</brief>
<description>Dieser Real-Parameter wird von OEM-Transformationen ausgewertet. Die Bedeutung der einzelnen Parameterwerte hängt von der jeweiligen OEM-Transformation ab. Die Details sind in der Dokumentation der jeweiligen OEM-Transformation beschrieben.
</description>
</parameter>

<parameter type="STRING" dim="3">
<name>$NT_OEM_PAR_S</name>
<brief>Parameter für OEM-Trafo</brief>
<description>Dieser STRING-Parameter wird von OEM-Transformationen ausgewertet. Die Bedeutung der einzelnen Parameterwerte hängt von der jeweiligen OEM-Transformation ab. Die Details sind in der Dokumentation der jeweiligen OEM-Transformation beschrieben.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NP_PROT_NAME</name>
<brief>Name des Schutzbereichs</brief>
<description>Name des Schutzbereichs.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NP_CHAIN_ELEM</name>
<brief>Zuordnung zu einem kin. Kettenelement</brief>
<description>Diese Systemvariable gibt an, welchem kinematischen Kettenelement ($NK_NAME[..]) der aktuelle Schutzbereich zugeordnet ist.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NP_PROT_TYPE</name>
<brief>Typ des Schutzbereichs</brief>
<description>Zulässig sind die Werte:
  "MACHINE"
  "TOOL"
  "WORKPIECE"
  "FIXTURE"
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NP_1ST_PROT</name>
<brief>Name des ersten Elements eines Schutzbereichs.</brief>
<description>Name des ersten Elements eines Schutzbereichs.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$NP_PROT_COLOR</name>
<brief>Farbe des Schutzbereichs.</brief>
<description>Daten zur Visualisierung eines Schutzbereichs.
Die niederwertigen 3 Bytes enthalten die Farbinformation im RGB-Format, das höchste Byte enthält die Information für den Alpha-Kanal (Transparenz).
Dieses Datum wird für ein Schutzbereichselement, das Teil des Schutzbereiches ist, für den dieses Datum definiert ist, nur dann wirksam, wenn für dieses kein eigener Farbparameter definiert ist (siehe das Systemdatum $NP_COLOR), d.h. die Farbdefinition für ein Schutzbereichselement hat Vorrang vor der Farbdefinition eines Schutzbereichs.
Der Standardwert ist 0 (schwarz, transparent).
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$NP_PROT_D_LEVEL</name>
<brief>Detailgrad des Schutzbereichs.</brief>
<description>Daten zur Visualisierung eines Schutzbereichs.
Dieses Datum enthält einen Integerwert, mit dem festgelegt wird, wann der betreffend Schutzbereich beim sukzessiven Bildaufbau angezeigt werden soll.
Dieses Datum wird für ein Schutzbereichselement, das Teil des Schutzbereiches ist, für den dieses Datum definiert ist, nur dann wirksam, wenn für dieses kein eigener D-Level-Parameter definiert ist (siehe das Systemdatum $NP_D_LEVEL), d.h. die D-Level-Definition für ein Schutzbereichselement hat Vorrang vor der D-Level-Definition eines Schutzbereichs.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$NP_BIT_NO</name>
<brief>Nr. des VDI-Nst.-Bits für Umschaltung aktiviert / voraktiviert.</brief>
<description>In der PLC-Nahtstelle sind 64 Bit definiert, mit denen Schutzbereiche, die mit dem Befehl PROTA(1(,.,.,.)) voraktiviert wurden, aktiviert werden können.Der Eintrag gibt an, welches Bit diesem Schutzbereich zugeordnet ist. Der Standardwert ist -1, d.h. dem Schutzbereich ist kein VDI-Nst.-Bit zugeordnet.
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>$NP_INIT_STAT</name>
<brief>Standard-Aktivierungszustand eines Schutzbereiches.</brief>
<description>Aktivierungsstatus des Schutzbereiches bei erstmaliger Anwahl ohne Angabe eines Aktivierungsstatus.
Dieser Status wird für definierte Schutzbereiche auch bei Steuerungshochlauf wirksam.

Die zulässigen Werte sind:
- Aktiviert ('A' oder 'a'),
- Inaktiviert ('I' oder 'i'),
- Voraktiviert ('P' oder 'p').

Der Standardwert ist 'I'.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$NP_INDEX</name>
<brief>Index zur Werkzeugbezeichnung</brief>
<description>Diese Komponente wird nur ausgewertet, wenn $NP_PROT_TYPE[n] einen automatisch erzeugten Schutzbereich bezeichnet ("TOOL"). Die Indizes bestimmen dann die genaue Art des automatisch erzeugten Schutzbereichs.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NP_NAME</name>
<brief>Name des Schutzbreichselements</brief>
<description>Name des Schutzbereichselements.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NP_NEXT</name>
<brief>Name des nächsten Schutzbereichselements</brief>
<description>Name des nächsten Schutzbereichselements.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NP_NEXTP</name>
<brief>Name des nächsten parallelen Schutzbereichselements</brief>
<description>Name eines weiteren (zu $NP_NEXT "parallelen") Schutzbereichselements, das auf das aktuelle Schutzbereichselement folgt.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NP_ADD</name>
<brief>Name eines additiven Schutzbereichs</brief>
<description>Name eines Schutzbereichs, der zum aktuellen Schutzbereichselement hinzugefügt wird.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$NP_COLOR</name>
<brief>Farbe des Schutzbereichselements.</brief>
<description>Daten zur Visualisierung eines Schutzbereichselements.
Zur Codierung siehe die Systemvariable $NP_PROT_COLOR. Ist der Inhalt diese Datums 0, gilt die Farbe als nicht definiert. In diesem Fall erhält das Schutzbereichselment die Farbe, die für den Schutzbereich definiert ist, in dem es enthalten ist.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$NP_D_LEVEL</name>
<brief>Detailgrad des Schutzbereichselements</brief>
<description>Daten zur Visualisierung eines Schutzbereichselements.
Ist der Inhalt diese Datums 0, gilt der Detailgrad als nicht definiert. In diesem Fall erhält das Schutzbereichselement den Detailgrad, der für den Schutzbereich definiert ist, in dem es enthalten ist.
</description>
</parameter>

<parameter type="CHAR" dim="1">
<name>$NP_USAGE</name>
<brief>Vorgesehene Verwendung des Schutzbereichs.</brief>
<description>Diese Systemvariable gibt an, ob das Schutzbereichselment visualisiert werden soll ('V'), in die Schutzbereichsüberwachung einbezogen werden soll ('C'), oder beides ('A'). Zwischen Groß- und Kleinschreibung wird nicht unterschieden.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NP_TYPE</name>
<brief>Typ des Schutzbereichselements</brief>
<description>Typ des Schutzbereichselements. Folgende Typen sind möglich:

FRAME:
Ein Element dieses Typs enthält keinen Körper, sondern definiert nur einen Frame, der für die nachfolgenden Schutzbereichsdefinitionen wirksam wird.

1. BOX (L, W, H):
Achsparalleler Quader symmetrisch zum Nullpunkt mit den Abmessungen L in X-Richtung, W in Y-Richtung und H in Z-Richtung, d.h. die Ecken des Quaders liegen bei (+/-L/2, +/-W/2, +/-H/2).

2. SPHERE (R):
Kugel im Nullpunkt mit Radius R.

3. CYLINDER (H, R):
Zylinder mit Radius R und Höhe H, Längsachse parallel zur Z-Achse. Der Mittelpunkt des Zylinders liegt im Nullpunkt, d.h. die beiden begrenzenden Kreisflächen sind parallel zur X-Y-Ebene und liegen bei +/-H/2.

4. FILE:
Gitter aus Dreiecksflächen im STL-Format.
</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$NP_FILENAME</name>
<brief>Filename eines Schutzbereichselements des Typs "FILE"</brief>
<description>Dieser Parameter wird nur ausgewertet, wenn das Schutzbereichselement vom Typ "File" ist ($NP_TYPE[..] = "FILE"). Er gibt dann den Namen des Files an, das die Beschreibung des Schutzbereichselements enthält.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NP_PARA</name>
<brief>Parameter zur Beschreibung des Typs</brief>
<description>Parameter zur Beschreibung des Schutzbereichselements. Für die unter $NP_TYPE beschriebenen Typen werden maximal 3 Parameter benötigt.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NP_OFF</name>
<brief>Offsetkomponente</brief>
<description>Komponente i (0&lt;=i&lt;=2) des Offsetvektors des Schutzbereichselements n.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$NP_DIR</name>
<brief>Richtung der Drehachse</brief>
<description>Komponenten der Drehachse für eine Koordinatendrehung des Schutzbereichselements n.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$NP_ANG</name>
<brief>Winkel einer Koordinatendrehung im Schutzbereichselement n.</brief>
<description>Winkel (in Grad) einer Koordinatendrehung im Schutzbereichselement n.
</description>
</parameter>

<parameter type="STRING" dim="3">
<name>$NP_COLL_PAIR</name>
<brief>Schutzbereichspaare</brief>
<description>Enthält die Namen zweier Schutzbereiche, die bei der Kollisionsvermeidung gegeneinander überwacht werden können.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$NP_SAFETY_DIST</name>
<brief>Sicherheitsabstand eines Schutzbereichspaares</brief>
<description>Sicherheitsabstand eines Schutzbereichspaares. Ist der Inhalt dieses Datums 0.0, wirkt der globale Sicherheitsabstand der im MD $MN_COLLISION_SAFETY_DIST enthalten ist.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_WORKAREA_CS_COORD_SYSTEM</name>
<brief>Koordinatensystem für das die Arbeitsfeldbegr. gilt</brief>
<description>Koordinatensystem, in dem die Gruppe gelten soll.
Es gelten folgende Werte:
   Arbeitsfeldbegrenzung gilt im WKS
   Arbeitsfeldbegrenzung gilt im ENS
</description>
</parameter>

<parameter type="BOOL" dim="2">
<name>$P_WORKAREA_CS_PLUS_ENABLE</name>
<brief>koordinatensystem-spezifische Arbeitsfeldbegr. plus gültig</brief>
<description>TRUE: Die Begrenzung in Plus-Richtung für die angegebene Achse von der angegebene Gruppe der koordinatensystem-spezifischen Arbeitsfeldbegrenzung ist gültig. (s. $P_WORKAREA_CS_LIMIT_PLUS[groupNo-1, &lt;Achse&gt;])
</description>
</parameter>

<parameter type="BOOL" dim="2">
<name>$P_WORKAREA_CS_MINUS_ENABLE</name>
<brief>koordinatensystem-spezifische Arbeitsfeldbegr. minus gültig</brief>
<description>TRUE: Die Begrenzung in Minus-Richtung für die angegebene Achse von der  angegebene Gruppe der koordinatensystem-spezifischen Arbeitsfeldbegrenzung ist gültig. (s. $P_WORKAREA_CS_LIMIT_MINUS[groupNo-1, &lt;Achse&gt;])
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_WORKAREA_CS_LIMIT_PLUS</name>
<brief>koordinatensystem-spezifische Arbeitsfeldbegr. plus</brief>
<description>Die Begrenzung in Plus-Richtung für die angegebene Achse von der angegebene Gruppe der koordinatensystem-spezifischen Arbeitsfeldbegrenzung. Dieser Wert nur ausgewertet, wenn $P_WORKAREA_CS_PLUS_ENABLE[groupNo-1, &lt;Achse&gt;] = TRUE ist.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_WORKAREA_CS_LIMIT_MINUS</name>
<brief>koordinatensystem-spezifische Arbeitsfeldbegr. minus</brief>
<description>Die Begrenzung in Minus-Richtung für die angegebene Achse von der angegebene Gruppe der koordinatensystem-spezifischen Arbeitsfeldbegrenzung. Dieser Wert nur ausgewertet, wenn $P_WORKAREA_CS_MINUS_ENABLE[groupNo-1, &lt;Achse&gt;] = TRUE ist.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_ISO_H</name>
<brief>ISO2 Werkzeuglängen-Korrektur</brief>
<description>Korrekturwert-Speicher für die Geometrie der Werkzeuglängenkorrektur im ISO2-Modus
Steht nur bei aktivem ISO2-Modus zur Verfügung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_ISO_HW</name>
<brief>ISO2 Werkzeuglängen-Verschleiß</brief>
<description>Korrekturwert-Speicher für den Verschleiß der Werkzeuglängenkorrektur im ISO2-Modus
Steht nur bei aktivem ISO2-Modus zur Verfügung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_ISO_D</name>
<brief>ISO2 Werkzeugradius-Korrektur</brief>
<description>Korrekturwert-Speicher für die Geometrie des Werkzeugradius im ISO2-Modus
Steht nur bei aktivem ISO2-Modus zur Verfügung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_ISO_DW</name>
<brief>ISO2 Werkzeugradius-Verschleiß</brief>
<description>Korrekturwert-Speicher für den Verschleiß des Werkzeugradius im ISO2-Modus
Steht nur bei aktivem ISO2-Modus zur Verfügung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_ISO_L1</name>
<brief>ISO3 Werkzeuglänge 1-Korrektur</brief>
<description>Korrekturwert-Speicher für die Geometrie der Werkzeuglänge 1 im ISO3-Modus
Steht nur bei aktivem ISO3-Modus zur Verfügung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_ISO_L1W</name>
<brief>ISO3 Werkzeuglänge 1-Verschleiß</brief>
<description>Korrekturwert-Speicher für den Verschleiß der Werkzeuglänge 1 im ISO3-Modus
Steht nur bei aktivem ISO3-Modus zur Verfügung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_ISO_L2</name>
<brief>ISO3 Werkzeuglänge 2-Korrektur</brief>
<description>Korrekturwert-Speicher für die Geometrie der Werkzeuglänge 2 im ISO3-Modus
Steht nur bei aktivem ISO3-Modus zur Verfügung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_ISO_L2W</name>
<brief>ISO3 Werkzeuglänge 2-Verschleiß</brief>
<description>Korrekturwert-Speicher für den Verschleiß der Werkzeuglänge 2 im ISO3-Modus
Steht nur bei aktivem ISO3-Modus zur Verfügung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_ISO_L3</name>
<brief>ISO3 Werkzeuglänge 3-Korrektur</brief>
<description>Korrekturwert-Speicher für die Geometrie der Werkzeuglänge 3 im ISO3-Modus
Steht nur bei aktivem ISO3-Modus zur Verfügung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_ISO_L3W</name>
<brief>ISO3 Werkzeuglänge 3-Verschleiß</brief>
<description>Korrekturwert-Speicher für den Verschleiß der Werkzeuglänge 3 im ISO3-Modus
Steht nur bei aktivem ISO3-Modus zur Verfügung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_ISO_R</name>
<brief>ISO3 Werkzeugradius-Korrektur</brief>
<description>Korrekturwert-Speicher für die Geometrie des Werkzeugradius im ISO3-Modus
Steht nur bei aktivem ISO3-Modus zur Verfügung
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$TC_ISO_RW</name>
<brief>ISO3 Werkzeugradius-Verschleiß</brief>
<description>Korrekturwert-Speicher für den Verschleiß des Werkzeugradius im ISO3-Modus
Steht nur bei aktivem ISO3-Modus zur Verfügung
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$TC_ISO_Q</name>
<brief>ISO3 Schneidenlage</brief>
<description>Schneidenlage im ISO3-Modus
Steht nur bei aktivem ISO3-Modus zur Verfügung
</description>
</parameter>
</info>
