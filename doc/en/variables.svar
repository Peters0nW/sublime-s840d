<?xml version="1.0" encoding="windows-1252"?>
<info svar="LIS2sl_1015_en">

<parameter type="WORD" dim="1">
<name>$AN_LANGUAGE_ON_HMI</name>
<brief>Display Language on HMI</brief>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_NCK_VERSION</name>
<brief>NCK version</brief>
<description>Only the digits before the comma of the floating point number are evaluated, the digits after the comma may contain identifiers for development-internal intermediate releases. The digits before the comma includes the official NCK identifier for the software release: For software release 3.4 the value of the variable is 34,....</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_DBB</name>
<brief>Data byte from/to the PLC</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_DBD</name>
<brief>Data double word (32 bits) from/to the PLC</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$A_DBR</name>
<brief>Real data (32 bits) from/to the PLC</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DBSB</name>
<brief>PLC data byte</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DBSW</name>
<brief>PLC data word</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_DBW</name>
<brief>Data word (16 bits) from/to the PLC</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_DLB</name>
<brief>Data byte (8 bits) in link area</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_DLD</name>
<brief>Data double word (32 bits) in link data area</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$A_DLR</name>
<brief>Read data (32 bits) in link data area</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_DLW</name>
<brief>Data word (16 bits) in link data area</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DP_IN_CONF</name>
<brief>PROFIBUS configured input data areas</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DP_IN_LENGTH</name>
<brief>PROFIBUS length of input data area</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DP_IN_STATE</name>
<brief>PROFIBUS status of input data area</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DP_IN_VALID</name>
<brief>PROFIBUS valid input data areas</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DP_OUT_CONF</name>
<brief>PROFIBUS configured output data areas</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DP_OUT_LENGTH</name>
<brief>PROFIBUS length of output data area</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DP_OUT_STATE</name>
<brief>PROFIBUS status of output data area</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DP_OUT_VALID</name>
<brief>PROFIBUS valid output data areas</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DPB_IN</name>
<brief>PROFIBUS input byte (unsigned)</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DPB_OUT</name>
<brief>PROFIBUS output byte (unsigned)</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$A_DPR_IN</name>
<brief>PROFIBUS input data (32 bit REAL)</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$A_DPR_OUT</name>
<brief>PROFIBUS output data (32 bit REAL)</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DPSB_IN</name>
<brief>PROFIBUS input byte (signed)</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DPSB_OUT</name>
<brief>PROFIBUS output byte (signed)</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DPSD_IN</name>
<brief>PROFIBUS input data double word (signed)</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DPSD_OUT</name>
<brief>PROFIBUS output data double word (signed)</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DPSW_IN</name>
<brief>PROFIBUS input word (signed)</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DPSW_OUT</name>
<brief>PROFIBUS output word (signed)</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DPW_IN</name>
<brief>PROFIBUS input word (unsigned)</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_DPW_OUT</name>
<brief>PROFIBUS output word (unsigned)</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_INCO</name>
<brief>Comperator input NC</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_PBB_IN</name>
<brief>Data byte (8 bits) in PLC input/output area OUT</brief>
<description>(also available on 810D CCU2)
Neg. values are also permitted in spite of TYPE_UWORD
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_PBB_OUT</name>
<brief>Data byte (8 bits) in PLC input/output area OUT</brief>
<description>(also available on 810D CCU2)
Neg. values are also permitted in spite of TYPE_UWORD
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_PBD_IN</name>
<brief>Data double word (32bits) in PLC input/output area IN</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_PBD_OUT</name>
<brief>Data double word (32bits) in PLC input/output area IN</brief>
<description>(also available on 810D CCU2)
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$A_PBR_IN</name>
<brief>Real data (32bits) in PLC input/output area IN</brief>
<description>(also available on 810D CCU2)</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$A_PBR_OUT</name>
<brief>Real data (32bits) in PLC input/output area IN</brief>
<description>(also available on 810D CCU2)</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_PBW_IN</name>
<brief>Data word (16bits) in PLC input/output area IN</brief>
<description>(also available on 810D CCU2)
Neg. values are also permitted in spite of TYPE_UWORD
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_PBW_OUT</name>
<brief>Data word (16bits) in PLC input/output area IN</brief>
<description>(also available on 810D CCU2)
Neg. values are also permitted in spite of TYPE_UWORD
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$A_PROBE</name>
<description>Probe status
0: Not deflected
1: Deflected
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$A_PROBE_LIMITED</name>
<description>Contains the accumulated number of DP communication cycles where at least one limitation was effective. An increasing value signals that the frequency of the measuring probe signals must be reduced (i.e. by reducing the speed of the toothed wheel to be measured).</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$A_STOPESI</name>
<description>Current Safety Integrated Stop E for some axis
 0: No Stop E
&gt;0: A Stop E is currently applied for some axis
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_XFAULTSI</name>
<description>Information about Stop F for a safety axis:
Bit 0 = 1: An actual value error has been discovered in the cross-check between NCK and the drive of any safety axis.
Bit 1 = 1: An error has been discovered in the cross-check between NCK and the drive of any axis, and the waiting time until Stop B is triggered is running or has expired in this axis ($MA_SAFE_STOP_SWITCH_TIME_F)
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_ACTIVATE_COLL_CHECK</name>
<description>Status of the field ActivateCollcheck on the interface PLC-&gt;NCK (DB10.DBX234.0 - DB10.DBX241.7). Data are made available in groups of 4 bytes, i.e. with index 1 you receive the first 4 bytes (DB10.DBX234.0 - DB10.DBX237.7), with index 2 the second 4 bytes (DB10.DBX238.0 - DB10.DBX241.7)</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AN_AXCTSWA</name>
<description>A rotation is currently being executed on the axis container.
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AN_ESR_TRIGGER</name>
<description>(Global) control signal "Start Stop/Retract". With a signal edge change from 0 to 1, the reactions parameterized beforehand in axial MD $MA_ESR_REACTION and enabled via system variable $AA_ESR_ENABLE are started.Independent drive reactions subsequently require a Power-Off / Power-On, independent NC reactions require at least an opposite edge change in the relevant system variable as well as a Reset.
0: FALSE
1: TRUE
</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$AN_AXCTSWE</name>
<description>Has a release for rotation been granted for a slot on an axis container?
Bit mask, each bit corresponds to a slot, e.g. 0x5 corresponds to slots 1 and 3.
Bit == 1: The slot of an axis container has been released for rotation.
Bit == 0: The slot of an axis container has not been released for rotation.
Example: Axis container with 4 slots: 'Hfff5' slot 1 and 3 have been released for rotation. As soon as a slot has been released for axis container rotation, bit == 1 is also output for unused slots. See example 'Hfff0'.If the slots of an axis container are distributed across several NCUs, the current state of the slots on other NCUs is only displayed if all of the slots on the other NCU have been released for axis container rotation.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_COLL_CHECK_OFF</name>
<description>Status of the byte DeactivateCollCheckGroups on the interface PLC-&gt;NCK (DB10.DBB58) for the operating-mode-dependant suppression
of the collision avoidance for groups of protection areas.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AN_COLL_IPO_ACTIVE</name>
<brief>The system variable indicates if the main run monitoring of the collision avoidance is active.</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AN_COLL_IPO_LIMIT</name>
<brief>The system variable indicates if the main run monitoring of the collision avoidance leads to a velocity reduction.</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_COLL_LOAD</name>
<description>Gives the required calculation time in ms - required for certain operations in connection with collision avoidance. The operation is defined by index i.
i = 0: Time requirement for last call of PROTA
i = 1: Time requirement for last call of collision avoidance during preprocessing
i = 2: Time requirement for last call of the calculation of free space (real-time monitoring)
The variables can be reset by describing with value 0. Every write attempt with a value other than 0 is refused with an error message.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_COLL_MEM_AVAILABLE</name>
<description>Collision calculation requires internal memory, the size of which is either calculated automatically from the number of available protection zones, protection zone elements, facets and the number of machine axes, or it can be explicitly defined by machine data $MN_MM_MAXNUM_3D_COLLISION. The size of the reserved memory area in kbytes can be read with system variable $AN_COLL_MEM_AVAILABLE.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_COLL_MEM_USE_ACT</name>
<description>Collision calculation requires internal memory, the size of which is either calculated automatically from the number of available protection zones, protection zone elements, facets and the number of machine axes, or it can be explicitly defined by machine data $MN_MM_MAXNUM_3D_COLLISION. The size of the reserved memory area in kbytes can be read with system variable $AN_COLL_MEM_AVAILABLE. The system variable $AN_COLL_MEM_USE_ACT returns the current (that is the last calculated) memory space required for collision calculation as a percentage of the reserved memory area. It can be reset by writing with the value 0. Any attempt to write any other value than 0 is rejected with an error message.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_COLL_MEM_USE_MAX</name>
<description>Collision calculation requires internal memory, the size of which is either calculated automatically from the number of available protection zones, protection zone elements, facets and the number of machine axes, or it can be explicitly defined by machine data $MN_MM_MAXNUM_3D_COLLISION. The size of the reserved memory area in kbytes can be read with system variable $AN_COLL_MEM_AVAILABLE. The system variable $AN_COLL_MEM_USE_MAX returns the maximum memory space required for collision calculation as a percentage of the reserved memory area. It can be reset by writing with the value 0. Any attempt to write any other value than 0 is rejected with an error message.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_COLL_MEM_USE_MIN</name>
<description>Collision calculation requires internal memory, the size of which is either calculated automatically from the number of available protection zones, protection zone elements, facets and the number of machine axes, or it can be explicitly defined by machine data
$MN_MM_MAXNUM_3D_COLLISION. The size of the reserved memory area in kbytes can be read with system variable $AN_COLL_MEM_AVAILABLE. The system variable $AN_COLL_MEM_USE_MIN returns the minimum memory space required for collision calculation as a percentage of the reserved memory area. It can be reset by writing with the value 0. Any attempt to write any other value than 0 is rejected with an error message.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_COLL_PAIRS_ACT</name>
<description>The collision avoidance function can monitor a maximum number of protection area pairs. This number is determined by machine data 18898 $MN_MM_MAXNUM_3D_COLL_PAIRS. The system variable $AN_COLL_PAIRS_ACT states how many of them are currently being used.</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AN_COLL_STATE</name>
<description>The system variable indicates if a protection area can currently be part of collision monitoring. However, the following requirements must be met first:
1. The activation status of the protection area is active ("A") or the activation status is PLC-controlled ("P") and the interface bit assigned to the protection area is set.
2. The protection area group ("Machine", "TOOL" etc.) has been activated in the current operating mode via the associated interface bit.
A protection area for which this system variable gives the value TRUE only then enters real collision monitoring when it is part of at least
one collision pair ($NP_COLL_PAIR). The other partner must also be an active protection area.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AN_COLL_STATE_COND</name>
<description>The system variable indicates if a protection area can currently be part of the collision monitoring. The individual conditions which have to be fulfilled so that a protection area can actively prevent collisions are also shown.
The variable is coded as follows:
Bit 0: The protection area is monitored (this bit has the same significance as the system variable $AN_COLL_STATE).
Bit 1: The protection area is included in the internally mapped model.
Bit 2: The protection area has the status 'P' (PLC-controlled).
Bit 3: The protection area has the status 'A' (active).
Bit 4: All axes which can move the protection area are referenced.
Bit 5: Indicates whether a PLC bit is assigned to the protection area.
Bit 6: Status of the interface bit assigned to the SB.
An active protection area (bit 0 = TRUE) only then enters real collision monitoring when it is part of at least one collision pair ($NP_COLL_PAIR). The other partner must also be an active protection area.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_FACETS_ACT</name>
<description>Machine parts can be modeled from 3D facets for the collision avoidance function. The maximum number of 3D facets is limited by the machine data 18895 $MN_MM_MAXNUM_3D_FACETS. The $AN_FACETS_ACT variable indicates how many facets are currently being used.</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_FACETS_AVAILABLE</name>
<description>Machine parts can be modeled from 3D facets for the collision avoidance function. The maximum number of 3D facets is limited by the machine data 18895 $MN_MM_MAXNUM_3D_FACETS. The $AN_FACETS_AVAILABLE variable indicates how many facets are still available.</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_FACETS_INTERN_ACT</name>
<description>Variable machine parts such as tools are automatically modeled from 3D facets by means of the collision avoidance function. The maximum number of 3D facets is limited by the machine data 18894 $MN_MM_MAXNUM_3D_FACETS_INTERN. The $AN_FACETS_INTERN_ACT variable indicates how many facets are currently being used.</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_FACETS_INTERN_AVAILABLE</name>
<description>Variable machine parts such as tools are automatically modeled from 3D facets by means of the collision avoidance function. The maximum number of 3D facets is limited by the machine data 18894 $MN_MM_MAXNUM_3D_FACETS_INTERN. The $AN_FACETS_INTERN_AVAILABLE variable indicates how many facets are still available.</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_FACETS_INTERN_MAX</name>
<description>Variable machine parts such as tools are automatically modeled from triangle areas by means of the Collision prevention function. The maximum number of triangles is limited by the machine data 18894 $MN_MM_MAXNUM_3D_FACETS_INTERN. The variable $AN_FACETS_INTERN_MAX indicates how many have been used so far.</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_FACETS_INTER_MIN</name>
<description>Variable machine parts such as tools are automatically modeled from 3D facets by means of the collision avoidance function. The maximum number of 3D facets is limited by the machine data 18894 $MN_MM_MAXNUM_3D_FACETS_INTERN. The $AN_FACETS_INTER_MIN variable indicates the minimum number of facets used so far.</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_FACETS_MAX</name>
<description>Machine parts can be modeled from 3D facets for the collision avoidance function. The maximum number of 3D facets is limited by the machine data 18895 $MN_MM_MAXNUM_3D_FACETS. The $AN_FACETS_MAX variable indicates the maximum number of facets used so far.</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_FACETS_MIN</name>
<description>Machine parts can be modeled from 3D facets for the collision avoidance function. The maximum number of 3D facets is limited by the machine data 18895 $MN_MM_MAXNUM_3D_FACETS. The $AN_FACETS_MIN variable indicates the minimum number of facets used so far.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_IPO_ACT_LOAD</name>
<description>Current IPO runtime including the runtime of the synchronized actions of all channels</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$AN_IPO_CHANAX</name>
<description>For a global axis number returned by $AN_IPO_CHANAX, the channel and channel axis number that define the writing interpolator of the axis are output. Here the channel is output as from position 100, and the channel axis number as from position 1, e.g. 1005 - channel 10 channel axis 5. If the axis with the specified global axis number is not used on this NCU, 0 will be returned.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AN_IPO_LOAD_LIMIT</name>
<brief>IPO utilization limit reached</brief>
<description>
0: Utilization limit not reached
1: Utilization limit reached
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_IPO_LOAD_PERCENT</name>
<brief>Ratio of curr. IPO runtime / IPO cycle</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_IPO_MAX_LOAD</name>
<description>Maximum IPO runtime including the runtime of the synchronized actions of all channels</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_IPO_MIN_LOAD</name>
<description>Minimum IPO runtime including the runtime of the synchronized actions of all channels</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_KIN_CHAIN_ELEM_ACT</name>
<brief>The kinematic chains can only use a maximum number of elements.</brief>
<description>This number is determined by machine data 18880 $MN_MM_MAXNUM_KIN_CHAIN_ELEM. The system variable $AN_KIN_CHAIN_ELEM_ACT states how many of them are currently being used.</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$AN_LAI_AX_IS_AXCTAX</name>
<description>Bit mask that displays whether an axis in the logical NCK machine axis image
(machine data 10002 $MN_AXCONF_LOGIC_MACHAX_TAB) is an axis in an axis container
(machine data 1270x/1271x $MN_AXCT_AXCONF_ASSIGN_TABi).
</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$AN_LAI_AX_IS_LEADLINKAX</name>
<description>Bit mask that displays whether an axis in the logical NCK machine axis image
(machine data 10002 $MN_AXCONF_LOGIC_MACHAX_TAB) is a lead link axis,
i.e. the same machine axis is referred to on several NCUs via MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
and the axial MD30554 $MA_AXCONF_ASSIGN_MASTER_NCU specifies
which NCU is the master NCU, which generates the setpoint value for the position controller following power-up.
</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$AN_LAI_AX_IS_LINKAX</name>
<description>Bit mask that displays whether an axis in the logical NCK machine axis image
(machine data 10002 $MN_AXCONF_LOGIC_MACHAX_TAB) is a link axis
(axis physically connected to another NCU).
</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$AN_LAI_AX_TO_IPO_NC_CHANAX</name>
<description>If the LAI axis is currently interpolated to this NCU, the channel and channel axis number which define the interpolator of the axis are
output.
If the LAI axis is currently interpolated to a different NCU, the NCU identifier of the interpolated NCU and the global axis number of the
machine axis are output.
This global axis number can then be used to transfer the interpolated channel and the channel axis number to the other NCU, with NCU
ID 2, with $AN_IPO_CHANAX[103].
If no LAI axis is used, 0 is returned.
The channel is output as from position 100, and the channel axis number as from position 1, e.g. 1005 - channel 10 channel axis 5. These
values are always lower than 10000.
Here the NCU is output as from position 10000, e.g. 20103: NCU 2 and the global axis number is 103.
</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$AN_LAI_AX_TO_MACHAX</name>
<description>The NCU and machine axis are output for an LAI axis,
representing the physical image of the axis.
Here the NCU ID is output as from position 10000, e.g. 20005: NCU 2 axis 5. Without an NCU link,
i.e. if there is only one NCU, only the number of the machine axis will be output. In this case, the NCU ID is equal to zero.
If the LAI axis is not used, 0 is returned.
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AN_LINK_COMM_STATE</name>
<description>Status of the NCU link communication between all NCUs in the NCU link cluster.
Decimal values of the variable:
0: NCU link communication is not active (MD18780 $MN_MM_NCU_LINK_MASK)
1: NCU link communication is active (MD18780 $MN_MM_NCU_LINK_MASK) and functions correctly, that is signs of life are received
from all NCUs in the cluster
2: NCU link communication is active (MD18780 $MN_MM_NCU_LINK_MASK), but does not function correctly (e.g. start-up with inactive
link, communication error etc.)
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_LINK_CONN_RCV</name>
<description>Number of link variable changes per cycle from the specified to the current NCU number.
The variable $AN_LINK_CONN_RCV[NCU-No] shows the transmission capacity reserved for non-cyclic messages from NCU-No to NCU-
Curr in bytes.
Systems without a NCU link return the value 0.
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_LINK_CONN_SIZE_LINKVAR</name>
<description>Gross number of bytes required for a link variable to be transmitted in each PTP relationship
The assignment of a link variable (e.g. $a_dlb[9] = 1) loads the non-cyclic link connections with a message of length
$AN_LINK_CONN_SIZE_LINKVAR.
It is irrelevant here whether a double-link or a byte-link variable is written. This enables the customer to estimate the maximum number of
transmittable link variables per IPO cycle
($AN_LINK_CONN_SND[NCU-No] / $AN_LINK_CONN_SIZE_LINKVAR= number of link-variable changes per IPO cycle from NCU-Curr
to NCU-No).
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_LINK_CONN_SND</name>
<description>Number of link variable changes per cycle from the current to the specified NCU number.
The index NCU-No of the variable $AN_LINK_CONN_SDN[ NCU-No] currently ranges from 1 to 16. The variable returns the number of
bytes reserved
from the current NCU-Curr to the NCU-No in order to exchange any non-cyclic messages. Depending on the utilization of this
transmission capacity,
SIEMENS can supply new SDB blocks for the CBE-30 which reduce the total transmission capacity from NCU-Curr to NCU-No.
This makes the link faster and thus the servo cycle shorter. Note: If NCU-Curr == NCU-No the variable returns "0".
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AN_LINK_TRANS_RATE_LAST</name>
<brief>Number of link variables that should have been sent off in a previous IPO cycle</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AN_LINK_TRANS_RATE_LAST_SUM</name>
<brief>Number of link variables for the send direction to the specified NCU number that could have been sent off in a previous IPO cycle.</brief>
<description>No description</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$AN_POWERON_STATE</name>
<description>The bit-coded variable indicates the state of the NCK power on.
 All bits = 0: NCK power on has not started.
 Bit0=1: The NCK power on has started, i.e. all NCK objects (channels etc.) have already been created and are being initialized.
 Bit1=1: The main run states can now be read. This means that all stations have been initialized, and that power on Reset has been
executed together with the Reset INIT blocks.
 Bit2=1: User interventions (Reset, Stop etc.) are now possible and purposeful. This means that any configured Safety ProgEvent has
been correctly completed or possibly could not be executed because of alarms. Any configured PowerOn ProgEvent is executed next
provided that its execution is not prevented by alarms.
 Bit24=1: The NCK power on has finished together will all the ProgEvents that could be executed automatically (Safety ProgEvent,
PowerOn ProgEvent). The bit does not indicate whether or not an error occurred during the power on (see Bit25).
 Bit25=1: The NCK power on finished with errors. This means, for example, that an error occurred while the stations were being
initialized, during the Reset INIT blocks or the execution of the Safety ProgEvent. Other alarms indicate the exact problem, and the alarm
responses indicate which actions can be executed.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_PREP_ACT_LOAD</name>
<brief>Current preprocessing run time throughout all channels</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_PREP_ACT_LOAD_GROSS</name>
<brief>Current gross preprocessing run time throughout all channels</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_PREP_MAX_LOAD</name>
<brief>Longest preprocessing run time throughout all channels</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_PREP_MAX_LOAD_GROSS</name>
<brief>Longest gross preprocessing run time throughout all channels</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_PREP_MIN_LOAD</name>
<brief>Shortest preprocessing run time throughout all channels</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_PREP_MIN_LOAD_GROSS</name>
<brief>Shortest gross preprocessing run time throughout all channels</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_PROT_AREA_ELEM_ACT</name>
<description>The collision avoidance function can monitor a maximum number of protection area elements. This number is determined by machine data 18892 $MN_MM_MAXNUM_3D_PROT_AREA_ELEM. The system variable $AN_PROT_AREA_ELEM_ACT states how many of them are currently being used.</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_PROT_AREAS_ACT</name>
<description>The collision avoidance function can monitor a maximum number of protection areas. This number is determined by machine data 18890 $MN_MM_MAXNUM_3D_PROT_AREAS. The system variable $AN_PROT_AREAS_ACT states how many of them are currently being used.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_REBOOT_DELAY_TIME</name>
<brief>Time until reboot</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AN_ROBIN</name>
<brief>The system variable $AN_ROBIN[index] reads the relevant byte in the NCK-PLC interface robotic status.</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AN_ROBOUT</name>
<brief>The system variable $AN_ROBOUT[index] reads the relevant byte in the NCK-PLC robotic control interface.</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_SLTRACE</name>
<description>This variable is reserved for the application SinUTrace and Operate-Trace.
It serves as a trigger variable for the logging function.
The following coding is recommended:
0: Inactive
1: Start logging requested
2: Stop logging requested
The value is generally set by the part program, the reset by the application via OPI.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_SERVO_ACT_LOAD</name>
<brief>Current runtime of the position controller</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_SERVO_MAX_LOAD</name>
<brief>Maximum runtime of the position controller</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_SERVO_MIN_LOAD</name>
<brief>Minimum runtime of the position controller</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_SIM_CHAN_MASK</name>
<brief>Bit-coded mask of channels to be considered in the synchronized multi-channel simulation.</brief>
<description>The variable is valid only in connection with the synchronized simulation (see Bit4 $MN_PROG_TEST_MASK).</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_SIM_MAX_IPOSTEP</name>
<description>Using this variable you can specify the maximum step width in real-time IPO cycles. After each step width an event is output to the HMI interface. This allows setting the number of breakpoints. If value 0 is specified, then the system determines the maximum possible step width. The variable is valid only in connection with the synchronized simulation (see Bit4 $MN_PROG_TEST_MASK).</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_SYNC_ACT_LOAD</name>
<brief>Current runtime for synchronized actions</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_SYNC_MAX_LOAD</name>
<brief>Maximum runtime for synchronized actions</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AN_SYNC_TO_IPO</name>
<brief>Percentage of Synact / IPO computing time</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_T_PROT_ELEM_ACT</name>
<brief>The collision avoidance function can monitor a maximum number of tool protection area elements.</brief>
<description>This number is determined by machine data 18893 $MN_MM_MAXNUM_3D_T_PROT_ELEM. The system variable $AN_T_PROT_ELEM_ACT states how many of them are currently being used.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AN_TIMER</name>
<brief>Global NCK timer in seconds.</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AN_VMODEL_STATUS</name>
<description>System variable for the status of the VRML model
1: MODIFIED_STATE: The model has been modified internally
   This is the original status. It may change,
   if machine parameters such as protection zones change.
2: COPIED_STATE: This status is generated outside the NCK,
   if the model file is ready for being displayed.
3: DISPLAYED_STATE: If the NCK sends the instruction for
   display of the model in the display program.
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_NCBFRMASK</name>
<brief>Display indicating which channel-independent basic frames are active.</brief>
<description>Every bit in the mask indicates whether the appropriate basic frame is active. Bit0 = 1st basic frame, Bit1 = 2nd basic frame, etc.</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_IN</name>
<description>Value of HW digital input
0 = low
1 = high
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_OUT</name>
<description>Value of HW digital output
0 = low
1 = high
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$PN_ROBIN</name>
<brief>The system variable $PN_ROBIN[index] reads the relevant byte in the NCK-PLC interface robotic status.</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$PN_ROBOUT</name>
<brief>The system variable $PN_ROBOUT[index] reads the relevant byte in the NCK-PLC robotic control interface.</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_INSE</name>
<brief>External NCK input of the SI programmable logic from the NCK periphery</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_INSED</name>
<brief>Image of the external NCK inputs of the SI programmable logic</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_INSEP</name>
<brief>External PLC input of the SI programmable logic from the PLC periphery</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_INSEPD</name>
<brief>Image of the external PLC inputs of the SI programmable logic</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_OUTSE</name>
<brief>External NCK output of the SI programmable logic to the NCK periphery</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_OUTSED</name>
<brief>Image of the external NCK outputs of the SI programmable logic</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_OUTSEP</name>
<brief>External PLC output of the SI programmable logic to the PLC periphery</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_OUTSEPD</name>
<brief>Image of the external PLC outputs of the SI programmable logic</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_FRDP_ACK_REQ</name>
<description>After a communication error, the F_DP communication is back in cyclic operation. A user acknowledgement is required to release normal operation with output of the process values.
0 = No user acknowledgement required
1 = User acknowledgement required
</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$A_FRDP_DIAG</name>
<description>Diagnostics data for F_RECVDP communication/system error
10H = Timeout detected (TO)
20H = Sequence number error detected (SN)
40H = CRC error detected (CRC)
2000H = Deviations in the F telegram data detected (TD)
4000H = Sign-of-life monitoring error detected (LS)
8000H = Asynchronous error state detected (SF)
</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$A_FRDP_ERR_REAC</name>
<description>The user can define the error reaction irrespective of the machining situation or the coupling of the communication partners.
0 = Alarm 27350 + stop D/E
1 = Alarm 27350
2 = Alarm 27351 (display only, self-clearing)
3 = No reaction
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_FRDP_ERROR</name>
<description>An F_RECVDP communication error has been detected. The cause is stated in the diagnostics data.
0 = No communication error
1 = Communication error detected
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_FRDP_SENDMODE</name>
<description>Current operating mode of the F-CPU of the F_SENDDP communication partner
0: FALSE: The F-CPU is in safety mode
1: TRUE: The F-CPU is in deactivated safety mode
</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$A_FRDP_SUBS</name>
<description>The user can define substitute values. These are then output to the application during power up, and communication errors are output instead of the process values.</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_FRDP_SUBS_ON</name>
<description>During power up and in the event of a communication error, substitute values are output.
ERROR = 0 AND SUBS_ON = 1 =&gt; Power up
ERROR = 1 AND SUBS_ON = 1 =&gt; Communication error
0 = Process values are output
1 = Substitute values are output
</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$A_FSDP_DIAG</name>
<description>Diagnostics data for F_SENDDP communication/system error
10H = Timeout detected (TO)
20H = Sequence number error detected (SN)
40H = CRC error detected (CRC)
2000H = Deviations in the F telegram data detected (TD)
4000H = Sign-of-life monitoring error detected (LS)
8000H = Asynchronous error state detected (SF)
</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$A_FSDP_ERR_REAC</name>
<description>The user can define the error reaction irrespective of the machining situation or the coupling of the communication partners.
0 = Alarm 27350 + stop D/E
1 = Alarm 27350
2 = Alarm 27351 (display only, self-clearing)
3 = No reaction
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_FSDP_ERROR</name>
<description>A communication error has been detected. The cause is stated in the diagnostics data
0 = No communication error
1 = Communication error detected
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_FSDP_SUBS_ON</name>
<description>The communication relationship is not in normal operation. If F_RECVDP is active, it outputs substitute values. The signal is set during the start-up of the F communication and in the event of a communication error.
ERROR = 0 AND SUBS_ON = 1 =&gt; Power up
ERROR = 1 AND SUBS_ON = 1 =&gt; Communication error
0 = Process values are output by F_RECVDP
1 = Substitute values are output by F_RECVDP
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_INSI</name>
<brief>Internal NCK input of the SI programmable logic from the NCK's SI monitoring channel</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_INSID</name>
<brief>Image of the internal NCK inputs of the SI programmable logic from the NCK's SI monitoring channel</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_INSIP</name>
<brief>Internal PLC input of the SI programmable logic</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_INSIPD</name>
<brief>Image of the internal PLC inputs of the SI programmable logic</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_OUTSI</name>
<brief>Internal NCK output of the SI programmable logic to the NCK's SI monitoring channel</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_OUTSID</name>
<brief>Image of the internal NCK outputs of the SI programmable logic to the NCK's SI monitoring channel</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_OUTSIP</name>
<brief>Internal PLC output of the SI programmable logic</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_OUTSIPD</name>
<brief>Image of the internal PLC outputs of the SI programmable logic</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_MARKERSI</name>
<brief>NCK flag for the SI programmable logic</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_MARKERSID</name>
<brief>NCK flag words for the safe programmable logic</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_MARKERSIP</name>
<brief>Image of the PLC flag-variable for SI programmable logic</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$A_MARKERSIPD</name>
<brief>Image of the PLC flag words for the safe programmable logic</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_PLCSIIN</name>
<brief>Bit image of the single channel safety signals from PLC to NCK</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_PLCSIOUT</name>
<brief>Bit image of the single channel safety signals from NCK to PLC</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$A_TIMERSI</name>
<brief>NCK timer-variable for the SI programmable logic</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_CMDSI</name>
<description>Command word for cross-checking (KDV) between NCK and PLC
0:No command
1:Extension of time window for different signal levels in cross-checking operation between NCK and PLC
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_LEVELSID</name>
<description>Fill-level display for cross-checking operation (KDV) between NCK and PLC. Specifies the current number of signals of different levels between the NCK and PLC)</description>
</parameter>

<parameter type="INT" dim="1">
<name>$A_STATSID</name>
<description>Cross-checking (KDV) error has occurred between NCK and PLC.
0: No error has occurred
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$A_PROTOC</name>
<description>Logging: User status
0 = Not active
1 = Active
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$A_PROT_LOCK</name>
<description>Logging: Recording disable of a user
0: No disable
1: Disable
2: Disable, events from protocHmiEvent, however, are enabled
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_DP_ACT_TEL</name>
<brief>Word for word image of the PROFIBUS actual value message frames from drives on the PROFIBUS/PROFIdrive</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_AUTO_JOG_STATE</name>
<description>Status of Automatic+JOG mode
1: Automatic is selected, $MN_JOG_MODE_MASK is set, and the mode group (BAG) is in "Reset". A JOG motion can then be initiated by pressing the +/- buttons or turning the hand wheel in Auto.
2: This mode group has been switched internally to JOG on account of a JOG motion. VDI and OPI still show Automatic.
0: In all other cases
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_G0MODE</name>
<description>G00 is active and $MC_G0_LINEAR_MODE is FALSE (Siemens mode) or $MC_EXTERN_G0_LINEAR_MODE is FALSE (ISO mode) and therefore non-linear interpolation is active with G0, i.e. the path axes are traversed as positioning axes.
0: G00 not active
1: G00 and linear interpolation active
2: G00 and non-linear interpolation active
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$A_GG</name>
<brief>active G function in synchronized action</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$A_LINK_TRANS_RATE</name>
<description>Link transfer rate Number of link variables that can still be transferred in the current IPO cycle via the NCU link communication. If this variable is read in the context of the lead, it always outputs the maximum available bandwidth.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$A_MONIFACT</name>
<brief>Factor for tool life monitoring</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_ACKC</name>
<brief>Acknowledge Counter</brief>
<description>Counter variable: $AC_TC_ACKC (AcknowledgeCounter) is incremented by 1 every time the PLC acknowledges a tool management command.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_CMDC</name>
<brief>Command Counter</brief>
<description>Counter variable: $AC_TC_CMDC (CommandCounter) is incremented by 1 every time the tool management outputs a command to the PLC.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TC_DISTANCE</name>
<brief>Distance of the multi-tool place of the loaded tool to the reference point</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_FCT</name>
<brief>Command number</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_LFN</name>
<brief>Source location number of new tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_LFO</name>
<brief>Source location number of old tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_LMYN</name>
<brief>Owner location number of the new tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_LTN</name>
<brief>Target location number of new tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_LTO</name>
<brief>Target location number of old tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_MFN</name>
<brief>Source magazine of new tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_MFO</name>
<brief>Source magazine number of old tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_MMYN</name>
<brief>Owner magazine number of the new tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_MTN</name>
<brief>Target magazine number of new tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_MTO</name>
<brief>Target magazine number of old tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_MTLTN</name>
<brief>Number of the multi-tool place of the loaded tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_MTTN</name>
<brief>Number of the multi-tool of the loaded tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_MTNLOC</name>
<brief>Number of defined places in the multi-tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_STATUS</name>
<brief>Command status</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_THNO</name>
<brief>Number of toolholder for new tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_TNO</name>
<brief>T number of new tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TC_TOOLIS</name>
<brief>0 = Tool, 1,2,3 = Type of distance coding for the multi-tool</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_ATOL</name>
<description>Provides the axis tolerance for compressor and smoothing, which was effective during preprocessing of the current main run block.</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_ACCLIMA</name>
<description>Axial acceleration override in main run 1-200</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_EG_ACTIVE</name>
<description>Electronic gear:
Link to the specified master axis is operative, i.e. activated.
0: Deactivated
1: Activated
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_EG_AX</name>
<brief>Electronic gear: Axis number of nth master axis (1-n).</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_EG_DENOM</name>
<brief>Electronic gear: Denominator of link factor for the specified master axis.</brief>
<description>The link factor of the gear is the result of $AA_EG_NUMERA[a,b]/$AA_EG_DENOM[a,b].</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_EG_NUM_LA</name>
<brief>Electronic gear: Number of master axes specified with EGDEF.</brief>
<description>If the axis has not been specified with EGDEF as slave axis, the value is 0.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_EG_NUMERA</name>
<brief>Electronic gear: Numerator of link factor for the specified master axis.</brief>
<description>The link factor of the gear is the result of $AA_EG_NUMERA[a,b]/$AA_EG_DENOM[a,b].</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_EG_SYN</name>
<brief>Electronic gear: Synchronous position for the specified master axis.</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_EG_SYNFA</name>
<brief>Electronic gear: Synchronous position for the slave axis.</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_EG_TYPE</name>
<brief>Electronic gear: Type of link for the specified master axis</brief>
<description>
0: Actual-value linkage
1: Setpoint linkage
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_FGREF</name>
<description>The variable provides the radius used by a rotary axis to contribute to the path travel. The default value is 180 mm/PI = 57,296 mm, which corresponds to a contribution of 1mm per degree. For linear axes the variable always provides 1.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AA_FGROUP</name>
<brief>If the travel of an axis influences the path velocity in the current main run block (FGROUP), the variable provides value 1, otherwise 0.</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_JERKLIMA</name>
<description>Axial jerk override in run in 1-200 </description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_MEAS_P1_VALID</name>
<description>Save axial measuring point P1 for workpiece and tool measurement
0: Clear axial measuring point
1: Write actual axial values to axial measuring point
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_MEAS_P2_VALID</name>
<description>Save axial measuring point P2 for workpiece and tool measurement
0: Clear axial measuring point
1: Write actual axial values to axial measuring point
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_MEAS_P3_VALID</name>
<description>Save axial measuring point P3 for workpiece and tool measurement
0: Clear axial measuring point
1: Write actual axial values to axial measuring point
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_MEAS_P4_VALID</name>
<description>Save axial measuring point P4 for workpiece and tool measurement
0: Clear axial measuring point
1: Write actual axial values to axial measuring point
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_MEAS_SETPOINT</name>
<brief>Setpoint position of edge, corner or hole</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AA_MEAS_SP_VALID</name>
<description>Save axial setpoint for workpiece and tool measurement
0: Clear axial setpoint
1: Validate axial setpoint
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_SYNCDIFF</name>
<brief>Setpoint synchronism difference for all types of coupling</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AA_SYNCDIFF_STAT</name>
<description>Status of setpoint synchronism difference
-4: No valid value in $AA_SYNCDIFF, coupled motion from part program
-3: Reserved
-2: Reserved
-1: No valid value in $AA_SYNCDIFF
 0: No valid value in $AA_SYNCDIFF, coupling not active
 1: Valid value in $AA_SYNCDIFF
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_VELOLIMA</name>
<description>Axial velocity override in main run 1-200</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_ACT_TOOL_LENGTH_INDEX</name>
<description>The variable returns the number of the tool length components (1, 2 or 3 corresponding to the length components L1, L2, L3) of the active tool, which is assigned to the geometry axis that was transferred as an index. The assignment does not take into account any rotations (e.g. by kinematic transformations) or frames. It depends on the type of active tool, the active plane, any active adapter transformation and the setting data SD42950 $SC_TOOL_LENGTH_TYPE, SD42940 $SC_TOOL_LENGTH_CONST and SD42942 $SC_TOOL_LENGTH_CONST_T. Active mirrorings of a frame can influence the output value if setting data SD42900 $SC_MIRROR_TOOL_LENGTH, is set, see below. If the tool length component is active with a negative sign, the index is output with a negative sign. This can be the case if the hundreds digit of setting data SD42940 $SC_TOOL_LENGTH_CONST or the hundreds digit of setting data SD42942 $SC_TOOL_LENGTH_CONST_T equals 1, or if a mirroring of the relevant axis is active on account of setting data $SC_MIRROR_TOOL_LENGTH. If both causes are active simultaneously, the resulting sign is positive once more. If no tool is active, the value 0 is returned.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_ACT_TOOL_LENGTH_INDEX</name>
<description>The variable returns the number of the tool length components (1, 2 or 3 corresponding to the length components L1, L2, L3) of the active tool, which is assigned to the geometry axis that was transferred as an index. The assignment does not take into account any rotations (e.g. by kinematic transformations) or frames. It depends on the type of active tool, the active plane, any active adapter transformation and the setting data SD42950 $SC_TOOL_LENGTH_TYPE, SD42940 $SC_TOOL_LENGTH_CONST and SD42942 $SC_TOOL_LENGTH_CONST_T. Active mirrorings of a frame can influence the output value if setting data SD42900 $SC_MIRROR_TOOL_LENGTH, is set, see below. If the tool length component is active with a negative sign, the index is output with a negative sign. This can be the case if the hundreds digit of setting data SD42940 $SC_TOOL_LENGTH_CONST or the hundreds digit of setting data SD42942 $SC_TOOL_LENGTH_CONST_T equals 1, or if a mirroring of the relevant axis is active on account of setting data $SC_MIRROR_TOOL_LENGTH. If both causes are active simultaneously, the resulting sign is positive once more. If no tool is active, the value 0 is returned.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_ALARM_STAT</name>
<description>!=0: Alarms are pending, the appropriate coded alarm reactions can be used as source for "Extended stop and retract". The data is bit-coded. Individual states can therefore be masked or evaluated separately if necessary (bits excluded below produce a value of 0)
Bit2  = 1: NOREADY (active rapid deceleration + cancellation of servo enable)
Bit6  = 1: STOPBYALARM (ramp stop of all channel axes)
Bit9  = 1: SETVDI (VDI interface signal alarm setting)
Bit13 = 1: FOLLOWUPBYALARM (follow-up)
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_ASUP</name>
<description>Code number for the cause of activation of an ASUP The reasons are bit-coded.
BIT0: Activation because of: User interrupt "ASUP with Blsync".
BIT1: Activation because of: User interrupt "ASUP".
BIT2: Activation because of: User interrupt "ASUP from channel state Ready".
BIT3: Activation because of: User interrupt "ASUP in manual mode".
BIT4: Activation because of: Activation because of: User interrupt "ASUP".
BIT5: Activation because of: Abort of the subroutine repetition.
BIT6: Activation because of: Activation of decoding single block.
BIT7: Activation because of: Activation of DDTG.
BIT8: Activation because of: Activation of axis synchronization.
BIT9: Activation because of: Change of operating mode.
BIT10: Activation because of: Program continuation under TeachIn or after TeachIn deactivation.
BIT11: Activation because of: Selection overstore.
BIT12: Activation because of: Alarm with reaction compensation block with REPOS ( COMPBLOCKWITHREORG).
BIT13: Activation because of: Retraction motion with G33 and Stop.
BIT14: Activation because of: Activation of dry run feed.
BIT15: Activation because of: Deactivation of dry run feed.
BIT16: Activation because of: Activation of skip block.
BIT17: Activation because of: Deactivation of skip block.
BIT18: Activation because of: Activate machine data.
BIT19: Activation because of: Activate tool offset.
BIT20: Activation because of: System ASUP after search type SERUPRO has reached the search target.
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AC_AXCTSWA</name>
<description>Channel status of axis container rotation
TRUE: The channel has enabled rotation for the axis container and rotation is still in progress.
FALSE: Axis container rotation is already finished
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_CTOL</name>
<brief>contour tolerance</brief>
<description>Provides the contour tolerance for compressor and smoothing which was used to preprocess the current main run block.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_CONE_ANGLE</name>
<description>Currently effective taper angle for taper turning. The taper angle is specified by the setting data $SC_CONE_ANGLE and is effective in the operating mode JOG only.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_DELT</name>
<description>Stored distance-to-go of the path in the WCS after delete-distance-to-go of the path DELDTG for synchronous action (Note: for SYNACT only)</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_DTBB</name>
<brief>Distance from the beginning of the block in the BCS </brief>
<description>(Note: SYNACT only)</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_DTBW</name>
<brief>Distance from the beginning of the block in the WCS </brief>
<description>(Note: SYNACT only)</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_DTEB</name>
<brief>Distance to the end of the block in the BCS</brief>
<description>(Note: for SYNACT only)</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_DTEW</name>
<brief>Distance to the end of the block in the WCS</brief>
<description>(Note: for SYNACT only)</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_ESR_TRIGGER</name>
<brief>Activation of "NC-controlled ESR"</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_F_G0</name>
<brief>Max. rapid traverse rate in the block</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FZ</name>
<brief>Tooth feedrate, setpoint.</brief>
<description>The physical unit is defined in variable 'feedRateIpoUnit'.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_FCT0</name>
<description>a0-coefficient of the nth polynominal for the synchronous action SYNFCT / function FCTDEF n
(Note: for SYNACT only)
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_FCT1</name>
<description>a1-coefficient of the nth polynominal for the synchronous action SYNFCT / function FCTDEF n
(Note: for SYNACT only)
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_FCT2</name>
<description>a2-coefficient of the nth polynominal for the synchronous action SYNFCT / function FCTDEF n
(Note: for SYNACT only)
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_FCT3</name>
<description>a3-coefficient of the nth polynominal for the synchronous action SYNFCT / function FCTDEF n
(Note: for SYNACT only)
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_FCTLL</name>
<description>Lower limit of the nth polynominal for the synchronous action SYNFCT / function FCTDEF n
(Note: for SYNACT only)
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_FCTUL</name>
<description>Upper limit of the nth polynominal for the synchronous action SYNFCT / function FCTDEF n
(Note: for SYNACT only)
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_FGROUP_MASK</name>
<description>bit-coded, provides the channel axes which are to contribute to the path velocity</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_IPO_STATE</name>
<description>The variable provides selected information about whether certain functions are active:
Bit 0: Free-form surface mode is active
Bit 1: Compressor active
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_IW_STAT</name>
<description>Current position of machine
Bit-coded:
 Bit 0: Tool inv. position
 Bit 1: Axis 2/3 position
 Bit 2: Axis 5 position
 Bit 3-31: Not yet assigned
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_IW_TU</name>
<description>Current position of channel axes
Bit-coded:
 Bit 0: Channel axis 1 position
 Bit 1: Channel axis 2 position
 Bit 2: Channel axis 3 position
 Bit 3: Channel axis 4 position
 ...
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_JOG_CIRCLE_SELECTED</name>
<brief>JOG in circles has been selected</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_JOG_COORD</name>
<description>Setting the coordinate system for the manual travel
0: Work
1: SZS
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_LIFTFAST</name>
<brief>Information about the execution of LIFTFAST.</brief>
<description>At the start of the LIFTFAST operation, the variable is set internally by the NC to the value "1". The variable must be reset to the initial state ($AC_LIFTFAST=0) by the evaluating program (if available), in order to be able to detect a subsequent LIFTFAST.
0: Initial state
1: LIFTFAST has been executed
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_M_TOOL_LENGTH_INDEX</name>
<description>The variable returns the number of the tool length components (1, 2 or 3 corresponding to the length components L1, L2, L3) for milling tools, which is assigned to the geometry axis that was transferred as an index. In this context, milling tools are all tools with a tool type that does not lie between 400 and 599. The assignment does not take into account any rotations (e.g. by kinematic transformations) or frames. It depends on the active plane and the setting data SD42950 $SC_TOOL_LENGTH_TYPE and SD42940 $SC_TOOL_LENGTH_CONST. If the tool length component is active with a negative sign, the index is output with a negative sign. This can be the case if the hundreds digit of setting data SD42940 $SC_TOOL_LENGTH_CONST equals 1.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_M_TOOL_LENGTH_INDEX</name>
<description>The variable returns the number of the tool length components (1, 2 or 3 corresponding to the length components L1, L2, L3) for milling tools, which is assigned to the geometry axis that was transferred as an index. In this context, milling tools are all tools with a tool type that does not lie between 400 and 599. The assignment does not take into account any rotations (e.g. by kinematic transformations) or frames. It depends on the active plane and the setting data SD42950 $SC_TOOL_LENGTH_TYPE and SD42940 $SC_TOOL_LENGTH_CONST. If the tool length component is active with a negative sign, the index is output with a negative sign. This can be the case if the hundreds digit of setting data SD42940 $SC_TOOL_LENGTH_CONST equals 1.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_MEA</name>
<brief>No. of touch probe</brief>
<description>Touch probe has switched</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_ACT_PLANE</name>
<description>Plane setting for measurement calculation
0: G17,
1: G18,
2: G19
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_CHBFR</name>
<brief>Channel basic frame screen form for setting up the new frame</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_CHSFR</name>
<brief>System frame bit screen form for setting up the new frame</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_MEAS_CORNER_ANGLE</name>
<brief>Calculated cutting angle of corner</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_MEAS_CORNER_SETANGLE</name>
<description>User-selectable setpoint cutting angle of corner Permissible input range between 0 and 180 degrees</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_D_NUMBER</name>
<brief>Selected tool edge number</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_MEAS_DIAMETER</name>
<brief>Calculated diameter</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_DIR_APPROACH</name>
<description>Approach direction towards workpiece
0: +x
1: -x
2: +y
3: -y
4: +z
5: -z
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_FINE_TRANS</name>
<description>Correction in fine offset
0: Correction in coarse translation
1: Correction in fine translation
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_FRAME_SELECT</name>
<description>The frame calculated during workpiece measurement is entered in the selected frame.
         0: $P_SETFR
  10..  25: $P_CHBFR[0..15]
  50..  65: $P_NCBFR[0..15]
 100.. 199: $P_UIFR[0..99]
1010..1025: $P_CHBFR[0..15]
1050..1065: $P_NCBFR[0..15]
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_MEAS_INPUT</name>
<brief>Data for the workpiece and tool measurement</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_LATCH</name>
<description>Save measuring points for workpiece and tool measurement
0: Clear measuring point
1: Write current axial values to measuring point
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_NCBFR</name>
<brief>Global basic frame screen form for setting up the new frame</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_P1_COORD</name>
<description>Coordinate system of the 1st measuring point
0: Work
1: BCS
2: MCS
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_P2_COORD</name>
<description>Coordinate system of the 2nd measuring point
0: Work
1: BCS
2: MCS
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_P3_COORD</name>
<description>Coordinate system of the 3rd measuring point
0: Work
1: BCS
2: MCS
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_P4_COORD</name>
<description>Coordinate system of the 4th measuring point
0: Work
1: BCS
2: MCS
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_PFRAME</name>
<brief>Programmable frame is not included</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_MEAS_RESULTS</name>
<brief>Measurement results</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_SCALEUNIT</name>
<description>Unit of measurement for input and output values
0: Unit of measurement as configured
1: Unit of measurement in relation to active G code G70/G700/G71/G710
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_SEMA</name>
<description>Variable for disabling and enabling the measurement interface
0: Not assigned
1: Assigned
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_SET_COORD</name>
<description>Coordinate system of the set point
0: Work
1: BCS
2: MCS
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_T_NUMBER</name>
<brief>Selected tool number</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_MEAS_TOOL_LENGTH</name>
<brief>Calculated tool length</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_TOOL_MASK</name>
<brief>Tool setting for the measurement calculation</brief>
<description>Bit 0: Tool radius is not included in the calculation</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_TYPE</name>
<brief>Measurement type specification</brief>
<description>
0: Default
1: x edge
2: y edge
3: z edge
4: Corner 1
5: Corner 2,
6: Corner 3
7: Corner 4
8: Hole
9: Shaft
10: Tool length
11: Tool diameter
12: Groove
13: Web
14: Actual value setting for geo and special axes
15: Actual value setting for special axes only
16: Edge_2P
17: Plane_Angles
18: Plane_Normal
19: Dimension_1
20: Dimension_2
21: Dimension_3
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_UIFR</name>
<brief>Settable data management frame for setting up the new frame</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_MEAS_VALID</name>
<brief>Validity bits for measurement input values</brief>
<description>
Bit 0: $AA_MEAS_POINT1[axis]
Bit 1: $AA_MEAS_POINT2[axis]
Bit 2: $AA_MEAS_POINT3[axis]
Bit 3: $AA_MEAS_POINT4[axis]
Bit 4: $AA_MEAS_SETPOINT[axis]
Bit 5: $AC_MEAS_WP_SETANGLE
Bit 6: $AC_MEAS_CORNER_SETANGLE
Bit 7: $AC_MEAS_T_NUMBER
Bit 8: $AC_MEAS_D_NUMBER
Bit 9: $AC_MEAS_DIR_APPROACH
Bit 10: $AC_MEAS_ACT_PLANE
Bit 11: $AC_MEAS_FRAME_SELECT
Bit 12: $AC_MEAS_TYPE
Bit 13: $AC_MEAS_FINE_TRANS
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_MEAS_WP_ANGLE</name>
<brief>Calculated workpiece position angle</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_MEAS_WP_SETANGLE</name>
<brief>User-selectable setpoint workpiece position angle</brief>
<description>Permissible input range less than +/- 90 degrees</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_MONMIN</name>
<brief>Ratio of the actual tool monitoring value to the setpoint</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_MSNUM</name>
<brief>Number of the master spindle</brief>
<description>
   0: No spindle available
1..n: Number of the master spindle
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_MTHNUM</name>
<brief>Number of the current master tool holder.</brief>
<description>Is only meaningful with active magazine management.
   0: No master tool holder available
1..n: Number of the master tool holder
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_OTOL</name>
<brief>Orientation tolerance for compressor</brief>
<description>Provides the orientation tolerance for compressor and smoothing which was used to preprocess the current main run block.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_OVR</name>
<brief>Path override for synchronous actions</brief>
<description>(Note: for SYNACT only)</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_PATHACC</name>
<brief>Path acceleration for real-time events</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_PATHJERK</name>
<brief>Path jerk for real-time events</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_PATHN</name>
<brief>Normalized path parameter (Note: for SYNACT only)</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_PLC_OVR</name>
<brief>Path override for synchronized actions specified by the PLC</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_PLTBB</name>
<brief>Path length from the beginning of the block in the BCS (Note: for SYNACT only)</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_PLTEB</name>
<brief>Path length to the end of the block in the BCS (Note: for SYNACT only)</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_PREP_ACT_LOAD</name>
<brief>Current preprocessing run time</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_PREP_ACT_LOAD_GROSS</name>
<brief>Current preprocessing gross run time</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_PREP_MAX_LOAD</name>
<brief>Longest preprocessing run time</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_PREP_MAX_LOAD_GROSS</name>
<brief>Longest preprocessing gross run time</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_PREP_MIN_LOAD</name>
<brief>Shortest preprocessing run time</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_PREP_MIN_LOAD_GROSS</name>
<brief>Shortest preprocessing gross run time</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_PROG</name>
<brief>Program status</brief>
<description>identical to progStatus but with coding that corresponds to $AC_PROG
0: aborted (reset)
1: halted (stop)
2: running (active)
3: waiting
4: interrupted
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_STOLF</name>
<brief>G00 tolerance factor for compressor</brief>
<description>Indicates the G00 tolerance factor for compressor and smoothing with which the current main run block was prepared.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_SAFE_SYNA_MEM</name>
<brief>Free Safety synchronized action elements</brief>
<description>The maximum number of elements is configured in $MC_MM_NUM_SAFE_SYNC_ELEMENTS</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_STAT</name>
<brief>Channel status</brief>
<description>Identical to chanStatus but with coding that corresponds to $AC_STAT
0: reset
1: interrupted
2: active
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_SYNA_MEM</name>
<brief>Free memory for synchronous actions</brief>
<description>Shows how many elements of the memory set with $MC_MM_NUM_SYNC_ELEMENTS are still free.</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$AC_SYNA_STATE</name>
<description>The status of a synchronized action can be read using the variable. The line index is the ID of the modal or static synchronized action, for which the status should be read. The data is bit-coded, so that when required, also individual states can be masked or separately evaluated (bits that are not listed supply a value of 0)
Bit 0 = 0: No lock
Bit 0 = 1: PLC or synchronize actions are locked
Bit 1 = 0: PLC is not locked
Bit 1 = 1: PLC is locked
Bit 2 = 0: Synchronized action is not locked
Bit 2 = 1: Synchronized action is locked
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_SYNC_ACT_LOAD</name>
<brief>Current runtime for synchronized actions of the last IPO cycle in the channel</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_SYNC_AVERAGE_LOAD</name>
<brief>Average runtime for synchronized actions of an IPO cycle in the channel</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_SYNC_MAX_LOAD</name>
<brief>Longest runtime for synchronized actions of an IPO cycle in the channel</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_T_TOOL_LENGTH_INDEX</name>
<description>The variable returns the number of the tool length components (1, 2 or 3 corresponding to the length components L1, L2, L3) for turning and grinding tools, which is assigned to the geometry axis that was transferred as an index. In this context, turning and grinding tools are all tools with a tool type that lies between 400 and 599. The assignment does not take into account any rotations (e.g. by kinematic transformations) or frames. It depends on the active plane and the setting data SD42950 $SC_TOOL_LENGTH_TYPE, SD42940 $SC_TOOL_LENGTH_CONST and SD42942 $SC_TOOL_LENGTH_CONST_T. If the tool length component is active with a negative sign, the index is output with a negative sign. This can be the case if the hundreds digit of setting data SD42940 $SC_TOOL_LENGTH_CONST or the hundreds digit of setting data SD42942 $SC_TOOL_LENGTH_CONST_T equals 1.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_T_TOOL_LENGTH_INDEX</name>
<description>The variable returns the number of the tool length components (1, 2 or 3 corresponding to the length components L1, L2, L3) for turning and grinding tools, which is assigned to the geometry axis that was transferred as an index. In this context, turning and grinding tools are all tools with a tool type that lies between 400 and 599. The assignment does not take into account any rotations (e.g. by kinematic transformations) or frames. It depends on the active plane and the setting data SD42950 $SC_TOOL_LENGTH_TYPE, SD42940 $SC_TOOL_LENGTH_CONST and SD42942 $SC_TOOL_LENGTH_CONST_T. If the tool length component is active with a negative sign, the index is output with a negative sign. This can be the case if the hundreds digit of setting data SD42940 $SC_TOOL_LENGTH_CONST or the hundreds digit of setting data SD42942 $SC_TOOL_LENGTH_CONST_T equals 1.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TANEB</name>
<brief>Tangent angle at the block end point</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_TC</name>
<brief>Active tool carrier</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_TC_ACKT</name>
<description>Trigger variable ACKnowledgeTrigger always assumes a value of 1 for an IPO cycle when the PLC acknowledges a command of the tool management.</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_TC_CMDT</name>
<description>Trigger variable: CoMmadTrigger always assumes a value of 1 for an IPO cycle when a new command of the magazine management is output to the PLC.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_THREAD_PITCH</name>
<brief>Programmed lead</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_THREAD_PITCH_ACT</name>
<brief>Current lead</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_THREAD_PITCH_INC</name>
<brief>Current lead change</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TIMEC</name>
<brief>Time from the beginning of the block in interpolation cycles (Note: for SYNACT only)</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TIMER</name>
<brief>Time variable in seconds (Note: for SYNACT only)</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOL_O_ACT</name>
<description>Supplies the setpoint of the current tool orientation in various coordinate systems.
Possible values of the line index:
1, 2, 3: Components of the vector in BCS
4, 5, 6: Components of the vector in PCS/WCS
7, 8, 9: Components of the vector in ENS
The orientation vector is normalized, i.e. it has the value 1.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOL_O_CORR</name>
<description>Supplies the setpoint of the current tool orientation incl. overlays in various coordinate systems.
Possible values of the line index:
1, 2, 3: Components of the vector in BCS
4, 5, 6: Components of the vector in PCS/WCS
7, 8, 9: Components of the vector in ENS
The orientation vector is normalized, i.e. it has the value 1.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOL_O_CORRD</name>
<description>Supplies the setpoint of the current overlay of the tool orientation in various coordinate systems.
Possible values of the line index:
1, 2, 3: Components of the vector in BCS
4, 5, 6: Components of the vector in PCS/WCS
7, 8, 9: Components of the vector in ENS
This vector represents the difference between the two vectors $AC_TOOL_O_CORR and $AC_TOOL_O_ACT
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOL_O_DIFF</name>
<description>Supplies the remaining angle between the current vector and end vectors of the tool orientation block in various coordinate systems:
Possible values of the line index:
1: Angle in BCS
2: Angle in PCS/WCS
3: Angle in ENS
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOL_O_END</name>
<description>Supplies the end orientation of the current block in various coordinate systems:
Possible values of the line index:
1, 2, 3: Components of the vector in BCS
4, 5, 6: Components of the vector in PCS/WCS
7, 8, 9: Components of the vector in ENS
The orientation vector is normalized, i.e. it has the value 1.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOL_R_ACT</name>
<description>Setpoint of the tool rotation in various coordinate systems:
Possible values of the line index:
1, 2, 3: Components of the vector in BCS
4, 5, 6: Components of the vector in PCS/WCS
7, 8, 9: Components of the vector in ENS
The orientation vector is normalized, i.e. it has the value 1.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOL_R_CORR</name>
<description>Supplies the setpoint of the current rotation vector of the tool orientation incl. overlays in various coordinate systems.
Possible values of the line index:
1, 2, 3: Components of the vector in BCS
4, 5, 6: Components of the vector in PCS/WCS
7, 8, 9: Components of the vector in ENS
The orientation vector is normalized, i.e. it has the value 1.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOL_R_CORRD</name>
<description>Supplies the setpoint of the current overlay of the rotation of the tool in various coordinate systems.
Possible values of the line index:
1, 2, 3: Components of the vector in BCS
4, 5, 6: Components of the vector in PCS/WCS
7, 8, 9: Components of the vector in ENS
This vector represents the difference between the two vectors $AC_TOOL_R_CORR and $AC_TOOL_R_ACT
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOL_R_DIFF</name>
<description>Angle remaining between the current and end rotation vectors of the tool orientation block in various coordinate systems: Possible values of the line index:
1: Angle in BCS
2: Angle in PCS/WCS
3: Angle in ENS
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOOL_R_END</name>
<description>End rotation vector of the current block in various coordinate systems:
Possible values of the line index:
1, 2, 3: Components of the vector in BCS
4, 5, 6: Components of the vector in PCS/WCS
7, 8, 9: Components of the vector in ENS
The orientation vector is normalized, i.e. it has the absolute value 1.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOTAL_OVR</name>
<brief>Total path override for synchronized actions</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TRAFO</name>
<brief>Code number of the active transformation (encoded as for $AC_TRAFO)</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TRAFO_CHAIN</name>
<brief>Active chained transformation</brief>
<description>Code numbers of the chained transformations of the active TRACON corresponding to machine data $MC_TRAFO_TYPE_m.
   0: No master tool holder available
1..n: Number of the master tool holder
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TRAFO_ORIAX_DIR_P</name>
<description>Direction vector of the orientation axis with the index 0 in the part chain of an active orientation transformation.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TRAFO_ORIAX_DIR_P</name>
<description>Direction vector of the orientation axis with the index 1 in the part chain of an active orientation transformation.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TRAFO_ORIAX_DIR_P</name>
<description>Direction vector of the orientation axis with the index 2 in the part chain of an active orientation transformation.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TRAFO_ORIAX_DIR_T</name>
<description>Direction vector of the orientation axis with the index 3 in the part chain of an active orientation transformation.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TRAFO_ORIAX_DIR_T</name>
<description>Direction vector of the orientation axis with the index 4 in the part chain of an active orientation transformation.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TRAFO_ORIAX_DIR_T</name>
<description>Direction vector of the orientation axis with the index 5 in the part chain of an active orientation transformation.</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_TRAFO_ORIAX_LOC</name>
<description>The variable supplies the decimal-coded index of an orientation axis in the kinematic chain of an orientation transformation. The ten's place designates the part chain in which the orientation axis is included (0: Part chain; 1: Tool chain) and the unit's place the axis index when counting from the start to the end of the chain.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_TRAFO_PAR</name>
<description>Supplies the value of parameter 'n' of the current transformation, e.g. the cylinder diameter in the case of TRACYL</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TRAFO_PARSET</name>
<description>The variable is '0' if no transformation is active. If a conventionally defined (i.e. not by kinematic chains) transformation is active, the variable contains the number of the current transformation data record. If a transformation defined by kinematic chains is active, the variable contains the number of the $NT data record with an offset of 1000, i.e. the first transformation returns the value 1001.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_VACTW</name>
<brief>Path velocity in the work piece coordinate system</brief>
<description>(Note: for SYNACT only)</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_VC</name>
<brief>Additive path feedrate correction value for synchronous actions</brief>
<description>(Note: for SYNACT only)</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_DLNO</name>
<brief>Number of active total offset DL</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_TOOL</name>
<brief>Number of active tool edge</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_GFRNUM</name>
<brief>Index of the actively set grinding frame.</brief>
<description>A grinding data management frame becomes an active grinding frame when executing GFRAME0 to GFRAME100.
0 = GFRAME0 = No frame selected
1 = GFRAME1
...
100 = GFRAME100
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_ACTUAL_PARTS</name>
<brief>Total number of workpieces machined in current run</brief>
<description>This counter registers the number of workpieces machined since it started. When the required number is reached, the counter is set to zero automatically.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_ACT_PROG_NET_TIME</name>
<brief>The current net runtime of the current program in seconds.</brief>
<description>It is the time in which the program was stopped, is subtracted. $AC_ACT_PROG_NET_TIME is automatically reset to zero with the part program start in automatic mode, channel status RESET. The net runtime does not include the time during which the program pauses on account of override=0. $AC_ACT_PROG_NET_TIME can be further manipulated with $AC_PROG_NET_TIME_TRIGGER.
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_TOOLNO</name>
<description>Number of active tool</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_WORKAREA_CS_COORD_SYSTEM</name>
<brief>Coordinate system of the active coordinate system-specific working area limitation</brief>
<description>Identifier for the coordinate system in which the working area limitation is to apply.
The following are valid:
0: Working area limitation in the WCS
3: Working area limitation in the SZS
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_WORKAREA_CS_LIMIT_MINUS</name>
<brief>Position of the working area limitation in the negative direction</brief>
<description>Position of the coordinate system-specific working area limitation in the negative direction for the addressed axis and working area group.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_WORKAREA_CS_LIMIT_PLUS</name>
<brief>Position of the working area limitation in the positive direction</brief>
<description>Position of the coordinate system-specific working area limitation in the positive direction for the addressed axis and working area group</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_WORKAREA_CS_MINUS_ENABLE</name>
<description>The coordinate-specific working area limitation in the negative direction of actWaCSLimitMinus is valid.
TRUE: The value in the variable actWaCSLimitMinus is valid for the axis.
FALSE: There is no limitation in the coordinate-specific working area in the negative direction for this axis.
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_WORKAREA_CS_PLUS_ENABLE</name>
<description>The coordinate system-specific working area limitation in the positive direction of actWaCSLimitPlus is valid.
TRUE: The value in the variable actWaCSLimitPlus is valid for the axis.
FALSE: There is no limitation for this axis in the positive direction in the coordinate-specific working area.
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_WORKAREA_CS_GROUP</name>
<brief>Active working area group in the IPO</brief>
<description>Writing is only possible if the channel has been aborted or stopped
0: Not activated
n: $MC_MM_NUM_WORKAREA_CS_GROUPS
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_CHBFRMASK</name>
<brief>Display indicating which channel-specific basic frames are active</brief>
<description>Every bit in the mask indicates whether the appropriate basic frame is active. Bit0 = 1st basic frame, Bit1 = 2nd basic frame, etc.</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_BLOCK_PROGSTATE</name>
<description>Returns the information of a main run block.
Bit-coded:
Bit 0: Block is end of main program ( M02, M17, M30 or RET(ASUP) )
Bit 1: Block is end of subprogram
Bit 2: Block is last initializing block
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_BLOCKTYPE</name>
<description>Identifies the type of a block (programmed or generated internally)
0: No internally generated block
1: Internally generated block, but cannot be specified in detail
2: Block was generated on chamfering/rounding
3: Smooth approach and retraction (SAR)
4: Block was generated during tool offset
5: Block was generated on smoothing
6: Block was generated by TLIFT (tangential correction)
7: Block was generated during path segmentation
8: Block was generated by compile cycles
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_BLOCKTYPEINFO</name>
<description>Detailed information on block type The value range and the meaning of this variable depend on the current value of system variable $AC_BLOCKTYPE System variable $AC_BLOCKTYPEINFO can be used to request additional information on variable $AC_BLOCKTYPE. Depending on the value of system variable $AC_BLOCKTYPE, various values are then possible:
1. General internally generated block: $AC_BLOCKTYPE = 1 $AC_BLOCKTYPEINFO = 1000 and does not include any additional information.
2. Chamfer/round: $AC_BLOCKTYPE = 2
2001: straight
2002: circle
3. SAR: $AC_BLOCKTYPE = 3
3001: Approach with straight
3002: Approach with quadrant
3003: Approach with semicircle
4. Tool offset: $AC_BLOCKTYPE = 4
4001: Approach block after STOPRE
4002: Link blocks if intersection not found
4003: Point circle on inside corners (only with TRACYL)
4004: Bypass circle (or conic) on outside corners
4005: Approach blocks for offset suppression
4006: Approach blocks for reactivation of TRC
4007: Blocks are split because curvature is too high
4008: Compensation blocks for 3D front milling (tool vector || plane vector)
5. Corner rounding: $AC_BLOCKTYPE = 5
5001: Rounding contour through G641
5002: Rounding contour through G642
5003: Rounding contour through G643
5004: Rounding contour through G644
6. TLIFT: $AC_BLOCKTYPE = 6
6001: TLIFT block with linear movement of the tangential axis
      but without retraction movement.
6002: TLIFT block with non-linear movement of the tangential axis
      (polynomial) but without retraction movement.
6003: TLIFT block with retraction movement.
      Tangential axis movement and retraction movement start simultaneously.
6004: TLIFT block with retraction movement.
      Tangential axis does not start until a specific retraction position is reached.
7. Path segmentation: $AC_BLOCKTYPE = 7
7001: Programmed path segmentation without punching or nibbling active.
7002: Programmed path segmentation with punching or nibbling active.
7003: Automatically generated path segmentation.
8. Compile cycles: $AC_BLOCKTYPE = 8 In this case, system variable $AC_BLOCKTYPEINFO includes the ID of the compile cycles application that generated the block.
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$C_IN</name>
<brief>Signal from PLC to cycle</brief>
<description>(reserved for SIEMENS application, e.g. ShopMill/ManualTurn)</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$C_OUT</name>
<brief>Signal from cycle to PLC</brief>
<description>(reserved for SIEMENS application, e.g. ShopMill/ManualTurn)
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_F</name>
<brief>Desired feedrate of the interpolation feedrate.</brief>
<description>The physical unit is defined in the variable 'feedRateIpoUnit'</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_TRAFO_PAR</name>
<description>Supplies the value of parameter 'n' of the programmed transformation, e.g. the cylinder diameter in the case of TRACYL</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_TRAFO_PARSET</name>
<description>The variable is '0' if no transformation is active. If a conventionally defined (i.e. not by kinematic chains) transformation is active, the variable contains the number of the current transformation data record during block search. If a transformation defined by kinematic chains is active, the variable contains the number of the $NT data record with an offset of 1000, i.e. the first transformation returns the value 1001 (during block search).</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_TRAFO</name>
<description>Code number of programmed transformation for block search Coding as for variable $AC_TRAFO.</description>
</parameter>

<parameter type="INT" dim="1">
<name>$PC_GCC_STATE</name>
<description>The variable shows the internal status of the G code converter.
Status = 0 -&gt; The G code converter is not selected.
Status = 1 -&gt; The G code converter is selected by HMI, but a trace has not yet been generated.
Status = 2 -&gt; The G code converter is active (after NC START), the trace is being output.
Status = 3 -&gt; The G code converter is active but interrupted by the language command GCCDISABLE, there is no output into the trace file.
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$P_INCOAP_B</name>
<brief>BOOLean supply and return parameter(s) of the COA application cutting generator</brief>
<description>The size of the array depends on $P_INCOAP_SIZE[1].</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$P_INCOAP_C</name>
<brief>CHAR supply and return parameter(s) of the COA application cutting generator</brief>
<description>The size of the array depends on $P_INCOAP_SIZE[2].</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$P_INCOAP_I</name>
<brief>INT supply and return parameter(s) of the COA application cutting generator</brief>
<description>The size of the array depends on $P_INCOAP_SIZE[3].</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_INCOAP_R</name>
<brief>DOUBLE supply and return parameter(s) of the COA application cutting generator</brief>
<description>The size of the array depends on $P_INCOAP_SIZE[4].</description>
</parameter>

<parameter type="STRING" dim="2">
<name>$P_INCOAP_S16</name>
<brief>CHAR16 supply and return parameter(s) of the COA application cutting generator</brief>
<description>The size of the array depends on $P_INCOAP_SIZE[5].</description>
</parameter>

<parameter type="STRING" dim="2">
<name>$P_INCOAP_S160</name>
<brief>CHAR160 supply and return parameter(s) of the COA application cutting generator</brief>
<description>The size of the array depends on $P_INCOAP_SIZE[6].</description>
</parameter>

<parameter type="STRING" dim="2">
<name>$P_INCOAP_S32</name>
<brief>CHAR32 supply and return parameter(s) of the COA application cutting generator</brief>
<description>The size of the array depends on $P_INCOAP_SIZE[6].</description>
</parameter>

<parameter type="WORD" dim="7">
<name>$P_INCOAP_SIZE</name>
<brief>Array size of the supply and return parameters of the COA application cutting generator</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_MAGNS</name>
<description>Number of tool holders/ spindles (buffer locations of the location type = spindle) from the magazine configuration of the TOA which are allocated to the channel. The number of tool holders / spindles is solely a function of the magazine configuration and does not change during an NC program execution. Value = 0, if there is no magazine configuration or the TMMG (tool management magazines) is not present in the NC.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_OLD_PROG_NET_TIME</name>
<brief>The net runtime of the just correctly ended program in seconds.</brief>
<description>That is the program was not canceled with RESET, but terminated normally with M30. If a new program is started, $AC_OLD_PROG_NET_TIME remains unaffected until M30 is reached again. The implicit procedure of copying $AC_ACT_PROG_NET_TIME to $AC_OLD_PROG_NET_TIME takes place only if $AC_PROG_NET_TIME_TRIGGER is not written. $AC_OLD_PROG_NET_TIME s reset to zero with the PI "Select program". $AC_OLD_PROG_NET_TIME can be reset to zero by explicitly writing 0.0, other values may not be written.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_OLD_PROG_NET_TIME_COUNT</name>
<description>This is zero in the power ON status. $AC_OLD_PROG_NET_TIME_COUNT is always increased if the NCK has newly written $AC_OLD_PROG_NET_TIME. This enables the user to ensure that $AC_OLD_PROG_NET_TIME has been written, that is, if the user cancels the current program with reset, $AC_OLD_PROG_NET_TIME and $AC_OLD_PROG_NET_TIME_COUNT remain unchanged.
Note: Two programs running consecutively can have identical runtimes and be correctly terminated. The user can then only detect this by the changed $AC_OLD_PROG_NET_TIME_COUNT. Modification counter
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_CUT_INV</name>
<description>States that a turning tool is rotated against the machining plane (typically through 180 degrees around the C axis with G18) such that the direction of spindle rotation has to be inverted.
FALSE, TRUE
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_CUTMOD</name>
<description>Reads the current valid value that was last programmed with the language command CUTMOD (number of the tool carrier for which the cutting edge data modification is to be activated). If the last programmed value was CUTMOD = -2 (activation with the currently active tool carrier with orientation capability), the value -2 is not returned but the number of the active tool carrier with orientation capability at the time of programming.</description>
</parameter>

<parameter type="STRING" dim="1">
<name>$AC_CUTMODK</name>
<brief>Reads the currently valid value last programmed with the language command CUTMODK.</brief>
<description>(Name of the orientation transformation defined by kinematic chains for which the edge data modification is to be activated).</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_CUTMODKA</name>
<brief>Cutter position modification for a transformation defined with kinematic chains is active.</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_CUTMODKA</name>
<brief>Cutter position modification for a transformation defined with kinematic chains is active.</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$P_EG_BC</name>
<description>Electronic gear:
Block change criterion. Important for EGON, EGONSYN
0: NOC Block change is performed immediately
1: IPOSTOP Block change is performed with setpoint side synchronism
2: COARSE Block change is performed with "Synchronism coarse"
3: FINE Block change is performed with "Synchronism fine"
</description>
</parameter>

<parameter type="Long INT">
<name>$P_MTHSDC</name>
<description>Master tool holder no. or master spindle no. is determined with reference to the active tool for the next D offset selection. This is important
if the master spindle changes after the last tool change.
&gt;0 Successful read access
 0 No master tool holder or no master spindle available.The next D offset works with T0.
-1 TMMG not available
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_OFFN</name>
<brief>Last programmed offset normal</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_ORI_DIFF</name>
<description>The angle difference between the exact angles and those available in $P_ORI_ANG for the orientation axes of the first (or single) solution during orientation programming. The content of these variables can only be unequal to zero if the positions of the orientation axes are incremental (Hirth coupling).</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_ORI_DIFF</name>
<description>The angle difference between the exact angles and those available in $P_ORI_ANG for the orientation axes of the second solution during orientation programming. The content of these variables can only be unequal to zero if the positions of the orientation axes are incremental (Hirth coupling).</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_ORI_POS</name>
<brief>The angle of the orientation axes of the first (or single) solution during orientation programming.</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_ORI_POS</name>
<brief>The angle of the orientation axes of the second solution during orientation programming.</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_ORI_SOL</name>
<description>Contains the number of solutions and additional status information for orientation programming. See also the documentation for the corresponding system variables.</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_ORI_STAT</name>
<description>Contains the status of the orientation axes during orientation programming. See also the documentation for the corresponding system variables.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_AD</name>
<brief>Angle of rotation for modification of edge position and cutting direction</brief>
<description>Angle between 0 and 360 degrees.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_TC</name>
<brief>The active orientatable toolholder</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_TCANG</name>
<brief>The current angles of the two axes of an orientation-capable toolholder</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_TCDIFF</name>
<description>The difference between the exact and the actually used angles of the two axes of an orientation-capable toolholder</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_TCNUM</name>
<brief>Number of available orientable tool carriers in the channel</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_TCSOL</name>
<description>Number of solutions (configuration options for rotary axes) on selection of an orientatable toolholder. The variable value can be between 0 and 2, where 0 to 2 means either none, 1 solution or 2 solutions.</description>
</parameter>

<parameter type="INT" dim="1">
<name>$P_TCSTAT</name>
<brief>The status of an orientable tool carrier.</brief>
<description>
The variable is bit-coded with the following meanings:
 0x0001 The first rotary axis is available
 0x0002 The second rotary axis is available
 0x0004 The angles used for the calculation come from an orientation in the frame direction
 0x0008 The angles used for the calculation have been absolutely defined
 0x0010 The polar axis angle is not defined in the case of orientation in the frame direction
 0x1000 Only the tool can be rotated (kinematic type T)
 0x2000 Only the workpiece can be rotated (kinematic type P)
 0x4000 Tool and workpiece can be rotated (kinematic type M)
The bits stated here are not currently assigned.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_TOOL_O</name>
<brief>Supplies the current tool orientation in various coordinate systems</brief>
<description>
Possible values of the line index:
1, 2, 3: Components of the vector in BCS
4, 5, 6: Components of the vector in PCS/WCS
7, 8, 9: Components of the vector in ENS
The orientation vector is normalized, i.e. it has the value 1.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_TOOL_O_R</name>
<brief>Current tool rotation in various coordinate systems.</brief>
<description>
Possible values of the line index:
1, 2, 3: Components of the vector in BCS
4, 5, 6: Components of the vector in PCS/WCS
7, 8, 9: Components of the vector in ENS
The rotation vector is normalized, i.e. it has the absolute value 1.
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$PA_ACCLIMA</name>
<description>Axial acceleration override in run in 1-200</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$PA_JERKLIMA</name>
<description>Axial jerk override in run in 1-200</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$PA_VELOLIMA</name>
<description>Axial velocity override in run in 1-200</description>
</parameter>

<parameter type="INT" dim="1">
<name>$PC_TRAFO_ROT_CHAIN_INDEX</name>
<description>Images the indices of the orientation axes in the array $NT_ROT_AX_NAME onto the internal orientation axis sequence. See also documentation of the associated system variables.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$PC_TRAFO_ROT_CHAN_AX_EX</name>
<description>Determines the channel axis index of the i-th orientation axis, where i is the index of this axis in the external representation of the kinematic chain (index of the entry in the array$NT_ROT_AX_NAME[n, i]). See also documentation of the associated system variables.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$PC_TRAFO_ROT_CHAN_AX_IN</name>
<description>Determines the channel axis index of the i-th orientation axis, where i is the index of this axis in the internal representation of the kinematic chain. See also documentation of the associated system variables.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_PROG_NET_TIME_TRIGGER</name>
<description>Serves for the selective measurement of program sections, that is the time measurement can be switched on and off again by the
program by writing $AC_PROG_NET_TIME_TRIGGER. Certain values of $AC_PROG_NET_TIME_TRIGGER are given a special function in order to fully exploit all trigger options:
0 Neutral:
  The trigger is not active, the value is taken from reset with the start key.
1 Terminate:
  Terminates the measurement and copies $AC_ACT_PROG_NET_TIME -&gt; $AC_OLD_PROG_NET_TIME.
  $AC_ACT_PROG_NET_TIME is set to zero and then runs on again.
2 Start:
  Starts the measurement and sets $AC_ACT_PROG_NET_TIME to zero.
  $AC_OLD_PROG_NET_TIME remains unchanged.
3 Stop:
  Stops the measurement.
  Does not change $AC_OLD_PROG_NET_TIME and holds $AC_ACT_PROG_NET_TIME constant until resume.
4 Resume:
  Resumption of the measurement, that is a previously stopped measurement is resumed.
  $AC_ACT_PROG_NET_TIME runs on. $AC_OLD_PROG_NET_TIME remains unchanged.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_REQUIRED_PARTS</name>
<brief>Number of required workpieces (workpiece requirement)</brief>
<description>The workpiece count at which the number of current workpieces $AC_ACTUAL_PARTS is set to zero can be defined in this counter.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_ROT_SYS</name>
<description>Reference system for orientation movements with cartesian manual traversal
0: Axis-specific manual traversal active
1: Cartesian manual traversal in basic coordinate system active
2: Cartesian manual traversal in workpiece coordinate system active
3: Cartesian manual traversal in tool coordinate system active
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_SPECIAL_PARTS</name>
<brief>Number of current workpieces as defined by user</brief>
<description>This counter enables the user to define his own workpiece count. The counter is reset to zero automatically only when the control system boots on defaults.</description>
</parameter>

<parameter type="INT" dim="1">
<name>$AC_SPLITBLOCK</name>
<description>Identifier of internally splitted blocks
  0: A BLOCK programmed unchanged (a BLOCK generated by the compressor is regarded as programmed BLOCK):
&lt;&gt;0: BLOCK was shortened or is an internally generated BLOCK; the following values are possible:
  1: It is an internally generated BLOCK or a shortened original BLOCK
  3: It is the last block in a chain of internally generated blocks or shortened original blocks.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOFFR</name>
<brief>Programmed tool radius offset.</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TIMESC</name>
<brief>Time after a block change between programmed blocks in IPO cycles</brief>
<description>Each programmed block can be divided up into a chain of part blocks that are processed one after the other. Only (!) with the 1st cycle of the 1st block of the chain, timeSC is set to zero and then counted up in seconds. Therefore, the variable enables time measurements throughout the entire block chain.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_TH_OF_D</name>
<brief>Number of the tool holder or spindle on which the active tool is mounted, which contains the active D no.</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_TOTAL_PARTS</name>
<brief>Total number of all machined workpieces</brief>
<description>This counter specifies the number of workpieces machined since it was started. The counter is automatically set to zero only if the control system boots on defaults.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_TRANS_SYS</name>
<description>Reference system for translation with cartesian manual traversal
0: Axis-specific manual traversal active
1: Cartesian manual traversal in basic coordinate system active
2: Cartesian manual traversal in workpiece coordinate system active
3: Cartesian manual traversal in tool coordinate system active
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_EG_SYNCDIFF</name>
<brief>Electronic gear: Synchronism deviation (actual values).</brief>
<description>The comparison between this value and $MA_COUPLE_POS_TOL_... determines whether the appropriate "Synchronism" VDI signal is set.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_EG_SYNCDIFF_S</name>
<brief>Electronic gear: Synchronous run difference (actual values) with sign.</brief>
<description>Whether the corresponding VDI signal "synchronous run" is set depends upon the comparison of this value with $MA_COUPLE_POS_TOL_....</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_SYNCDIFF</name>
<brief>Actual value synchronism difference for all types of coupling</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_SYNCDIFF_STAT</name>
<brief>Status of the actual value synchronism difference</brief>
<description>
-4: Reserved
-3: No valid value in $VA_SYNCDIFF, tangential control
-2: No valid value in $VA_SYNCDIFF, master value coupling and simulated master value
-1: No valid value in $VA_SYNCDIFF
 0: No valid value in $VA_SYNCDIFF, coupling not active
 1: Valid value in $VA_SYNCDIFF
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VC_TOOL_O</name>
<description>Supplies the actual value of the current tool orientation in various coordinate systems:
Possible values of the line index:
1, 2, 3: Components of the vector in BCS
4, 5, 6: Components of the vector in PCS/WCS
7, 8, 9: Components of the vector in ENS
The orientation vector is normalized, i.e. it has the value 1.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VC_TOOL_O_DIFF</name>
<description>Supplies the angle between the setpoint vector and actual vector of the tool orientation in various coordinate systems:
Possible values of the line index:
1: Angle in BCS
2: Angle in PCS/WCS
3: Angle in ENS
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VC_TOOLO_STAT</name>
<brief>Supplies the status of the computation of the actual orientation</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VC_TOOL_R</name>
<brief>Actual value of the tool rotation in various coordinate systems</brief>
<description>
Possible values of the line index:
1, 2, 3: Components of the vector in BCS
4, 5, 6: Components of the vector in PCS/WCS
7, 8, 9: Components of the vector in ENS
The rotation vector is normalized, i.e. it has the value 1.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$VC_TOOL_R_DIFF</name>
<brief>Angle between setpoint and actual tool rotation vectors in different coordinate systems</brief>
<description>
Possible values of the line index:
1: Angle in BCS
2: Angle in PCS/WCS
3: Angle in ENS
</description>
</parameter>

<parameter type="INT" dim="1">
<name>$VC_TOOLR_STAT</name>
<brief>Status of the computation of the actual rotation</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AC_AUXFU_M_TICK</name>
<description>The variable is used to read the time stamp of the last auxiliary function group collected (search function) or output for an auxiliary function group. If no auxiliary function has been output for a specified group yet, the variable provides value -1.</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AC_AUXFU_PREDEF_INDEX</name>
<description>The variable is used to read the pre-defined index of the last auxiliary function group collected (search function) or output for an auxiliary function group. If no auxiliary function has been output for a specified group yet, the variable provides value -1.</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AC_AUXFU_SPEC</name>
<description>The variable is used to read the output specification of the last auxiliary function group collected (search function) or output for an auxiliary function group. If no auxiliary function has been output for a specified group yet, the variable provides value -1.
The output specification is bit-coded:
 Bit 0 = 1 Acknowledgement "normal" after an OB1 cycle
 Bit 1 = 1 Acknowledgement "quick" with OB40
 Bit 2 = 1 No pre-defined auxiliary function
 Bit 3 = 1 No output to the PLC
 Bit 4 = 1 Spindle reaction after acknowledgement by the PLC
 Bit 5 = 1 Output before movement
 Bit 6 = 1 Output during movement
 Bit 7 = 1 Output at block end
 Bit 8 = 1 No output after block search type 1,2,4
 Bit 9 = 1 Collection during block search type 5 (SERUPRO)
 Bit 10 = 1 No output during block search type 5 (SERUPRO)
 Bit 11 = 1 Cross-channel auxiliary function (SERUPRO)
 Bit 12 = 1 Output made through synchronized action
 Bit 13 = 1 Implicit auxiliary function
 Bit 14 = 1 Active M01
 Bit 15 = 1 No output during travel-in test run
 Bit 16 = 1 Nibbling OFF
 Bit 17 = 1 Nibbling ON
 Bit 18 = 1 Nibbling
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AC_AUXFU_TICK</name>
<description>The variable is used to read the auxiliary function counter per package of the last auxiliary function group collected (search function) or output for an auxiliary function group.</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AC_AUXFU_TICK</name>
<description>The variable is used to read the package counter per sequence of the last auxiliary function group collected (search function) or output for an auxiliary function group.</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AC_AUXFU_TICK</name>
<description>The variable is used to read the output sequence counter (all outputs within an IPO cycle) of the last auxiliary function group collected (search function) or output for an auxiliary function group.</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AC_AUXFU_EXT</name>
<brief>Extension of the auxiliary function</brief>
<description>No description</description>
</parameter>

<parameter type="STRING" dim="2">
<name>$AC_AUXFU_TYPE</name>
<brief>Type of the auxiliary function</brief>
<description>e.g. "M", "S", "T", "D", "F", "H", "L".</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_AUXFU_VALUE</name>
<brief>Value of the auxiliary function.</brief>
<description>This value will be supplied, if "status" Bit15 = 1</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AC_AUXFU_M_VALUE</name>
<brief>Value of the auxiliary function.</brief>
<description>This value will be supplied, if "status" Bit14 = 1</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_PRESET</name>
<description>The function PRESETON (...) programs a work offset for an axis. The value of the offset is stored in the variable 'PRESETVal'. The variable can be overwritten by the part program and by the HMI.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_ACC</name>
<brief>Current axial acceleration value</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_ACC_PERCENT</name>
<brief>Current acceleration value for single-axis interpolation in percent</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AA_ACT_INDEX_AX_POS_NO</name>
<description>Current indexing position; the display depends on $MN_INDEX_AX_NO_MODE and the division (via table or equidistant)
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AA_ALARM_STAT</name>
<brief>Display indicating whether alarms are active for a PLC-controlled axis.</brief>
<description>The relevant coded alarm reactions can be used as a source for the "Extended Stop and Retract" function. The data is bit-coded, allowing, where necessary, individual states to be masked or evaluated separately (bits not listed supply a value of 0)
Bit2 = 1: NOREADY (active rapid deceleration + cancelation of servo enable)
Bit6 = 1: STOPBYALARM (rampm stop in all channel axes)
Bit9 = 1: SETVDI (VDI interface signal "Setting alarm")
Bit13 = 1: FOLLOWUPBYALARM (Follow-up)
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_AXCHANGE_STAT</name>
<brief>Axis status with respect to axis replacement</brief>
<description>
0: Axis can be replaced
1: Axis is linked to the channel, but can become the PLC, command or reciprocating axis
2: Axis cannot be replaced
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_AXCHANGE_TYP</name>
<description>Axis type with respect to axis replacement
0: Axis assigned to the NC program
1: Axis assigned to the PLC or active as command axis or reciprocating axis
2: Other channel has interpolation right
3: Neutral axis
4: Neutral axis controlled from the PLC
5: Other channel has interpolation right; axis is requested for the NC program
6: Other channel has interpolation right; axis is requested as neutral axis
7: Axis is PLC axis or is active as command axis or reciprocating axis; axis is requested for the NC program
8: Axis is PLC axis or is active as command axis or reciprocating axis; axis is requested as neutral axis
</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$AA_AX_DISABLE</name>
<brief>Resulting status of axis/spindle disable.</brief>
<description>
0: Axis/spindle disable not active.
1: Axis/spindle disable active.
</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$AA_AX_DISABLE_SRC</name>
<brief>Bitmask which provides the status and source of the currently active axis/spindle disable.</brief>
<description>If bit 0 has been set, the axis/spindle disable is active. The data is bit-coded. Individual states can therefore be masked or evaluated separately if necessary:
Bit0 = 1: Resulting state from all sources: axis/spindle disable active.
Bit1 = 1: Axial signal 'Axis/spindle disable triggered by PLC' is active.
Bit2 = 1: Channel-specific program test is active.
Bit3 = 1: Axial suppression of 'Program test triggered by the PLC' is active.
Bit4 = 1: Axial signal 'Program test (energy saving mode)' is active.
Bit5 = 1: SERUPRO is active.
Bit6 = 1: Coupling object 'Total state is axis/spindle disable' is active.
Bit7 = 1: Coupling object 'Total state is real traveling' is active.
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_BCS_OFFSET</name>
<description>Sum of all axial offsets of an axis, such as DRF, online tool offset, $AA_OFF and ext. WO.
</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$AA_BRAKE_CONDB</name>
<brief>Shows the pending braking requests (conditions) for the interpolator stop of the axis / spindle.</brief>
<description>A braking request consists of a collision direction relating to a coordinate axis in the BCS and a braking priority relating to the machining step. If the axis / spindle receives a current braking request on account of these requirement(s), bit 0 is set in $AA_BRAKE_STATE[X] (in the next IPO cycle).
The highest deceleration priority in positive direction is shown in bits 0 to 3:
0x0: No pending deceleration request
0x1: Priority 1 covers all positioning actions (G0, POS, SPOS)
0x2: Priority 2 covers DYNNORM and all priority 1 motions
0x3: Priority 3 covers DYNPOS and all priority 1 to 2 motions
0x4: Priority 4 covers DYNROUGH and all priority 1 to 3 motions
0x5: Priority 5 covers DYNSEMIFIN and all priority 1 to 4 motions
0x6: Priority 6 covers all motions (including DYNFINISH). The request could also have been triggered by a CP SW limit stop.
0x7: Priority 7 covers all motions. The request was triggered by the VDI interface signal DB31,..DBX4.3 "Feed stop / Spindle stop".
     Deceleration always takes place, irrespective of the direction of motion.
0xD: Priority 13 covers all motions. Axial deceleration takes place with an emergency stop deceleration ramp.
The highest deceleration priority in negative direction is shown in bits 16 to 19:
0x0 to 0xD: Same meaning as bits 0 to 3
All other bits are reserved and not set.
If the value of the variable is shown in hexadecimal format, the fifth character from the right shows the deceleration priority in negative direction while the first number from the right shows the deceleration priority in positive direction.
</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$AA_BRAKE_CONDM</name>
<brief>Shows the pending braking requests (conditions) for the interpolator stop of the axis / spindle.</brief>
<description>A braking request consists of a collision direction relating to a coordinate axis in the MCS and a braking priority relating to the machining step.
The highest deceleration priority in positive direction is shown in bits 0 to 3:
0x0: No pending deceleration request
0x1: Priority 1 covers all positioning actions (G0, POS, SPOS)
0x2: Priority 2 covers DYNNORM and all priority 1 motions
0x3: Priority 3 covers DYNPOS and all priority 1 to 2 motions
0x4: Priority 4 covers DYNROUGH and all priority 1 to 3 motions
0x5: Priority 5 covers DYNSEMIFIN and all priority 1 to 4 motions
0x6: Priority 6 covers all motions (including DYNFINISH). The request could also have been triggered by a CP SW limit stop.
0x7: Priority 7 covers all motions. The request was triggered by the VDI interface signal DB31,..DBX4.3 "Feed stop / Spindle stop".
     Deceleration always takes place, irrespective of the direction of motion.
0xD: Priority 13 covers all motions. Axial deceleration takes place with an emergency stop deceleration ramp.
The highest deceleration priority in negative direction is shown in bits 16 to 19:
0x0 to 0xD: Same meaning as bits 0 to 3
All other bits are reserved and not set.
If the value of the variable is shown in hexadecimal format, the fifth character from the right shows the deceleration priority in negative direction while the first number from the right shows the deceleration priority in positive direction.
</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$AA_BRAKE_STATE</name>
<description>Returns for the axis / spindle whether an active deceleration request has been set on account of the request of $AA_BRAKE_CONDB or a CP SW limit stop or a VDI interface signal DB31,..DBX4.3 "Feed stop / Spindle stop".
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_CHANNO</name>
<description>The variable supplies the number of the channel in which the axis is currently being interpolated. With value 0, the axis could not be assigned to any channel.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_COLLPOS</name>
<brief>Position of a machine axis with risk of collision</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_COUP_ACT</name>
<brief>Current coupling state of the slave spindle</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_COUP_CORR</name>
<brief>This variable is used to execute the function "Correct synchronism error".</brief>
<description>It returns the compensation value for the position offset for the generic coupling with CPFRS = "MCS". The actual values of this spindle are compared with the setpoints for the duration (MD 30455 MISC_FUNCTION_MASK, bit 7) of the activation of the VDI interface signal DB31...,DBX31.6 'Correct synchronism' for the following spindle with coupling active. The difference is the compensation value, which can be read with this variable.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_COUP_CORR_DIST</name>
<brief>Generic coupling: path still to be retracted for $AA_COUP_CORR</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_COUP_OFFS</name>
<brief>Position offset of the synchronous spindle desired value</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CURR</name>
<brief>Actual value of the axis/spindle current in A (only available for PROFIdrive drives)</brief>
<description>No description</description>
</parameter>
<parameter type="DOUBLE" dim="2">
<name>$AA_DELT</name>
<brief>Stored axial distance-to-go in the WCS after axial delete-distance-to-go DELDTG(axis) for synchronous actions</brief>
<description>(Note: for SYNACT only)</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AA_DEPAXO</name>
<brief>Dependency on other axes.</brief>
<description>Returns an axis code for the defined axis AX containing all the machine axes that have a mechanical dependency on the defined axis.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTBB</name>
<brief>Axis-specific distance from the beginning of the block in the BCS</brief>
<description>for positioning and synchronous axes used in synchronous actions
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTBW</name>
<brief>Axis-specific distance from the beginning of the block in the WCS</brief>
<description>for positioning and synchronous axes used in synchronous actions</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTEPW</name>
<brief>Axial distance-to-go for infeed during oscillation  in the WCS</brief>
<description>(Note: for SYNACT only)</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTEW</name>
<brief>Axial distance to the end of the block in the WCS for positioning and synchronous axes for synchronous actions</brief>
<description>(Note: for SYNACT only)</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTSB</name>
<brief>Path from the motion starting point in the BCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTSW</name>
<brief>Path from the motion starting point in the WCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTBREB</name>
<brief>The estimated total distance until the end of deceleration is reached, BCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTBREB_CMD</name>
<brief>Command share of the overall deceleration distance of axis ax in the BCS.</brief>
<description>The value is the estimated deceleration distance of the axis up to standstill.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTBREB_CORR</name>
<brief>Offset section of the deceleration distance, BCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTBREB_DEP</name>
<brief>Dependent section of the decelaration distance, BCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTBREM</name>
<brief>The estimated total distance until the end of deceleration is reached, MCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTBREM_CMD</name>
<brief>Specified section of the decelaration distance, MCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTBREM_CORR</name>
<brief>Offset section of the deceleration distance, MCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTBREM_DEP</name>
<brief>Dependent section of the decelaration distance, MCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTEB</name>
<brief>Axis-specific distance to the end of the block in the BCS</brief>
<description>for positioning and synchronous axes used in synchronous actions
(note: SYNACT only)
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DTEPB</name>
<brief>Axis-specific distance-to-go of infeed during oscillation in the BCS</brief>
<description>(note: SYNACT only)</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_ENC1_ACTIVE</name>
<brief>First measuring system is active</brief>
<description>
0: Measuring system is not active
1: Measuring system is active
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_ENC2_ACTIVE</name>
<brief>Second measuring system is active</brief>
<description>
0: Measuring system is not active
1: Measuring system is active
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_ENC_ACTIVE</name>
<brief>Measuring system is active</brief>
<description>
0: Measuring system is not active
1: Measuring system is active
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_ESR_ENABLE</name>
<brief>(Axial) enabling of reactions of "Extended Stop and Retract" function.</brief>
<description>The selected axial ESR reaction must be parameterized in MD $MA_ESR_REACTION.beforehand. The corresponding Stop or Retract reactions can be activated via $AN_ESR_TRIGGER (or for individual drives in the event of communications failure / DC-link undervoltage), generator-mode operation is automatically activated in response to undervoltage conditions.
0: FALSE
1: TRUE
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_ESR_STAT</name>
<brief>(Axial) status checkback signals of "Extended Stop and Retract" function,</brief>
<description>which can be applied as input signals for the gating logic of the ESR (synchronous actions). The data is bit-coded. Individual states can therefore be masked or evaluated separately if necessary:
Bit0 = 1: Generator mode is activated
Bit1 = 1: Retract operation is activated
Bit2 = 1: Stop operation is activated
Bit3 = 1: Risk of undervoltage (DC-link voltage monitoring, voltage has dropped below warning threshold)
Bit4 = 1: Speed has dropped below minimum generator mode threshold (i.e. no more regenerative rotation energy is available).
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AA_ESR_TRIGGER</name>
<brief>Activation of "NC-controlled ESR" for PLC-controlled axis</brief>
<description>No description</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$AA_FIX_POINT_SELECTED</name>
<brief>Selected fixed point: Number of the fixed point that is to be approached</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_IBN</name>
<brief>Actual tool base position in relation to basic zero point</brief>
<description>SGA:actToolBasePos without progr. frame and without settable frames</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_IBN_CORR</name>
<brief>Current BZS setpoint value of an axis including override components</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_IEN</name>
<brief>Base position of the active tool relative to the workpiece zero point</brief>
<description>SGA:actToolBasePos without programmed frame</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_IEN_CORR</name>
<brief>Current SZS setpoint value of an axis including override components</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_IN_SYNC</name>
<description>Synchronization status of the following axis with master value coupling and ELG
0: Synchronization is not running
1: Synchronization is running, i.e. following axis is being synchronized
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_INPOS_STAT</name>
<description>Status for the programmed position
0: No status available (axis/spindle is outside of the programmed position)
1: Travel motion pending
2: Position setpoint reached
3: Position reached with 'exact stop coarse'
4: Position reached with 'exact stop fine'
</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$AA_IPO_NC_CHANAX</name>
<description>If the axis is currently interpolated to this NCU, the channel and channel axis number which define the interpolator of the axis are output. If the axis is currently interpolated to a different NCU, the NCU identifier of the interpolated NCU and the global axis number of the machine axis are output. This global axis number can then be used to transfer the interpolated channel and the channel axis number to the other NCU, with NCU  ID 2, with anlpoChanAx[203]. The axis must be assigned to at least one channel on this NCU, otherwise 0 will be returned. The channel is output as from position 100, and the channel axis number is output as from position 1, e.g. 1005 - channel 10 channel axis 5. These values are always lower than 10000. The NCU is output as from position 10000, e.g. 20203: NCU 2 and the global axis number is 203.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_JERK_COUNT</name>
<brief>Total traverse processes of an axis with jerk</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_JERK_TOT</name>
<brief>Overall total jerk of an axis</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_JOG_POS_ACT</name>
<brief>Position reached for JOG to position</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_JOG_POS_SELECTED</name>
<brief>JOG to position is active</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_LEAD_V</name>
<brief>Actual lead value - velocity</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_LOAD</name>
<brief>Drive load in % (only available for PROFIdrive drives)</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_LOAD_SMOOTH</name>
<brief>Smoothed drive load in %</brief>
<description>No description</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$AA_MACHAX</name>
<brief>The NCU and machine axis are output for an axis, representing the physical image of the axis.</brief>
<description>The machine axis must be assigned to at least one channel on this NCU, otherwise 0 will be returned. Without an NCU link, i.e. if there is only one NCU, only the number of the machine axis will be output. In this case, the NCU ID is equal to zero. The NCU ID is output as from position 100, e.g. 20005: NCU 2 axis 5.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AA_MASL_STAT</name>
<description>Each slave axis currently coupled via master-slave delivers the machine axis number of the corresponding master axis. Zero is displayed as default for inactive coupling. A master axis also shows default value zero.
 0: No coupling for this axis configured, or axis is master axis, or no coupling active
&gt;0: Machine axis number of the master axis with which the slave axis is currently coupled
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AA_MEAACT</name>
<brief>Axial measuring active</brief>
<description>
0: Measuring system is not active
1: Measuring system is active
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_MM4</name>
<brief>Access to measurement result of trigger event 4 in the MCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_OFF</name>
<brief>Superimposed position offset from synchronous actions</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_OFF_LIMIT</name>
<brief>Limit for axial correction $AA_OFF reached</brief>
<description>(Note: for SYNACT only)
 0: Limit value not reached
 1: Limit value reached in positive axis direction
11: Limit value reached in negative axis direction
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_OFF_VAL</name>
<brief>Integrated value of overlaid motion for an axis.</brief>
<description>The negative value of this variable can be used to cancel an overlaid motion. e.g. $AA_OFF[axis] = -$AA_OFF_VAL[axis] </description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$AA_FIX_ON_POINT</name>
<brief>Number of the fixed point at which the axis stands</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_OSCILL_BREAK_POS2</name>
<brief>Oscillation interrupt position 2</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_OSCILL_REVERSE_POS1</name>
<brief>Current reverse position 1 for oscillation in the BCS.</brief>
<description>For synchronous actions the value of the setting data $SA_OSCILL_REVERSE_POS1 is evaluated online; (note: SYNACT only)</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_OSCILL_REVERSE_POS2</name>
<brief>Current reverse position 2 for oscillation in the BCS</brief>
<description>For synchronous actions the value of the setting data $SA_OSCILL_REVERSE_POS1 is evaluated online; (note: SYNACT only)</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_OVR</name>
<brief>Axial override for synchronous actions</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_PLC_OVR</name>
<brief>Axial override specified by PLC for motion-synchronous actions</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AA_POLFA_VALID</name>
<description>States whether the retraction of the single axis is programmed
0: No retraction programmed for the single axis
1: Retraction programmed as position
2: Retraction programmed as distance
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AA_POSRES</name>
<brief>Axis status "Position restored".</brief>
<description>The value TRUE shows that the position of the axis has been restored after the voltage breakdown. ($MA_ENC_REFP_STATE[] = 3). After referencing of the axis, the value goes to FALSE.
1 = TRUE: Axis position not restored
0 = FALSE: Axis position restored
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_POWER</name>
<brief>Drive power in W (only available for PROFIdrive drives)</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_POWER_SMOOTH</name>
<brief>Smoothed drive power in W (only available for PROFIdrive drives)</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_PROG_INDEX_AX_POS_NO</name>
<brief>Programmed indexing position</brief>
<description>
 0: No indexing axis, therefore no indexing position available
&gt;0: Number of the programmed indexing position
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_REF</name>
<brief>Axis is referenced</brief>
<description>
0: Axis is not referenced
1: Axis is referenced
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_REPOS_DELAY</name>
<brief>REPOS suppression active</brief>
<description>
0: REPOS suppression is currently not active for this axis
1: REPOS suppression is currently active for this axis
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AA_SCPAR</name>
<brief>Current setpoint parameter set</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AA_SNGLAX_STAT</name>
<brief>Display status of a PLC-controlled axis</brief>
<description>
0: Not a single axis
1: Reset
2: Ended
3: Interrupted
4: Active
5: Alarm
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_SOFTENDN</name>
<brief>Software end position, negative direction</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_SOFTENDP</name>
<brief>Software end position, positive direction</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_STAT</name>
<brief>Axis state</brief>
<description>
0: no axis state available
1: travel command is active
2: axis has reached the IPO end. only for channel axes
3: axis in position (exact stop coarse) for all axes
4: axis in position (exact stop fine) for all axes
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_SYNC</name>
<brief>Coupling status of the following axis with master value coupling</brief>
<description>
0: No synchronism
1: Synchronism coarse
2: Synchronism fine
3: Synchronism coarse and fine
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_SYNCDIFF</name>
<brief>Setpoint synchronism difference</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AA_SYNCDIFF_STAT</name>
<brief>Status of the setpoint synchronism difference</brief>
<description>
-4: No valid value in $AA_SYNCDIFF, coupled motion from part program
-3: Reserved
-2: Reserved
-1: No valid value in $AA_SYNCDIFF
 0: No valid value in $AA_SYNCDIFF, coupling not active
 1: Valid value in $AA_SYNCDIFF
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_TOTAL_OVR</name>
<brief>The total axial override for motion-synchronous actions</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_TRAVEL_COUNT</name>
<brief>Total traverse processes of an axis</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_TRAVEL_COUNT_HS</name>
<brief>Total traverse processes of an axis at high speed</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_TYP</name>
<brief>Axis type</brief>
<description>
0: axis in other channel
1: channel axis of same channel
2: neutral axis
3: PLC axis
4: reciprocating axis
5: neutral axis, currently traversing in JOG
6: slave axis coupled via master value
7: coupled motion slave axis
8: command axis
9: compile cycle axis
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_TYPE</name>
<brief>Cross-channel axis type</brief>
<description>
0: Axis type cannot be determined
1: NC program axis
2: Neutral axis
3: PLC axis
4: Reciprocating axis
5: Neutral axis that is currently executing a JOG or homing motion
6: Following axis coupled to the master value
7: Coupled motion of the following axis, activated in a synchronized action
8: Command axis
9: Compile Cycle axis
10: Coupled slave axis (master-slave function.)
11: Program axis that is currently executing a JOG or homing motion
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_VC</name>
<brief>Additive correction value for path feed or axial feed</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AC_RPVALID</name>
<description>Reapproach position valid
0: Reapproach position not valid
1: Reapproach position valid
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_COUP_OFFS</name>
<description>Position offset of an axis to a leading axis / leading spindle (actual value)</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$MC_DISPLAY_AXIS</name>
<brief>Identifier indicating whether axis is displayed by HMI as a machine axis.</brief>
<description>
0= Do not display at all
0xFFFF = Always display everything
bit 0 = Display in actual-value window
bit 1 = Display in reference point window
bit 2 = Display in Preset / Basic offset / Scratching
bit 3 = Display in handwheel selection
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_DRF</name>
<brief>DRF value.</brief>
<description>The physical unit is defined in extUnit (in module SGA)</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_FOC</name>
<brief>Current status of "Travel with limited torque" function</brief>
<description>
0: FOC not active
1: FOC modal active (programming of FOCON[])
2: FOC non-modal active (programming of FOC[])
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$VA_FXS_INFO</name>
<description>Additional information on travel to fixed stop if $VA_FXS[]=2, or OPI variable $AA_FXS=2.
0 No additional information available
1 No approach motion programmed
2 Programmed end position reached, movement ended
3 Abort by NC RESET (Reset key)
4 Fixed stop window exited
5 Torque reduction was rejected by drive
6 PLC has canceled enable signals
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_FXS</name>
<brief>State after travelling to fixed stop</brief>
<description>
0 = normal control, no clamping
1 = fixed stop reached, clamping active
2 = selection failed
3 = selection active
4 = stop detected
5 = deselection active
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_IS</name>
<brief>Safe actual position of the axis. The physical unit is defined in the variable measUnit (in this module).</brief>
<description>No description</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$VA_ABSOLUTE_ENC_DELTA_INIT</name>
<brief>Enc1: Initial difference</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_ABSOLUTE_ENC_ERR_CNT</name>
<brief>Enc 1: Error counter for absolute encoder</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_ABSOLUTE_ENC_STATE</name>
<brief>Enc1: Status of absolute encoder interface</brief>
<description>
Bit0: Interface is active
Bit1: Error during parity check
Bit2: Error bit alarm
Bit3: Error bit CRC error
Bit4: Start bit missing with EnDat transfer
</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$VA_ABSOLUTE_ENC_ZERO_MON_MAX</name>
<brief>Enc1: Maximum of $VA_ENC_ZERO_MON_ACT with absolute encoder</brief>
<description>No description</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$VA_ABSOLUTE_ENC_DELTA_INIT</name>
<brief>Enc2: Initial difference</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_ABSOLUTE_ENC_ERR_CNT</name>
<brief>Enc 2: Error counter for absolute encoder</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_ABSOLUTE_ENC_STATE</name>
<brief>Enc2: Status of absolute encoder interface</brief>
<description>
Bit0: Interface is active
Bit1: Error during parity check
Bit2: Error bit alarm
Bit3: Error bit CRC error
Bit4: Start bit missing with EnDat transfer
</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$VA_ABSOLUTE_ENC_ZERO_MON_MAX</name>
<brief>Enc2: Maximum of $VA_ABSOLUTE_ENC_ZERO_MON_MAX with absolute encoder</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_CEC_COMP_VAL</name>
<brief>Axial sag compensation value</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$VA_CPSYNC2</name>
<description>Second synchronism monitoring of the following axis / spindle
0: Monitoring not active
Bit 0 = 1: Monitoring 'Synchronism(2) coarse' active
Bit 1 = 1: Synchronism(2) coarse available
Bit 2 = 1: Monitoring 'Synchronism(2) fine' active
Bit 3 = 1: Synchronism(2) fine available
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_CURR</name>
<brief>Drive actual current value</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_DIST_TORQUE</name>
<brief>Disturbing torque/max. torque (motor end, York)</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$VA_DPE</name>
<brief>Status of power enable of a machine axis</brief>
<description>0-1</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$VA_ENC_ZERO_MON_ACCESS_CNT</name>
<brief>Enc1: Update counter</brief>
<description>No description</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$VA_ENC_ZERO_MON_ACT</name>
<brief>Enc1: Zero monitoring values</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_ENC_ZERO_MON_ERR_CNT</name>
<brief>Enc 1: Error counter for zero mark monitoring</brief>
<description>No description</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$VA_ENC_ZERO_MON_INIT</name>
<brief>Enc1: Hardware counter value of the basic zero mark</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_ENC2_COMP_VAL</name>
<brief>Leadscrew error compensation (LEC) value encoder 2</brief>
<description>No description</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$VA_ENC_ZERO_MON_ACCESS_CNT</name>
<brief>Enc2: Update counter</brief>
<description>No description</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$VA_ENC_ZERO_MON_ACT</name>
<brief>Enc2: Zero monitoring values</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_ENC_ZERO_MON_ERR_CNT</name>
<brief>Enc 2: Error counter for zero mark monitoring</brief>
<description>No description</description>
</parameter>

<parameter type="DWORD" dim="2">
<name>$VA_ENC_ZERO_MON_INIT</name>
<brief>Enc2: Hardware counter value of the basic zero mark</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$VA_FOC</name>
<brief>Actual status of "ForceControl"</brief>
<description>
0: ForceControl not active
1: Modal ForceControl active
2: Non-modal ForceControl active
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$VA_FXS</name>
<brief>Actual status of "Travel to fixed stop"</brief>
<description>
0: Axis not at fixed stop
1: Successful travel to fixed stop
2: Unsuccessful travel to fixed stop
3: Travel to fixed stop selection active
4: Fixed stop has been detected
5: Travel to fixed stop deselection active
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_IM2</name>
<brief>Actual value in the machine coordinate system (measured encoder 2)</brief>
<description>No description</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$VA_IPO_NC_CHANAX</name>
<description>If the machine axis is currently interpolated to this NCU, the channel and channel number which define the interpolator of the axis are output. If the machine axis is currently interpolated to a different NCU, the NCU identifier of the interpolated NCU and the global axis number of the machine axis are output. This global axis number can then be used to transfer the interpolated channel and the channel axis number to the other NCU, with NCU ID 2, with anIpoChanAx[203]. The axis must be assigned to at least one channel on this NCU, otherwise 0 will be returned. The channel is output as from position 100, and the channel axis number is output as from position 1, e.g. 1005 - channel 10 channel axis 5. These values are always lower than 10000. The NCU is output as from position 10000, e.g. 20203: NCU 2 and the global axis number is 203.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_LAG_ERROR</name>
<brief>Axis following error</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_LOAD</name>
<brief>Drive utilization in %</brief>
<description>No description</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$VA_MOT_CLAMPING_STATE</name>
<description>Starting from the position of the draw-bar (value of the S1), this variable determines the clamping state.
A maximum speed is assigned to each state. These are stored in the drive parameters p5043[0..6].
The following values are possible:
0: Sensor not present
1: Initial state, speed limit 0 rpm
2: Alarm, speed limit 0 rpm
3: Tool released / ejected, speed limit see drive parameter p5043[0]
4: Clamping (by spring force), speed limit see drive parameter p5043[1]
5: Releasing (by compressed air), speed limit see drive parameter p5043[2]
6: Releasing (by compressed air), speed limit see drive parameter p5043[3]
7: Clamped with tool, speed limit see drive parameter p5043[4]
8: Clamped with tool, speed limit see drive parameter p5043[4]
9: Further clamping (by spring force), speed limit see drive parameter p5043[5]
10: Clamped without tool, speed limit see drive parameter p5043[6]
11: Alarm, speed limit 0 rpm
</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$VA_MOT_SENSOR_ANA</name>
<brief>This variable determines the analog measured value of sensor S1.</brief>
<description>At a resolution of 1 mV, the analog value 0 - 10 V is mapped by a maximum of +10000 increments.</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$VA_MOT_SENSOR_CONF</name>
<brief>The configuration of the motor sensors can be queried with this variable.</brief>
<description>The variable is bit-coded, and has the following meanings:
Bit0 = 1: Sensor system present.
Bit1 = 1: Sensor S1 present. Analog measured value for position of the draw-bar.
Bit2 = 0:
Bit3 = 0:
Bit4 = 1: Sensor S4 present. Digital value for the piston end position
Bit5 = 1: Sensor S5 present. Digital value for the angular position of the shaft.
</description>
</parameter>

<parameter type="DWORD" dim="1">
<name>$VA_MOT_SENSOR_DIGI</name>
<brief>This variable determines the states of the digital sensors S4 and S5.</brief>
<description>The variable is bit-coded, and has the following meanings:
Bit0 = 0:
Bit1 = 0:
Bit2 = 0:
Bit3 = 0:
Bit4 = 1: Sensor S4 piston end position
Bit5 = 1: Sensor S5 angular position of the shaft
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$VA_POSCTRL_MODE</name>
<brief>Position controller mode</brief>
<description>
0: Position control
1: Speed control
2: Holding
3: Parking
4: Tracking
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_POWER</name>
<brief>Active drive power</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_PRESSURE_A</name>
<brief>Pressure on A end of the cylinder in bar (only for Hydraulic)</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_PRESSURE_B</name>
<brief>Pressure on B end of the cylinder in bar (only for Hydraulic)</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$VA_SCE</name>
<brief>Status of speed controller enable</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_STOPSI</name>
<brief>Stop from Safety Integrated</brief>
<description>
-1: No stop
0: Stop A
1: Stop B
2: Stop C
3: Stop D
4: Stop E
5: Stop F
10: Test stop of NC
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_SYNCDIFF_STAT</name>
<brief>Status of the actual value synchronism difference</brief>
<description>
-4: Reserved
-3: No valid value in $VA_SYNCDIFF, tangential control
-2: No valid value in $VA_SYNCDIFF, master value coupling and simulated master value
-1: No valid value in $VA_SYNCDIFF
 0: No valid value in $VA_SYNCDIFF, coupling not active
 1: Valid value in $VA_SYNCDIFF
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_TORQUE</name>
<brief>Drive torque setpoint</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$VA_TORQUE_AT_LIMIT</name>
<brief>Status "effective torque equals specified torque limit"</brief>
<description>
0: Effective torque lower than torque limit
1: Effective torque has reached torque limit
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_VACTM</name>
<brief>Axis velocity actual value on the load side in the MCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_VALVELIFT</name>
<brief>Actual valve lift in mm (only for Hydraulic)</brief>
<description>No description</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VA_XFAULTSI</name>
<brief>Stop F through cross-checking error active</brief>
<description>
Bit 0 set: An actual value error has been discovered in the cross-check between NCK and drive
Bit 1 set: Some error has been discovered in the cross-check between NCK and drive and the waiting time until Stop B ($MA_SAFE_STOP_SWITCH_TIME_F) is running or has expired
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_DIAM_STAT</name>
<brief>Status of the diameter programming as a function of configuration and programming</brief>
<description>
Bit 0=0: Diameter programming inactive
Bit 0=1: Diameter programming active
Bit 1=0: Channel-specific diameter programming
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_IB</name>
<brief>Current BCS setpoint of an axis</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AA_IB_CORR</name>
<brief>Current BCS setpoint value of an axis including override components</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_IBC</name>
<brief>The axial variable $AA_IBC[ax] determines the setpoint of a Cartesian axis lying between BCS and MCS.</brief>
<description>Cartesian means that the axis is a linear axis, and it lies plane parallel to a coordinate axis in a clockwise coordinate system. If a geometry axis is still Cartesian at the output of the nth transformation, then this value is returned. The axis identifier used must represent a geometry axis in the BCS, otherwise the variable returns the value 0.</description>
</parameter>

<parameter type="DOUBLE" dim="3">
<name>$AA_ITR</name>
<brief>Current setpoint of an axis</brief>
<description>The axial variable $AA_ITR[AXIS, nth] determines the current setpoint of an axis at the output of the nth chained transformation.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_IW</name>
<brief>Center point of a cutting edge. Physical unit is defined in the variable extUnit (from this module)</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_IW_CORR</name>
<brief>Current WCS setpoint value of an axis including override components</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_MW</name>
<brief>Latched probe position retransformed in the WCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_MW1</name>
<brief>Access to measurement result of trigger event 1 in the WCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_MW2</name>
<brief>Access to measurement result of trigger event 2 in the WCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_MW3</name>
<brief>Access to measurement result of trigger event 3 in the WCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_MW4</name>
<brief>Access to measurement result of trigger event 4 in the WCS</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_PCS_REL</name>
<brief>The current relative setpoint of the corresponding axis in the workpiece coordinate system (WCS)</brief>
<description>The axial variable $AA_PCS_REL[ax] determines the current relative setpoint of the corresponding axis in the workpiece coordinate system (WCS). The setpoint corresponds to $AA_IW[ax], which is transformed by the current relative system frame $P_RELFRAME. The axial positions lie in the relative workpiece coordinate system.</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_SCC_STAT</name>
<brief>Status of the G96/G961/G962 assignment as a function of configuration and programming</brief>
<description>
Bit 0=0: Axis is not assigned to G96/G961/G962
Bit 0=1: Axis is assigned to G96/G961/G962
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_TOFF</name>
<brief>Value of the superimposed motions which have been retracted in the individual tool directions via $AA_TOFF[ ]</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_TOFF_LIMIT</name>
<description>Limiting value of the superimposed motion has been achieved in the tool direction via $AA_TOFF[ ]
 0 : Limiting value not achieved
 1 : Limiting value achieved in positive direction
11 : Limiting value achieved in negative direction
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_TOFF_PREP_DIFF</name>
<description>Difference between the current value of $AA_TOFF[] and the value as the current block was prepared.</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_TOFF_VAL</name>
<description>Integrated value of the superimposed motions which have been retracted in the individual tool directions via $AA_TOFF[ ]</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_VACTW</name>
<brief>Axis velocity in workpiece coordinate system</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_RETPOINT</name>
<brief>Return point on the contour for repositioning</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$MC_DISPLAY_AXIS</name>
<brief>Identifier indicating whether the axis is displayed by the HMI as a geometry or auxiliary axis.</brief>
<description>
0= Do not display at all
0xFFFF = Always display everything
bit 0 = Display in actual-value window
bit 1 = Display in reference point window
bit 2 = Display in Preset / Basic offset / Scratching
bit 3 = Display in handwheel selection
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AA_MOTEND</name>
<brief>Current motion end criterion for single-axis interpolation</brief>
<description>
1 = Motion end with exact stop FINE
2 = Motion end with exact stop COARSE
3 = Motion end with exact stop IPO Stop
4 = Block change in braking ramp of axis motion
5 = Block change in braking ramp of axis motion with tolerance window with reference to setpoint
6 = Block change in braking ramp of axis motion with tolerance window with reference to actual value
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_IB</name>
<brief>The encoder position of an axis retransformed into BCS</brief>
<description>The variable $VA_IB[AXIS] determines the encoder position of an axis retransformed into BCS. The BCS value contains all the axial override components (DRF, AA_OFF, external work offset, etc.) and compensation values (CEC, etc.). The positions are only computed NC variable and interface signals once per IPO cycle for performance reasons. When a variable is read within one IPO cycle, the value of the variable does not change, although the actual value could have changed.If transformations are active, it must be taken into account that transforming the actual values into the BCS in the IPO cycle can be very time-consuming. In this case, an adequate IPO cycle must be set.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_IBC</name>
<brief>The encoder position of a Cartesian axis lying between BCS and MCS</brief>
<description>The variable $VA_IBC[ geo axis ] determines the encoder position of a Cartesian axis lying between BCS and MCS. Cartesian means that the axis is a linear axis and lies plane parallel to a coordinate axis in a clockwise coordinate system. The axis identifier used can be a geometry, channel or machine axis identifier. This identifier must represent a geometry axis in the BCS, otherwise the variable returns the value 0.0. The positions are only computed once per IPO cycle for performance reasons. When a variable is read within one IPO cycle, the value of the variable does not change, although the actual value could have changed. If transformations are active, it must be taken into account that transforming the actual values into the BCS in the IPO cycle can be very time-consuming. In this case, an adequate IPO cycle must be set.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_ITR</name>
<brief>The current encoder position of an axis at the output of the nth chained transformation</brief>
<description>The axial variable $VA_ITR[AXIS, n] determines the current encoder position of an axis at the output of the nth chained transformation.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$VA_IW</name>
<brief>The encoder position of an axis retransformed into WCS</brief>
<description>The variable $VA_IW[AXIS] determines the encoder position of an axis retransformed into WCS. The WCS value contains all the axial
override components (DRF, AA_OFF, external work offset, etc.) and compensation values (CEC, etc.). The positions are only computed once per IPO cycle for performance reasons. When a variable is read within one IPO cycle, the value of the variable does not change, although the actual value could have changed. If transformations are active, it must be taken into account that transforming the actual values into the BCS in the IPO cycle can be very time-consuming. In this case, an adequate IPO cycle must be set.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_CONSTCUT_S</name>
<brief>Current constant cutting rate</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AC_SDIR</name>
<brief>Current direction of spindle rotation</brief>
<description>in the sense of M3/M4/M5 in the part program, synchronized actions, PLC FC18, PLC DBB30.
3: Clockwise spindle rotation
4: Counterclockwise spindle rotation
5: Spindle stop
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AC_SMODE</name>
<brief>Spindle mode</brief>
<description>
0: No spindle present in channel or spindle is active in another channel or is being used by PLC (FC18) or by synchronized actions.
1: Open-loop speed control mode
2: Positioning mode
3: Synchronous mode
4: Axis mode
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AC_SMAXACC_INFO</name>
<brief>Identifier for the active spindle acceleration data</brief>
<description>The system variable provides additional information about $AC_SMAXACC and returns the definitive machine data as identifier/index. The index can be used to determine the active acceleration data on the basis of the following table of existing spindle accelerations. The number range is oriented to the system variable $AC_SMAXVELO_INFO:
0 No acceleration limitation (SERUPRO)
1 Not used
2 Acceleration in speed control mode without position control in the current gear stage MD 35200 GEAR_STEP_SPEEDCTRL_ACCEL
3 Not used
4 Acceleration in the current gear stage based on position control MD 35210 GEAR_STEP_POSCTRL_ACCEL (SPCON, SPOS, poss. with COUPON,..)
5 Not used
6 Not used
7 Not used
8 Not used
9 Acceleration limited by preparation calculations
10 Not used
11 Not used
12 Acceleration limited by axis mode. In the case of a synchronous spindle, the axis mode is enforced by the leading spindle.
13 Acceleration of the superimposed motion of the following spindle limited to the residual dynamics remaining following the coupling
14 Acceleration of the leading spindle due to missing following spindle dynamics or a high transformation ratio
15 Acceleration of the master spindle MD 35212 GEAR_STEP_POSCTRL_ACCEL2 in the case of tapping with G331, G332
   (only when the second data set is configured accordingly)
16 Acceleration limited by the configuration of ACC or ACCFXS (synchronized action)
17 Acceleration limited by tool parameter $TC_TP_MAX_ACCEL
18 Not used
19 Acceleration limited in JOG mode by MD 32301 MA_JOG_MAX_ACCEL
20 Acceleration limited due to NCU link
21 Not used
22 Acceleration limited by programming ACCLIMA
23 Not used
In oscillation mode (gear stage change), the variable returns the value for spindle mode (speed control mode).
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AC_SMAXVELO_INFO</name>
<brief>Identifier (index) for the speed-limiting data</brief>
<description>The system variable provides additional information about $AC_SMAXVELO and returns the definitive data (machine, setting data, G code, VDI interface etc.) as identifier/index. The index can be used to determine the speed-limiting data on the basis of the following table of existing spindle speed limitations.
0 No limitation (SERUPRO)
1 Maximum speed (chuck speed) of spindle MD 35100 SPIND_VELO_LIMIT
2 Speed limited to maximum speed in the current gear stage MD 35130 GEAR_STEP_MAX_VELO_LIMIT
3 Speed limited due to position control to 90% of the minimum from MD 35100 and MD 35130 (SPCON, SPOS, poss. with COUPON,..)
4 Speed limited due to position control to MD 35132 GEAR_STEP_PC_MAX_VELO_LIMIT
5 Speed limited to SD 43220 SPIND_MAX_VELO_G26 (G26 S.. or specification from HMI)
6 Speed limited to MD 35160 SPIND_EXTERN_VELO_LIMIT based on the set VDI interface signal DB31,...DBX3.6
7 Speed limited to SD 43230 SPIND_MAX_VELO_LIMS at constant cutting speed (G96, G961, G962, G97, LIMS)
8 Speed limited to safe speed (SG) by Safety Integrated
9 Speed limited by preparation calculations
10 Limitation by drive parameter SINAMICS p1082 to maximum speed of the drive
11 Speed limitation to MD 36300 ENC_FREQ_LIMIT with functions that require a functioning measuring system,
   e.g. position control and G95, G96, G97, G973, G33, G34, G35 for the master spindle.
   The limitation takes into account the encoder speed, the MS arrangement (direct/indirect),
   MS limiting frequency and the current parameter set
12 Speed limited by axis mode. In the case of a synchronous spindle, axis mode is enforced by the leading spindle.
13 Speed of the superimposed motion of the following spindle limited to the residual dynamics remaining following the coupling.
   A larger proportion of the superimposed motion can be achieved by reducing the speed of the leading spindle,
   e.g. by programming G26 S, VELOLIM for the leading spindle or VELOLIMA for the following spindle.
   The coupling factor must be taken into account.
14 Speed of the leading spindle limited due to missing following spindle dynamics or a high transformation ratio
15 Speed of the master spindle limited to MD 35550 DRILL_VELO_LIMIT in the case of tapping with G331, G332
16 Speed limitation due to the programming of VELOLIM
17 Speed limitation by tool parameter $TC_TP_MAX_VELO
18 Not used
19 Not used
20 Speed limited due to NCU link
21 Speed limited by SD43235 SD_SPIND_USER_VELO_LIMIT, user-controlled speed limitation, e.g. tensioning device, chuck speed
22 Speed limited by the programming of VELOLIMA
23 Speed limited by the clamping state of the tool. In the case of a Weiss spindle,
   the clamping state can be read from $VA_MOT_CLAMPING_STATE[axn].
In oscillation mode (gear stage change), the variable returns the value for spindle mode (speed control mode).
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_SMINVELO</name>
<brief>Minimum spindle speed</brief>
<description>This variable returns the minimum spindle speed for speed control mode.This is formed from the highest active speed increase, and cannot be undershot by speed programming or override &lt; 100%. A speed increase is indicated by the VDI interface signal DB31..,DBX83.2 'Setpoint speed increased' and by $AC_SPIND_STATE, bit 11 (setpoint speed increased). The cause of the speed increase (machine, setting data, G code, VDI interface signal etc.) can also be determined with the system variable $AC_SMINVELO_INFO. If the spindle is in axis or positioning mode, then the speed is not increased by $AC_SMINVELO.</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AC_SMINVELO_INFO</name>
<brief>Identifier (index) for the speed-limiting data</brief>
<description>The system variable provides additional information about $AC_SMAXVELO, and returns the definitive data (machine, setting data, G code, VDI interface, etc.) as identifier/index. The speed-limiting data can be determined with the index from the following table of existing spindle speed limitations. The system variable provides additional information about $AC_SMINVELO, and returns the speed increasing data (machine, setting data) as identifier/index. The speed-increasing data can be determined with the index from the following table of existing spindle speed increases.
0 Not used
1 Not used
2 Lower speed limit (minimum speed) of the current gear stage MD 35140 GEAR_STEP_MIN_VELO_LIMIT
3 Not used
4 Not used
5 Lower speed limit (minimum speed) from SD 43210 SPIND_MIN_VELO_G25 (G25 S.. or specification from HMI)
In oscillation mode (gear stage change) and axis mode, the variable returns the values from spindle mode.
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AC_SPIND_STATE</name>
<brief>This variable returns the selected states of the spindle.</brief>
<description>For positioning and axis modes, the variable $AA_INPOS_STATE[Sn] can also be read.
Bit 0: "Constant cutting speed active" (VDI interface signal DB31..,DBX84.0)
Bit 1: "SUG active" (VDI interface signal DB31..,DBX84.1)
Bit 2: "CLGON active" (VDI interface signal DB31..,DBX84.2)
Bit 3: "Tapping without compensating chuck" (VDI interface signal DB31..,DBX84.3)
Bit 4: "Synchronous mode" (following spindle with synchronous spindle coupling) (VDI interface signal DB31..,DBX84.4)
Bit 5: "Positioning mode" (VDI interface signal DB31..,DBX84.5)
Bit 6: "Oscillating mode" (gear stage change) (VDI interface signal DB31..,DBX84.6)
Bit 7: "Speed control mode" (VDI interface signal DB31..,DBX84.7)
Bit 8: "Spindle programmed" (e.g. M3, M4 S.., FC18, ..) (VDI interface signal DB31..,DBX64.4/5 or 6/7)
Bit 9: "Speed limit exceeded" (VDI interface signal DB31..,DBX83.0)
Bit 10: "Setpoint speed limited" (VDI interface signal DB31..,DBX83.1), active if the speed would be greater than the maximum speed as a result of programming or override ($AC_SMAXVELO)
Bit 11: "Setpoint speed increased" (VDI interface signal DB31..,DBX83.2) active if the speed would be less than the minimum speed as a result of programming or override (system variable $AC_SMINVELO)
Bit 12: "Spindle in setpoint range" (VDI interface signal DB31..,DBX83.5)
Bit 13: "Actual direction of rotation right" (VDI interface signal DB31..,DBX83.7)
Bit 14: "Spindle accelerating" remains active as long as the spindle is accelerating to the defined setpoint speed on the setpoint side.
Bit 15: "Spindle braking" remains active as long as the spindle is braking to the defined setpoint speed or comes to a standstill on the setpoint side.
Bit 16: "Spindle stopped" (VDI interface signal DB31..,DBX61.4)
Bit 17: "Tool with dynamic limitation active" (VDI interface signal DB31..,DBX85.0)
Bit 18: Reserved
Bit 19: "Spindle in position" (VDI interface signal DB31..,DBX85.5)
Bit 20: "Position control active" (VDI interface signal DB31..,DBX61.5)
Bit 21: "Referenced/synchronized 1" (VDI interface signal DB31..,DBX60.4)
Bit 22: "Referenced/synchronized 2" (VDI interface signal DB31..,DBX60.5)
Bit 23: Direction of spindle rotation inverted by interface signal "Invert M3/M4" (DB31..,DBX17.6)
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_SMODE</name>
<brief>Last programmed spindle mode</brief>
<description>
0: No spindle configured in channel or spindle is active in another channel or in use by the PLC (FC18) or by synchronized actions.
1: Speed control mode
2: Positioning mode
3: Synchronous mode
4: Axis mode
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$VC_SGEAR</name>
<brief>Currently active spindle gear stage</brief>
<description>Variable $VC_SGEAR[spino] determines the currently active spindle gear stage. $AC_SGEAR[spino] determines the defined gear stage in the main run. During search the actual gear stage may differ from the defined gear stage, because during search the gear stages are not changed. Using $VC_SGEAR[spino] and $AC_SGEAR[spino] it can be checked whether a gear stage change is to be performed after a search.
The following values are possible:
1: 1st gear stage active
....
5: 5th gear stage active
1: 1st gear stage active
....
5: 5th gear stage active
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$P_UIFR</name>
<brief>settable work offset (user frame)</brief>
<description>x=FrameNo, y=Axis, z=type
Valid values of Z are:
TR: Translation of settable work offset (the physical unit is defined in basicLengthUnit in module Y in area N).
FI: Fine offset with frames, expansion of basic frames and settable frames
MI: Mirroring enabled in a settable work offset
    0: Mirroring not active
    1: Mirroring active
SC: Scaling factor of a settable work offset
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_ETRANS</name>
<brief>Translation of external work offset (the physical unit is defined in basicLengthUnit in module Y in area N).</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$P_TOOLND</name>
<brief>Number of cutting edges of a tool</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_TOOLMN</name>
<brief>Current magazine in which the tool is located</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_TOOLMTN</name>
<brief>Still to be defined</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_TOOLMTLN</name>
<brief>Still to be defined</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_TOOLMLN</name>
<brief>Current location in which the tool is located</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$A_MYMN</name>
<brief>Owner magazine of the tool magazine from which the tool was loaded</brief>
<description>0 = the tool is not loaded. If toollnMag is &gt;0 at the same time, the T number will specify a manual tool, or TMMG is not active.</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_MYMTN</name>
<brief>Still to be defined</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$A_MYMTLN</name>
<brief>Still to be defined</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO1</name>
<brief>FIFO variable for synchronous actions</brief>
<description>x = function
1=2: access to the first element read in
3: access to the last element read in
4: sum of all FIFO elements
5: number of elements available in FIFO
6: current write index in relation to start of FIFO
7 etc: FIFO contents
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO2</name>
<brief>FIFO variable for synchronous actions</brief>
<description>x = function
1=2: access to the first element read in
3: access to the last element read in
4: sum of all FIFO elements
5: number of elements available in FIFO
6: current write index in relation to start of FIFO
7 etc: FIFO contents
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO3</name>
<brief>FIFO variable for synchronous actions</brief>
<description>x = function
1=2: access to the first element read in
3: access to the last element read in
4: sum of all FIFO elements
5: number of elements available in FIFO
6: current write index in relation to start of FIFO
7 etc: FIFO contents
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO4</name>
<brief>FIFO variable for synchronous actions</brief>
<description>x = function
1=2: access to the first element read in
3: access to the last element read in
4: sum of all FIFO elements
5: number of elements available in FIFO
6: current write index in relation to start of FIFO
7 etc: FIFO contents
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO5</name>
<brief>FIFO variable for synchronous actions</brief>
<description>x = function
1=2: access to the first element read in
3: access to the last element read in
4: sum of all FIFO elements
5: number of elements available in FIFO
6: current write index in relation to start of FIFO
7 etc: FIFO contents
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO6</name>
<brief>FIFO variable for synchronous actions</brief>
<description>x = function
1=2: access to the first element read in
3: access to the last element read in
4: sum of all FIFO elements
5: number of elements available in FIFO
6: current write index in relation to start of FIFO
7 etc: FIFO contents
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO7</name>
<brief>FIFO variable for synchronous actions</brief>
<description>x = function
1=2: access to the first element read in
3: access to the last element read in
4: sum of all FIFO elements
5: number of elements available in FIFO
6: current write index in relation to start of FIFO
7 etc: FIFO contents
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO8</name>
<brief>FIFO variable for synchronous actions</brief>
<description>x = function
1=2: access to the first element read in
3: access to the last element read in
4: sum of all FIFO elements
5: number of elements available in FIFO
6: current write index in relation to start of FIFO
7 etc: FIFO contents
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO9</name>
<brief>FIFO variable for synchronous actions</brief>
<description>x = function
1=2: access to the first element read in
3: access to the last element read in
4: sum of all FIFO elements
5: number of elements available in FIFO
6: current write index in relation to start of FIFO
7 etc: FIFO contents
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$AC_FIFO10</name>
<brief>FIFO variable for synchronous actions</brief>
<description>x = function
1=2: access to the first element read in
3: access to the last element read in
4: sum of all FIFO elements
5: number of elements available in FIFO
6: current write index in relation to start of FIFO
7 etc: FIFO contents
</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AC_MARKER</name>
<brief>Flag variable, counter for synchronous actions</brief>
<description>(Note: only with SYNACT)</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AC_PARAM</name>
<brief>Dynamic parameters for motion-synchronous actions</brief>
<description>(Note: only with SYNACT)</description>
</parameter>

<parameter type="INT" dim="2">
<name>$AN_PERSDIAG</name>
<description>Value=1: At the time of power-fail/power off, overflow of the power-fail buffer for changes of persistent data in synchronous actions was pending. The last data change before power-fail/power off has been lost.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$AC_IPO_BUF</name>
<brief>Level of IPO buffer (number of blocks)</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_CPACTFA</name>
<description>The axis index of the following axis of the nth coupling, in which the specified axis LAx is active as leading axis
-1 = the following axis found is unknown in the channel
 or n == 0
 or n &gt; $AA_CPACTFA (= number of active couplings of the axis as leading axis)
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_CPACTLA</name>
<description>The axis index of the nth leading axis which is active for the specified following axis
-1 = the specified coupling is not active
 or n == 0
 or n &gt; $AA_CPACTLA (= number of active leading axes of the following axis)
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_CPDEFLA</name>
<description>The axis index of the nth leading axis which has been defined for the specified following axis
-1 = the specified coupling is not defined
 or n == 0
 or n &gt; $AA_CPDEFLA (= number of defined leading axes of the following axis)
</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_CPMALARM</name>
<brief>Behavior of coupling module regarding suppression of alarms</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_CPMSTARTPRT</name>
<description>Coupling mode through SERUPRO start
NONE
ON
OFF
DEL
</description>
</parameter>

<parameter type="STRING" dim="2">
<name>$AA_CPMVDI</name>
<brief>Behavior of the coupling module regarding VDI signals</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_CPNACTFA</name>
<brief>Number of couplings (following axes), in which the specified axis LAx is active as leading axis</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_CPNACTLA</name>
<brief>The number of leading axes which are active for the specified following axis</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_CPNDEFLA</name>
<brief>The number of leading axes which have been defined for the specified following axis</brief>
<description>No description</description>
</parameter>

<parameter type="STRING" dim="2">
<name>$AA_CPSETTYPE</name>
<description>Coupling set coupling type
NONE
TRAIL
LEAD
EG
COUP
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPSYNCOP</name>
<brief>Coarse positioning tolerance for coupling synchronization</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPSYNCOP2</name>
<brief>Second synchronism monitoring of the following axis / spindle: threshold value coarse</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPSYNCOV</name>
<brief>Coarse velocity tolerance for coupling synchronization</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPSYNFIP</name>
<brief>Fine positioning tolerance for coupling synchronization</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPSYNFIP2</name>
<brief>Second synchronism monitoring of the following axis / spindle: threshold value fine</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPSYNFIV</name>
<brief>Fine velocity tolerance for coupling synchronization</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPFACCT</name>
<brief>Proportion of axis acceleration due to the coupled axes.</brief>
<description>The sum of the dependent proportion of the acceleration of all leading axes for the stated following axis, FAx.</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_CPFACT</name>
<description>Bit-coded for identifying all types of coupling which are active for the stated following axis, FAx
0 = NONE - No active coupling to the following axis
Bit 0 (0x0001) - TRAIL - Uses a coupling factor
Bit 1 (0x0002) - LEAD - Uses a curve table
Bit 2 (0x0004) - ELG - An electronic gearbox link
Bit 3 (0x0008) - Reserved
Bit 4 (0x0010) - COUP - Spindle/partial spindle coupling
Bit 5 (0x0020) - GANTRY - Coupling of the split axes (axes mechanically bound)
Bit 6 (0x0040) - TANG - Tangential coupling using a curve table
Bit 7 (0x0080) - GEN_CP - Generic coupling
</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPFCMDPT</name>
<brief>Proportion of the axis position command due to the coupled axes.</brief>
<description>The sum of the dependent proportion of the position command for all leading axes for the stated following axis, FAx.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPFCMDVT</name>
<brief>Proportion of the axis position command due to the coupled axes.</brief>
<description>The sum of the dependent proportion of the velocity command for all leading axes for the specified following axis.</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPFREQV</name>
<brief>Returns the speed requested by the active following axes/spindles.</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLACC</name>
<brief>Acceleration proportion of the following axis caused by an active coupling to the specified leading axis</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_CPLCTID</name>
<brief>ID number of the curve table which is used with the coupling of the stated axes.</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLCMDP</name>
<brief>The proportion of the axis position command assigned to the stated coupling.</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLCMDV</name>
<brief>The proportion of the axis acceration command assigned to the stated coupling.</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLDEN</name>
<brief>Denominator of coupling factor</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLINSC</name>
<brief>Input scaling factor of coupling factor</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLINTR</name>
<brief>Input transmission correction of coupling factor</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLNUM</name>
<brief>Counter of coupling factor</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLOUTSC</name>
<brief>Output scaling factor of coupling factor</brief>
<description>No description</description>
</parameter>

<parameter type="DOUBLE" dim="2">
<name>$AA_CPLOUTTR</name>
<brief>Output transmission correction of coupling factor</brief>
<description>No description</description>
</parameter>

<parameter type="WORD" dim="2">
<name>$AA_CPLTYPE</name>
<description>Indicates the process that is used with the coupling of the stated following axis with the stated leading axis.
0 = NONE - No defined coupling with these axes
Bit 0 (0x0001) - TRAIL - Uses a coupling factor
Bit 1 (0x0002) - LEAD - Uses a curve table
Bit 2 (0x0004) - ELG - An electronic gearbox link
Bit 3 (0x0008) - Reserved
Bit 4 (0x0010) - COUP - Spindle/partial spindle coupling
Bit 5 (0x0020) - GANTRY - Coupling of the split axes (axes mechanically bound)
Bit 6 (0x0040) - TANG - Tangential coupling with the aid of a curve table
Bit 7 (0x0080) - GEN_CP - Generic coupling
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_WORKAREA_CS_COORD_SYSTEM</name>
<description>Coordinate system for working area limitation
Identifier for the coordinate system in which the working area limitation is to apply.
The following are valid:
0: Working area limitation in the WCS
3: Working area limitation in the SZS
Special feature of line addressing: Any channel axis index can be selected as the channel axis index.
Within a working area limitation group, the values are identical.
</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_WORKAREA_CS_LIMIT_MINUS</name>
<description>Position of the coordinate system-specific working area limitation in the negative direction for the addressed axis and working area group.</description>
</parameter>

<parameter type="DOUBLE" dim="1">
<name>$P_WORKAREA_CS_LIMIT_PLUS</name>
<description>Position of the coordinate system-specific working area limitation in the positive direction for the addressed axis and working area group.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_WORKAREA_CS_MINUS_ENABLE</name>
<brief>Coord.-specific working area limitation, negative valid</brief>
<description>TRUE: The limitation of waCSLimitMinus is valid.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_WORKAREA_CS_PLUS_ENABLE</name>
<brief>Coord.-specific working area limitation, positive valid</brief>
<description>TRUE: The limitation of waCSLimitPlus is valid.</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_MTOOLMT</name>
<brief>Number of the multi-tool.</brief>
<description>Array access to the column multitoolNo is possible in order to read all assigned MT numbers.
0 = No multi-tool, or TMMG is not active
</description>
</parameter>

<parameter type="WORD" dim="1">
<name>$P_MTOOLN</name>
<brief>Number of defined multi-tools</brief>
<description>0 = No multi-tools have been defined, or TMMG is not active</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$P_DRYRUN</name>
<brief>Dry run is active</brief>
<description>Program is run with higher traverse speeds to check machine movements without real machining.</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$P_ISTEST</name>
<brief>Program test run is active</brief>
<description>All machine movements and functions are simulated only.</description>
</parameter>

<parameter type="BOOL" dim="1">
<name>$P_SEARCH</name>
<brief>Block search is active</brief>
<description>No description</description>
</parameter>

</info>
