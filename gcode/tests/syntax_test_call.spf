; SYNTAX TEST "s840d_gcode.sublime-syntax"

; ==================================================
;  CALL tests
;  Performance: 0.9ms
; ==================================================

CALL
;   <- meta.function-call
;   <- keyword.control.call

N10 CALL
;   ^^^^ meta.function-call
;   ^^^^ keyword.control.call

; function name provided as string variable
N15 CALL _PNAME error CALL "CYCLE2" ; comment
;   ^^^^^^^^^^^ meta.function-call
;                     ^^^^^^^^^^^^^ meta.function-call
;   ^^^^ keyword.control.call
;        ^^^^^^ variable.function
;               ^^^^^ invalid.illegal
;                     ^^^^ keyword.control.call
;                          ^^^^^^^^ string.quoted.double
;                                   ^^^ comment.line

; function name provided as string variable with arguments
N15 CALL _PNAME(10,20) ; comment
;   ^^^^^^^^^^^ meta.function-call
;   ^^^^ keyword.control.call
;        ^^^^^^ variable.function
;               ^^^^^^ invalid.illegal
;                      ^^^ comment.line

; function name provided as string
N20 CALL "/_N_CUS_DIR/_N_L320_SPF"
;   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call
;   ^^^^ keyword.control.call
;        ^ punctuation.definition.string.begin
;         ^ string.quoted.double
;                                ^ punctuation.definition.string.end

; indirect dynamic function call
N25 CALL "/_N_CUS_DIR/L" << ABS(TEST) << "_SPF"
;   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call
;   ^^^^ keyword.control.call
;        ^ punctuation.definition.string.begin
;         ^^^^^^^^^^^^^ string.quoted.double
;                      ^ punctuation.definition.string.end
;                        ^^ keyword.operator.assignment
;                           ^^^ support.function
;                              ^ punctuation.section.arguments.begin
;                               ^^^^ variable.other
;                                   ^ punctuation.section.arguments.end
;                                     ^^ keyword.operator.assignment
;                                        ^ punctuation.definition.string.begin
;                                         ^^^^ string.quoted.double
;                                             ^ punctuation.definition.string.end

N30 CALL "/_N_CUS_DIR/_N_L320_SPF" BLOCK "N100" TO "N200"
;   ^^^^ meta.function-call - meta.function-call.name
;       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.name - meta.function-call.block
;                                  ^^^^^^^^^^^^^ meta.function-call.block.begin - meta.function-call.block.end - meta.function-call.name
;                                               ^^^^^^^^^ meta.function-call.block.end - meta.function-call.block.begin
;   ^^^^ keyword.control.call
;        ^ punctuation.definition.string.begin
;        ^^^^^^^^^^^^^^^^^^^^^^^^^ string.quoted.double
;                                ^ punctuation.definition.string.end
;                                  ^^^^^ keyword.control.block
;                                        ^ punctuation.definition.string.begin
;                                        ^^^^^^ string.quoted.double
;                                             ^ punctuation.definition.string.end
;                                               ^^ keyword.control.to
;                                                  ^ punctuation.definition.string.begin
;                                                  ^^^^^^ string.quoted.double
;                                                       ^ punctuation.definition.string.end

N35 CALL "/_N_CUS_DIR/_N_L320_SPF" BLOCK _STARTBLK TO _ENDBLK
;   ^^^^ meta.function-call - meta.function-call.name
;       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.name - meta.function-call.block
;                                  ^^^^^^^^^^^^^^^^ meta.function-call.block.begin - meta.function-call.block.end - meta.function-call.name
;                                                  ^^^^^^^^^^ meta.function-call.block.end - meta.function-call.block.begin
;   ^^^^ keyword.control.call
;        ^ punctuation.definition.string.begin
;         ^ string.quoted.double
;                                ^ punctuation.definition.string.end
;                                  ^^^^^ keyword.control.block
;                                        ^ variable.other
;                                                  ^^ keyword.control.to
;                                                     ^ variable.other

; call statically defined blocks within the current cycle
N40 CALL BLOCK "N100" TO "N200"
;   ^^^^ meta.function-call - meta.function-call.name
;       ^ meta.function-call.name - meta.function-call.block
;        ^^^^^^^^^^^^^ meta.function-call.block.begin - meta.function-call.block.end - meta.function-call.name
;                     ^^^^^^^^^ meta.function-call.block.end - meta.function-call.block.begin
;   ^^^^ keyword.control.call
;        ^^^^^ keyword.control.block
;               ^ string.quoted.double
;                     ^^ keyword.control.to
;                         ^ string.quoted.double

; call dynamically defined blocks within the current cycle
N45 CALL BLOCK _STARTBLK TO _ENDBLK
;   ^^^^ meta.function-call - meta.function-call.name
;       ^ meta.function-call.name - meta.function-call.block
;        ^^^^^^^^^^^^^^^^ meta.function-call.block.begin - meta.function-call.block.end - meta.function-call.name
;                        ^^^^^^^^^^ meta.function-call.block.end - meta.function-call.block.begin
;   ^^^^ keyword.control.call
;        ^^^^^ keyword.control.block
;              ^ variable.other
;                        ^^ keyword.control.to
;                           ^ variable.other

; call statically defined blocks in a dynamically cefined cycle
N50 CALL _CYCLE BLOCK "N100" TO "N200"
;   ^^^^ meta.function-call - meta.function-call.name
;       ^^^^^^^^ meta.function-call.name - meta.function-call.block
;               ^^^^^^^^^^^^^ meta.function-call.block.begin - meta.function-call.block.end - meta.function-call.name
;                            ^^^^^^^^^ meta.function-call.block.end - meta.function-call.block.begin
;   ^^^^ keyword.control.call
;        ^ variable.function
;               ^^^^^ keyword.control.block
;                      ^ string.quoted.double
;                            ^^ keyword.control.to
;                                ^ string.quoted.double

; call dynamically defined blocks in a dynamically cefined cycle
N55 CALL _CYCLE BLOCK _STARTBLK TO _ENDBLK
;   ^^^^ meta.function-call - meta.function-call.name
;       ^^^^^^^^ meta.function-call.name - meta.function-call.block
;               ^^^^^^^^^^^^^^^^ meta.function-call.block.begin - meta.function-call.block.end - meta.function-call.name
;                               ^^^^^^^^^^ meta.function-call.block.end - meta.function-call.block.begin
;   ^^^^ keyword.control.call
;        ^ variable.function
;               ^^^^^ keyword.control.block
;                     ^ variable.other
;                               ^^ keyword.control.to
;                                  ^ variable.other

; call dynamically defined blocks in a dynamically cefined cycle
N60 CALL _CYCLE BLOCK _STARTBLK TO ("N"<<ENDNO)
;   ^^^^ meta.function-call - meta.function-call.name
;       ^^^^^^^^ meta.function-call.name - meta.function-call.block
;               ^^^^^^^^^^^^^^^^ meta.function-call.block.begin - meta.function-call.block.end - meta.function-call.name
;                               ^^^^^^^^^^^^^^^ meta.function-call.block.end - meta.function-call.block.begin
;   ^^^^ keyword.control.call
;        ^ variable.function
;               ^^^^^ keyword.control.block
;                     ^ variable.other
;                               ^^ keyword.control.to
;                                    ^ string.quoted.double
;                                      ^ keyword.operator.assignment
;                                        ^ variable.other

N65 CALL $P_INCOAP_S160[_S160NFWFC] BLOCK $P_INCOAP_S32[_S32SFC] TO $P_INCOAP_S32[_S32EFC]
;   ^^^^ meta.function-call - meta.function-call.name
;       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.name - meta.function-call.block
;                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.block.begin - meta.function-call.block.end - meta.function-call.name
;                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.block.end - meta.function-call.block.begin
;   ^^^^ keyword.control.call
;        ^ punctuation.definition.variable.nck
;         ^^^^^^^^^^^^^ support.variable.nck
;                      ^ punctuation.section.brackets.begin
;                       ^^^^^^^^^^ variable.other
;                                 ^ punctuation.section.brackets.end

; invalid cycle and block identifiers
N65 CALL L350 BLOCK N20 TO "N"<<50
;   ^^^^ meta.function-call - meta.function-call.name
;       ^^^^^^ meta.function-call.name - meta.function-call.block
;             ^^^^^^^^^^ meta.function-call.block.begin - meta.function-call.block.end - meta.function-call.name
;                       ^^^^^^^^^^ meta.function-call.block.end - meta.function-call.block.begin
;   ^^^^ keyword.control.call
;        ^^^^ variable.function
;             ^^^^^ keyword.control.block
;                   ^^^ variable.language.blockno
;                       ^^ keyword.control.to
;                           ^ string.quoted.double
;                             ^^ keyword.operator.assignment
;                               ^^ constant.numeric
