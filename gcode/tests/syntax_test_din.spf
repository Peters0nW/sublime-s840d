; SYNTAX TEST "s840d_gcode.sublime-syntax"

; ==================================================
;  GCODE tests
;  Performance: 1.5ms
; ==================================================
; G functions
N10 G0 ; comment
;   ^^ support.function.iso
N10 G=10 ; comment
;   ^ support.function.iso
;    ^ keyword.operator.assignment
;     ^^ constant.numeric
N10 G = 10 ; comment
;   ^ support.function.iso
;     ^ keyword.operator.assignment
;       ^^ constant.numeric
N10 G[0]=1 ; comment
;   ^ support.function.iso
;    ^ punctuation.section.brackets.begin
;     ^ constant.numeric
;      ^ punctuation.section.brackets.end
;       ^ keyword.operator.assignment
;        ^ constant.numeric
N10 G[0] = 1 ; comment
;   ^ support.function.iso
;    ^ punctuation.section.brackets.begin
;     ^ constant.numeric
;      ^ punctuation.section.brackets.end
;        ^ keyword.operator.assignment
;          ^ constant.numeric
N10 G0=10 ; comment
;   ^^ support.function.iso
;     ^^^ invalid.illegal
N10 G0 = 10 ; comment
;   ^^ support.function.iso
;      ^ invalid.illegal
;        ^^ constant.numeric
N10 G0[10] = 10 ; comment
;   ^^ support.function.iso
;     ^^^^ invalid.illegal
;          ^ invalid.illegal
;            ^^ constant.numeric
; ==================================================
; auxiliary functions
N10 M10 ; comment
;   ^^^ support.function.iso
N10 M10=10 ; comment
;   ^^^ support.function.iso
;      ^ keyword.operator.assignment
;       ^^ constant.numeric
N10 M10 = 10 ; comment
;   ^^^ support.function.iso
;       ^ keyword.operator.assignment
;         ^^ constant.numeric
N10 M[10]=10 ; comment
;   ^ support.function.iso
;    ^ punctuation.section.brackets.begin
;     ^^ constant.numeric
;       ^ punctuation.section.brackets.end
;        ^ keyword.operator.assignment
;         ^^ constant.numeric
N10 M[ 10 ] = 10 ; comment
;   ^ support.function.iso
;    ^ punctuation.section.brackets.begin
;      ^^ constant.numeric
;         ^ punctuation.section.brackets.end
;           ^ keyword.operator.assignment
;             ^^ constant.numeric
N10 M1[10]=10 ; comment
;   ^^ support.function.iso
;     ^^^^ invalid.illegal
;         ^ keyword.operator.assignment
;          ^^ constant.numeric
N10 M1[ 10 + $A_CMD[5] ] = 10 ; comment
;   ^^ support.function.iso
;     ^^^^^^^^^^^^^^^^^^ invalid.illegal
;                        ^ keyword.operator.assignment
;                          ^^ constant.numeric
; short form of M0=10
N10 M=10
;   ^ support.function.iso
;    ^ keyword.operator.assignment
;     ^^ constant.numeric
N10 M=QU(10)
;   ^ support.function.iso
;    ^ keyword.operator.assignment
;     ^^ support.function
;       ^ punctuation.section.arguments.begin
;        ^^ constant.numeric
;          ^ punctuation.section.arguments.end
N10 M = QU( 10 )
;   ^ support.function.iso
;     ^ keyword.operator.assignment
;       ^^ support.function
;         ^ punctuation.section.arguments.begin
;           ^^ constant.numeric
;              ^ punctuation.section.arguments.end
; ==================================================
; auxiliary functions
N10 H10 ; comment
;   ^^^ support.function.iso
N10 H10=10 ; comment
;   ^^^ support.function.iso
;      ^ keyword.operator.assignment
;       ^^ constant.numeric
N10 H10 = 10 ; comment
;   ^^^ support.function.iso
;       ^ keyword.operator.assignment
;         ^^ constant.numeric
N10 H[10]=10 ; comment
;   ^ support.function.iso
;    ^ punctuation.section.brackets.begin
;     ^^ constant.numeric
;       ^ punctuation.section.brackets.end
;        ^ keyword.operator.assignment
;         ^^ constant.numeric
N10 H[ 10 ] = 10 ; comment
;   ^ support.function.iso
;    ^ punctuation.section.brackets.begin
;      ^^ constant.numeric
;         ^ punctuation.section.brackets.end
;           ^ keyword.operator.assignment
;             ^^ constant.numeric
; short form of H0=10
N10 H=10
;   ^ support.function.iso
;    ^ keyword.operator.assignment
;     ^^ constant.numeric
N10 H=QU(10)
;   ^ support.function.iso
;    ^ keyword.operator.assignment
;     ^^ support.function
;       ^ punctuation.section.arguments.begin
;        ^^ constant.numeric
;          ^ punctuation.section.arguments.end
N10 H = QU( 10 )
;   ^ support.function.iso
;     ^ keyword.operator.assignment
;       ^^ support.function
;         ^ punctuation.section.arguments.begin
;           ^^ constant.numeric
;              ^ punctuation.section.arguments.end
; ==================================================
; Parameters
N10 F1000 ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 F.1000 ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 F+1000 ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 F-1000 ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 F+100. ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 F-100. ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 F+10.0 ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 F-10.0 ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 F=1000 ; comment
;   ^ support.variable.iso
;    ^ keyword.operator.assignment
;     ^^^^ constant.numeric
N10 F = 1000 ; comment
;   ^ support.variable.iso
;     ^ keyword.operator.assignment
;       ^^^^ constant.numeric
N10 F[2] = ABS(-1000) ; comment
;   ^ support.variable.iso
;    ^ punctuation.section.brackets.begin
;     ^ constant.numeric
;      ^ punctuation.section.brackets.end
;        ^ keyword.operator.assignment
;          ^^^ support.function
;             ^ punctuation.section.arguments.begin
;              ^^^^^ constant.numeric
;                   ^ punctuation.section.arguments.end
; ==================================================
; Positions
N10 X1000 ; comment
;   ^ support.variable.iso.pos
;    ^^^^ constant.numeric
N10 X.1000 ; comment
;   ^ support.variable.iso.pos
;    ^^^^ constant.numeric
N10 X+1000 ; comment
;   ^ support.variable.iso.pos
;    ^^^^ constant.numeric
N10 X-1000 ; comment
;   ^ support.variable.iso.pos
;    ^^^^ constant.numeric
N10 X+100. ; comment
;   ^ support.variable.iso.pos
;    ^^^^ constant.numeric
N10 X-100. ; comment
;   ^ support.variable.iso.pos
;    ^^^^ constant.numeric
N10 X+10.0 ; comment
;   ^ support.variable.iso.pos
;    ^^^^ constant.numeric
N10 X-10.0 ; comment
;   ^ support.variable.iso.pos
;    ^^^^ constant.numeric
N10 X=1000 ; comment
;   ^ support.variable.iso.pos
;    ^ keyword.operator.assignment
;     ^^^^ constant.numeric
N10 X = 1000 ; comment
;   ^ support.variable.iso.pos
;     ^ keyword.operator.assignment
;       ^^^^ constant.numeric
N10 X1=1000 ; comment
;   ^^ support.variable.iso.pos
;     ^ keyword.operator.assignment
;      ^^^^ constant.numeric
N10 X1 = 1000 ; comment
;   ^^ support.variable.iso.pos
;      ^ keyword.operator.assignment
;        ^^^^ constant.numeric
N10 X[1]=1000 ; comment
;   ^ support.variable.iso.pos
;    ^ punctuation.section.brackets.begin
;     ^ constant.numeric
;      ^ punctuation.section.brackets.end
;       ^ keyword.operator.assignment
;        ^^^^ constant.numeric
N10 X[ 1 ] = 1000 ; comment
;   ^ support.variable.iso.pos
;    ^ punctuation.section.brackets.begin
;      ^ constant.numeric
;        ^ punctuation.section.brackets.end
;          ^ keyword.operator.assignment
;            ^^^^ constant.numeric
; ==================================================
; spindle speeds
N10 S1000 ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 S.1000 ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 S+1000 ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 S-1000 ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 S+100. ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 S-100. ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 S+10.0 ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 S-10.0 ; comment
;   ^ support.variable.iso
;    ^^^^ constant.numeric
N10 S=1000 ; comment
;   ^ support.variable.iso
;    ^ keyword.operator.assignment
;     ^^^^ constant.numeric
N10 S = 1000 ; comment
;   ^ support.variable.iso
;     ^ keyword.operator.assignment
;       ^^^^ constant.numeric
N10 S1=1000 ; comment
;   ^^  support.variable.iso
;     ^ keyword.operator.assignment
;      ^^^^ constant.numeric
N10 S1 = 1000 ; comment
;   ^^ support.variable.iso
;      ^ keyword.operator.assignment
;        ^^^^ constant.numeric
N10 S[$A_DBB[1]] = 1000 ; comment
;   ^ support.variable.iso
;                ^ keyword.operator.assignment
;                  ^^^^ constant.numeric
; ==================================================
; SINUMERIK default axis identifier
N10 AX1=ABS(10) AX2=20 ; comment
;   ^^^ support.variable.iso.pos
;      ^ keyword.operator.assignment
;       ^^^ support.function
;           ^^ constant.numeric
;               ^^^ support.variable.iso.pos
;                  ^ keyword.operator.assignment
;                   ^^ constant.numeric
N10 AX1 = _POS AX2 = 10 ; comment
;   ^^^ support.variable.iso.pos
;       ^ keyword.operator.assignment
;         ^^^^ variable.other
;              ^^^ support.variable.iso.pos
;                  ^ keyword.operator.assignment
;                    ^^ constant.numeric
N10 AX[1]=10 AX[2]=10 ; comment
;   ^^ support.variable.iso.pos
;     ^ punctuation.section.brackets.begin
;      ^ constant.numeric
;       ^ punctuation.section.brackets.end
;        ^ keyword.operator.assignment
;         ^^ constant.numeric
;            ^^ support.variable.iso.pos
;              ^ punctuation.section.brackets.begin
;               ^ constant.numeric
;                ^ punctuation.section.brackets.end
;                 ^ keyword.operator.assignment
;                  ^^ constant.numeric
N10 AX[1] = 10 ; comment
;   ^^ support.variable.iso.pos
;     ^ punctuation.section.brackets.begin
;      ^ constant.numeric
;       ^ punctuation.section.brackets.end
;         ^ keyword.operator.assignment
;           ^^ constant.numeric
N10 AX1[1]=10 ; comment
;   ^^^ support.variable.iso.pos
;      ^^^ invalid.illegal.array
;         ^ keyword.operator.assignment
;          ^^ constant.numeric
N10 AX1[ 10 ] = 10 ; comment
;   ^^^ support.variable.iso.pos
;      ^^^^^ invalid.illegal.array
;             ^ keyword.operator.assignment
;               ^^ constant.numeric
N10 AX[1]=10 AX[2]=10 ; comment

; ==================================================
; circle with polar coordinates
N10 G3 X10 Y10 Z10 AP=10 RP = 10
;   ^^ support.function.iso
;      ^ support.variable.iso.pos
;       ^^ constant.numeric
;          ^ support.variable.iso.pos
;           ^^ constant.numeric
;              ^ support.variable.iso.pos
;               ^^ constant.numeric
;                  ^^ support.variable.iso.param
;                    ^ keyword.operator.assignment
;                     ^^ constant.numeric
;                        ^^ support.variable.iso.param
;                           ^ keyword.operator.assignment
;                             ^^ constant.numeric
; circle with midpoint
N10 G2 I10 J10 K10 CR=10 AR=15

G54 G0 X=R1 Y=R2 Z400 M8 AX[10] = 5

N10 PO[THT] = 10
;   ^^ support.variable.iso.param
;     ^ punctuation.section.brackets.begin
;      ^^^ constant.language.orientation
;         ^ punctuation.section.brackets.end

N10 FP=2
