%YAML 1.2
# The MIT License (MIT)
#
# Copyright (c) 2016 DeathAxe <deathaxe82@googlemail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
###############################################################################
---

# http://facelessuser.github.io/sublime-markdown-popups/textmate_scopes/
# https://manual.macromates.com/en/language_grammars#naming_conventions
name: S840D RunMyHmi
file_extensions:
  - arc
  - com
first_line_match: '(?i:%_N_[A-z_]{2}[[:alnum:]_]{0,26}_COM)'
scope: source.s840d_hmi

###############################################################################

variables:
  # label or variable
  #   - must start with two letters or underline
  #     before the first digit is allowed
  #   - must not be longer than 32 chars
  label: '\b[A-z_]{2}[[:alnum:]_]{0,30}\b'

  softkey: '\b(?i:[HV]S[1-8]|RECALL)\b'

###############################################################################
# MAIN CONTEXT
###############################################################################

contexts:

  main:
    - include: comment
    - include: array-definition
    - include: block-definition
    - include: dialog-definition
    - include: grid-definition
    - include: menu-definition

###############################################################################
# ARRAY
#   top-level entity
#
#   //A(NAME)
#     (col1 / col2 / ...)
#     (col1 / col2 / ...)
#      ...
#   //END
###############################################################################

  array-definition:
    - match: //[Aa]\b
      scope: keyword.control.section.begin.s840d_hmi
      push:
        - match: \(
          scope: punctuation.definition.parameter.begin.s840d_hmi
          set:
            - match: \)|$
              scope: punctuation.definition.parameter.end.s840d_hmi
              set: array-body
            - include: section-name
        - include: illegal-pop

  array-body:
    - meta_scope: meta.section.array.s840d_hmi
    - include: section-end
    - match: \(
      scope: punctuation.definition.array.row.begin.s840d_hmi
      push:
        - meta_scope: meta.section.array.row.s840d_hmi
        - match: \)|$
          scope: punctuation.definition.array.row.end.s840d_hmi
          pop: true
        - match: '/'
          scope: punctuation.definition.array.column.seperator.s840d_hmi
        - include: string
        - include: number
        - include: boolean
        - include: illegal
    - include: illegal

###############################################################################
# BLOCK
#   top-level entity
#
#   //B(SK_NAME)
#   ...
#   //END
###############################################################################

  block-definition:
    - match: //[Bb]\b
      scope: keyword.control.section.begin.s840d_hmi
      push:
        - match: \(
          scope: punctuation.definition.parameter.begin.s840d_hmi
          set:
            - match: \)|$
              scope: punctuation.definition.parameter.end.s840d_hmi
              set: block-body
            - include: section-name
        - include: illegal-pop

  block-body:
    - meta_scope: meta.section.subprogram.s840d_hmi
    - include: section-end
    - include: def-method-sub
    - include: illegal

###############################################################################
# GRID
#   top-level entity
#
#   A column definition is wideley equal to a normal variable definition and
#   requires the following entries.
#   (type/min,max//description,column title/attribute/picture/
#    variable/column width/Offset1, Offset2, Offset3)
#
#   //G(NAME)
#   (../../..)  ; column 1
#   (../../..)  ; column 2
#   ...
#   //END
###############################################################################

  grid-definition:
    - match: //[Gg]\b
      scope: keyword.control.section.begin.s840d_hmi
      push: grid-param-begin

  grid-param-begin:
    - match: \(
      scope: punctuation.definition.parameter.begin.s840d_hmi
      set: grid-param-name
    - include: grid-param-end

  grid-param-name:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: grid-param-type
    - include: section-name
    - include: grid-param-end

  grid-param-type:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: grid-param-fixed-row
    - include: number
    - include: grid-param-end

  grid-param-fixed-row:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: grid-param-fixed-col
    - include: number
    - include: grid-param-end

  grid-param-fixed-col:
    - include: number
    - include: grid-param-end

  grid-param-end:
    - match: \)|$
      scope: punctuation.definition.parameter.end.s840d_hmi
      set: grid-body
    - include: illegal

  grid-body:
    - meta_scope: meta.section.grid.s840d_hmi
    - include: section-end
    - match: \(
      scope: punctuation.grid.row.begin.s840d_hmi
      push: def-operand-type
    - include: illegal

###############################################################################
# DIALOG
#   top-level entity
#
#   //M(MSK_NAME/"Caption"/"\\pic.png"/0,0,640,480/"MB0"/20,20,80,80/AC4)
#   ...
#   //END
###############################################################################

  dialog-definition:
    - match: '//M'
      scope: keyword.control.section.begin.s840d_hmi
      push: dialog-param-begin

  dialog-param-begin:
    - match: \(
      scope: punctuation.definition.parameter.begin.s840d_hmi
      set: dialog-param-name
    - include: dialog-param-end

  dialog-param-name:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: dialog-param-caption
    - include: section-name
    - include: dialog-param-end

  dialog-param-caption:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: dialog-param-picture
    - include: string
    - include: dialog-param-end

  dialog-param-picture:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: dialog-param-dimension
    - include: string
    - include: dialog-param-end

  dialog-param-dimension:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: dialog-param-variable
    - include: section-param-seperator
    - include: number
    - include: dialog-param-end

  dialog-param-variable:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: dialog-param-picture-position
    - include: string
    - include: dialog-param-end

  dialog-param-picture-position:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: dialog-param-attribute
    - include: section-param-seperator
    - include: number
    - include: dialog-param-end

  dialog-param-attribute:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: dialog-param-end
    - include: attribute-accesslevel
    - include: attribute-allignment
    - include: attribute-changeblock
    - include: attribute-fontsize
    - include: attribute-writeability
    - include: dialog-param-end

  dialog-param-end:
    - match: \)|$
      scope: punctuation.definition.parameter.end.s840d_hmi
      set: dialog-body
    - include: illegal

  dialog-body:
    - meta_scope: meta.section.dialog.s840d_hmi
    - include: section-end
    - include: def-operand
    - include: def-softkey
    - include: def-methods
    - include: illegal

###############################################################################
# SOFTKEY BAR
#   top-level entity
#
#   //S(SK_NAME)
#   ...
#   //END
###############################################################################

  menu-definition:
    - match: '//[Ss]\b'
      scope: keyword.control.section.begin.s840d_hmi
      push:
        - match: \(
          scope: punctuation.definition.parameter.begin.s840d_hmi
          set:
            - match: \)|$
              scope: punctuation.definition.parameter.end.s840d_hmi
              set: menu-body
            - include: section-name
        - include: menu-body

  menu-body:
    - meta_scope: meta.section.menu.s840d_hmi
    - include: section-end
    - include: def-softkey
    - include: def-methods
    - include: illegal

###############################################################################
# SECTION prototypes
###############################################################################

  section-name:
    - match: '{{label}}'
      scope: entity.name.section.s840d_hmi

  section-param-seperator:
    - match: ','
      scope: punctuation.definition.parameter.seperator.s840d_hmi

  section-end:
    - match: //(?i:END)\b
      scope: keyword.control.section.end.s840d_hmi
      pop: true
    - include: comment

###############################################################################
# INPUT / OPERAND
#   second-level entity
#   exists only in dialog
#
#   DEF VAR=(TYP/MIN,MAX/DFLT/"","","",""/ATTR/VAR//CAPTIONPOS/INPUTPOS/COLOR)
###############################################################################

  def-operand:
    - match: \b(?i:DEF)\b
      scope: keyword.language.def.s840d_hmi
      push: def-operand-name

  def-operand-name:
    - meta_scope: meta.definition.operand.s840d_hmi
    - include: comment
    - match: '{{label}}'
      scope: variable.other.s840d_hmi
      set:
        - match: \(
          scope: punctuation.definition.operand.index.begin.s840d_hmi
          push:
            - match: \)
              scope: punctuation.definition.operand.index.end.s840d_hmi
              pop: true
            - include: number
        - match: '='
          scope: keyword.operator.assignment.s840d_hmi
          set: def-operand-param
        - match: $
          pop: true
        - include: comment

  def-operand-param:
    - match: \(
      scope: punctuation.definition.parameter.begin.s840d_hmi
      push: def-operand-type
    - match: ','
      scope: punctuation.definition.seperator.operand.s840d_hmi
      set: def-operand-name
    - match: $
      pop: true
    - include: comment
    - include: illegal

  def-operand-type:
    - match: \b(?i:[CBV]|I[BDH]?(?:[BWD]U?)?|R\d*|S\d*)\b
      scope: storage.type.s840d_hmi
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: def-operand-limits
    - include: def-operand-end

  # limits or toggle values
  def-operand-limits:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: def-operand-default
    - match: '%\w+'
      scope: entity.name.grid.s840d_hmi
    - include: section-param-seperator
    - include: string
    - include: number
    - include: operator
    - include: def-operand-end

  def-operand-default:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: def-operand-captions
    - include: string
    - include: number
    - include: def-operand-end

  # texts (description, caption/picture, shortcut, unit)
  def-operand-captions:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: def-operand-attributes
    - include: section-param-seperator
    - include: string
    - include: def-operand-end

  def-operand-attributes:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: def-operand-picture
    - include: section-param-seperator
    - include: attribute-accesslevel
    - include: attribute-allignment
    - include: attribute-changeblock
    - include: attribute-fontsize
    - include: attribute-limit
    - include: attribute-writeability
    - include: def-operand-end

  def-operand-picture:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: def-operand-address
    - include: string
    - include: def-operand-end

  def-operand-address:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: def-operand-captionpos
    - include: string
    - include: def-operand-end

  # caption position (Left, Top, Width, Height)
  def-operand-captionpos:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: def-operand-inputpos
    - include: section-param-seperator
    - include: number
    - include: def-operand-end

  # input control position (Left, Top, Width, Height)
  def-operand-inputpos:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: def-operand-colors
    - include: section-param-seperator
    - include: number
    - include: def-operand-end

  def-operand-colors:
    - match: /
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: def-operand-helpfile
    - include: section-param-seperator
    - include: number
    - include: def-operand-end

  def-operand-helpfile:
    - include: section-param-seperator
    - include: number
    - include: string
    - include: def-operand-end

  def-operand-end:
    - match: \)|$
      scope: punctuation.definition.parameter.end.s840d_hmi
      pop: true
    - include: illegal

###############################################################################
# SOFTKEY DEFINITION
#   second-level entity
#   exists in dialog and menu
#
#   HS1=("Caption",AC1,SE2)
###############################################################################

  def-softkey:
    - match: '({{softkey}})\s*(=(?!=))?'
      captures:
        1: entity.name.softkey.s840d_hmi
        2: keyword.operator.assignment.s840d_hmi
      push: def-softkey-param

  def-softkey-param:
    - meta_scope: meta.definition.softkey.s840d_hmi
    - match: $
      pop: true
    - match: \(
      scope: punctuation.definition.parameter.begin.s840d_hmi
      set: def-softkey-param-caption
    - include: comment
    - include: illegal

  def-softkey-param-caption:
    - match: ','
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: def-sofktey-param-accesslevel
    - match: \[
      scope: punctuation.softkey-caption-group.begin.s840d_hmi
      push:
        - meta_scope: meta.softkey-caption-group.s840d_hmi
        - match: \]
          scope: punctuation.softkey-caption-group.end.s840d_hmi
          pop: true
        - include: expressions
    - include: string
    - include: def-softkey-end

  def-sofktey-param-accesslevel:
    - match: ','
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: def-sofktey-param-state
    - include: attribute-accesslevel
    - include: def-softkey-end

  def-sofktey-param-state:
    - include: attribute-state
    - include: def-softkey-end

  def-softkey-end:
    - match: \)|$
      scope: punctuation.definition.parameter.end.s840d_hmi
      pop: true
    - include: illegal

###############################################################################
# section methods
#   second-level entities
###############################################################################

  def-methods:
    - include: def-method-change
    - include: def-method-focus
    - include: def-method-load
    - include: def-method-output
    - include: def-method-press
    - include: def-method-sub
    - include: def-method-unload

###############################################################################
# CHANGE block
#   second-level entity
#   exists in dialog and menu
#
#   CHANGE(operand)
#   ....
#   END_CHANGE
###############################################################################

  def-method-change:
    - match: \b(?i:CHANGE)\b
      scope: keyword.control.handler.change.s840d_hmi
      push:
        - match: \(
          scope: punctuation.definition.parameter.begin.s840d_hmi
          set:
            - match: \)|$
              scope: punctuation.definition.parameter.end.s840d_hmi
              set: def-method-change-body
            - include: operand
            - include: illegal
        - include: def-method-change-body

  def-method-change-body:
    - meta_scope: meta.method.s840d_hmi
    - match: \b(?i:END_CHANGE)\b
      scope: keyword.control.handler.end_change.s840d_hmi
      pop: true
    - include: statements

###############################################################################
# FOCUS block
#   second-level entity
#   exists in dialog and menu
#
#   FOCUS
#   ....
#   END_FOCUS
###############################################################################

  def-method-focus:
    - match: \b(?i:FOCUS)\b
      scope: keyword.control.handler.focus.s840d_hmi
      push: def-method-focus-body

  def-method-focus-body:
    - meta_scope: meta.method.s840d_hmi
    - match: \b(?i:END_FOCUS)\b
      scope: keyword.control.handler.end_focus.s840d_hmi
      pop: true
    - include: statements

###############################################################################
# LOAD block
#   second-level entity
#   exists in dialog and menu
#
#   LOAD
#   ....
#   END_LOAD
###############################################################################

  def-method-load:
    - match: \b(?i:LOAD)\b
      scope: keyword.control.handler.load.s840d_hmi
      push: def-method-load-body

  def-method-load-body:
    - meta_scope: meta.method.s840d_hmi
    - match: \b(?i:END_LOAD)\b
      scope: keyword.control.handler.end_load.s840d_hmi
      pop: true
    - include: statements

###############################################################################
# UNLOAD block
#   second-level entity
#   exists in dialog and menu
#
#   UNLOAD
#   ....
#   END_UNLOAD
###############################################################################

  def-method-unload:
    - match: \b(?i:UNLOAD)\b
      scope: keyword.control.handler.unload.s840d_hmi
      push: def-method-unload-body

  def-method-unload-body:
    - meta_scope: meta.method.s840d_hmi
    - match: \b(?i:END_UNLOAD)\b
      scope: keyword.control.handler.end_unload.s840d_hmi
      pop: true
    - include: statements

###############################################################################
# OUTPUT block
#   second-level entity
#   exists in dialog and menu
#
#   OUTPUT(operand)
#   ....
#   END_CHANGE
###############################################################################

  def-method-output:
    - match: \b(?i:OUTPUT)\b
      scope: keyword.control.handler.output.s840d_hmi
      push: def-method-output-param

  def-method-output-param:
    - match: \(
      scope: punctuation.definition.parameter.begin.s840d_hmi
      set: def-method-output-param-name
    - include: illegal-pop

  def-method-output-param-name:
    - match: ','
      scope: punctuation.definition.parameter.seperator.s840d_hmi
      set: def-method-output-param-version
    - include: operand
    - include: def-method-output-param-end

  def-method-output-param-version:
    - include: number
    - include: def-method-output-param-end

  def-method-output-param-end:
    - match: \)|$
      scope: punctuation.definition.parameter.end.s840d_hmi
      set: def-method-output-body
    - include: illegal

  def-method-output-body:
    - meta_scope: meta.method.s840d_hmi
    - match: \b(?i:END_OUTPUT)\b
      scope: keyword.control.handler.end_output.s840d_hmi
      pop: true
    # register not allowed in output
    - match: \b(?i:REG)\b
      scope: invalid.illegal.s840d_hmi
    - include: expressions

###############################################################################
# PRESS block
#   second-level entity
#   exists in dialog and menu
#
#   PRESS(HSx)
#   ....
#   END_PRESS
###############################################################################

  def-method-press:
    - match: \b(?i:PRESS)\b
      scope: keyword.control.handler.press.s840d_hmi
      push:
        - match: \(
          scope: punctuation.parameter.begin.s840d_hmi
          set:
            - match: \)|$
              scope: punctuation.parameter.end.s840d_hmi
              set: def-method-press-body
            - match: '{{softkey}}'
              scope: entity.name.softkey.s840d_hmi
            - match: '\b(?i:P[UD]|S[LRUD])\b'
              scope: entity.name.key.s840d_hmi
            - include: illegal
        - include: illegal-pop

  def-method-press-body:
    - meta_scope: meta.method.s840d_hmi
    - match: \b(?i:END_PRESS)\b
      scope: keyword.control.handler.end_press.s840d_hmi
      pop: true
    - include: statements

###############################################################################
# SUB block
#   second-level entity
#   exists in dialog and menu
#
#   SUB("function_name")
#   ....
#   END_SUB
###############################################################################

  def-method-sub:
    - match: \b(?i:SUB)\b
      scope: keyword.language.sub.s840d_hmi
      push:
        - match: \(
          scope: punctuation.parameter.begin.s840d_hmi
          set:
            - match: \)|$
              scope: punctuation.parameter.end.s840d_hmi
              set: def-method-sub-body
            - include: operand
            - include: illegal
        - include: def-method-sub-body

  def-method-sub-body:
    - meta_scope: meta.method.s840d_hmi
    - match: \b(?i:END_SUB)\b
      scope: keyword.language.end_sub.s840d_hmi
      pop: true
    - include: statements

###############################################################################
# STATEMENTS
#   third-level entities
#   exist within event-handler and sub-routine
###############################################################################

  statements:
    - include: comment
    - include: conditional
    - include: procedures
    - include: expressions

  comment:
    - match: ';.*$'
      scope: comment.line.s840d_hmi

  conditional:
    - match: \b(?i:IF|ELSE|ENDIF)\b
      scope: keyword.operator.conditional.s840d_hmi

  procedures:
    - match: \b(?i:EXIT(?:LS)?|RETURN)\b
      scope: support.function.s840d_hmi
      push: function-parameter

    - match: \b(?i:CALL|[CDEM]P|DLGL|GC|L[ABGMS]|LINE|RECT|M?[RW]NP|S[BFP])\b
      scope: support.function.s840d_hmi
      push: function-parameter

###############################################################################

  expressions:
    - include: string       # must be the first
    - include: boolean
    - include: number
    - include: attribute-allignment
    - include: attribute-changeblock
    - include: attribute-fontsize
    - include: attribute-limit
    - include: attribute-writeability
    - include: attribute-accesslevel
    - include: attribute-state
    - include: operator
    - include: function
    - include: group        # must follow after function
    - include: softkey
    - include: variable
    - include: operand
    - include: placeholder

  # is used for snippet parameters
  placeholder:
    - match: \{
      scope: punctuation.group.begin.s840d_hmi
      push:
        - meta_scope: invalid.illegal.s840d_hmi
        - match: \}
          scope: punctuation.group.end.s840d_hmi
          pop: true
    - match: \}
      scope: invalid.illegal.s840d_hmi

  attribute-accesslevel:
    - match: \b[Aa][Cc][0-7]\b
      scope: constant.language.attribute.s840d_hmi

  attribute-allignment:
    - match: \b[Aa][Ll][0-2]\b
      scope: constant.language.attribute.s840d_hmi

  attribute-changeblock:
    - match: \b[Cc][Bb][01]\b
      scope: constant.language.attribute.s840d_hmi

  attribute-fontsize:
    - match: \b[Ff][Ss][12]\b
      scope: constant.language.attribute.s840d_hmi

  attribute-limit:
    - match: \b[Ll][Ii][0-3]\b
      scope: constant.language.attribute.s840d_hmi

  attribute-state:
    - match: \b[Ss][Ee][0-3]\b
      scope: constant.language.attribute.s840d_hmi

  attribute-writeability:
    - match: \b[Ww][Rr][0-5]\b
      scope: constant.language.attribute.s840d_hmi

  boolean:
    - match: \b(?i:TRUE|FALSE)\b
      scope: constant.language.boolean.s840d_hmi

  function:
    - match: \b(?i:A(?:BS|COS|SIN|TAN)|COS|ROUND|S(?:DEG|IN|RAD|QRT)|TAN)\b
      scope: support.function.arithmetic.s840d_hmi
      push: function-parameter
    - match: \b(?i:IS(?:NUM|STR)|CVAR|EVAL)\b
      scope: support.function.checks.s840d_hmi
      push: function-parameter
    - match: \b(?i:INSTR|LEN|LEFT|MIDS|REPLACE|RIGHT)\b
      scope: support.function.string.s840d_hmi
      push: function-parameter
    - match: \b(?i:PI_(?:SERVICE|START))\b
      scope: support.function.other.s840d_hmi
      push: function-parameter

  function-parameter:
    - match: \(
      scope: punctuation.function.parameter.begin.s840d_hmi
      set:
        - meta_scope: meta.function.parameter.s840d_hmi
        - match: \)
          scope: punctuation.function.parameter.end.s840d_hmi
          pop: true
        - match: ','
          scope: punctuation.function.parameter.seperator.s840d_hmi
        - include: expressions
        - include: illegal
    - match: (?=\S)
      pop: true

  group:
    - match: \(
      scope: punctuation.group.begin.s840d_hmi
      push:
        - meta_scope: meta.group.s840d_hmi
        - match: \)
          scope: punctuation.group.end.s840d_hmi
          pop: true
        - include: expressions
        - include: illegal
    - match: \)
      scope: invalid.illegal.s840d_hmi

  number:
    - match: \b(?i:PI)\b
      scope: constant.language.numeric.s840d_hmi
    - match: \b[1-8](\.\d+)?EX[-+]?\d{1,2}\b
      scope: constant.language.numeric.s840d_hmi
    - match: \b\d+(\.\d+)?\b
      scope: constant.language.numeric.s840d_hmi

  operator:
    - match: =(?!=)
      scope: keyword.operator.assignment.s840d_hmi
    - match: '<<'
      scope: keyword.operator.assignment.s840d_hmi
    - match: '<>|==|>=|<=|<|>'
      scope: keyword.operator.relational.s840d_hmi
    - match: '[-+/\*]'
      scope: keyword.operator.arithmetic.s840d_hmi
    - match: \b(?i:MOD)\b
      scope: keyword.operator.arithmetic.s840d_hmi
    - match: \b(?i:AND|OR|NOT)\b
      scope: keyword.operator.boolean.s840d_hmi
    - match: \b(?i:B(?:AND|X?OR|NOT)|SH[LR])\b
      scope: keyword.operator.binary.s840d_hmi

  operand:
    - match: '{{label}}'
      scope: variable.other.s840d_hmi
      push: operand-members

  softkey:
    - match: '{{softkey}}'
      scope: entity.name.softkey.s840d_hmi
      push: softkey-members

  string:
    - match: '"'
      scope: punctuation.string.begin.s840d_hmi
      push:
        # double quoted strings with embedded highlighting
        - meta_scope: string.quoted.double.s840d_hmi
        # embedded double quotes
        - match: \'"\'
          scope: constant.character.escape.double-quoted.s840d_hmi
        # embedded linefeed
        - match: '%[Nn]'
          scope: constant.character.escape.linefeed.s840d_hmi
        # valid end of double quoted string
        - match: '"'
          scope: punctuation.string.end.s840d_hmi
          pop: true
        # invalid end of double quoted string
        - match: '[^"]$'
          scope: invalid.illegal.s840d_hmi
          pop: true
    # text identifier
    - match: \$\d+\b
      scope: support.variable.textid.s840d_hmi

  variable:
    - match: \b(?i:CUR(?:POS|VER)|ENTRY|ERR|FILE_ERR|FOC|S_CHAN)\b
      scope: support.variable.language.s840d_hmi
    - match: \b(?i:REG)\b
      scope: support.variable.register.s840d_hmi
      push: operand-members

###############################################################################

  illegal:
    - match: \S
      scope: invalid.illegal.s840d_hmi

  illegal-pop:
    - match: \S+
      scope: invalid.illegal.s840d_hmi
      pop: true

###############################################################################
# OBJECT MEMBERS
###############################################################################

  operand-members:
    - match: \[
      scope: punctuation.index.begin.s840d_hmi
      push:
        - match: \]
          scope: punctuation.index.end.s840d_hmi
          pop: true
        - include: expressions
    - match: '\.'
      scope: punctuation.member.seperator.s840d_hmi
      set:
        # list of valid attributes
        - match: \b(?i:a[cl]|bc|cb|f[cs]|gt|hlp|l[it]|m(?:ax|in)|[su]t|typ|v(?:a[lr]|ld)|wr)\b
          scope: entity.other.attribute-name.s840d_hmi
          pop: true
        - include: illegal-pop
    - match: (?=\S)
      pop: true

  softkey-members:
    - match: '\.'
      scope: punctuation.member.seperator.s840d_hmi
      set:
        # list of valid attributes
        - match: \b(?i:ac|s[te])\b
          scope: entity.other.attribute-name.s840d_hmi
          pop: true
        - include: illegal-pop
    - match: (?=\S)
      pop: true
