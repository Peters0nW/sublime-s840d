%YAML 1.2
# The MIT License (MIT)
#
# Copyright (c) 2016 DeathAxe <deathaxe82@googlemail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
###############################################################################
---

# http://facelessuser.github.io/sublime-markdown-popups/textmate_scopes/
# https://manual.macromates.com/en/language_grammars#naming_conventions
name: s840d
file_extensions:
  - arc
  - def
  - mpf
  - nc
  - spf
  - tea
first_line_match: '(PROC|%_N_[0-9A-Za-z_]+)'
scope: source.s840d

###############################################################################

variables:
  # end of expression
  eoe: (?=\S)|$
  # end of block
  eob: (?=\s*(;|$))
  # identifier
  identifier: '[[:alpha:]_][[:alnum:]_]{0,31}'
  # label or variable
  #   - must start with two letters or underline
  #     before the first digit is allowed
  #   - must not be longer than 32 chars
  label: '[[:alpha:]_]{2}[[:alnum:]_]{0,30}'
  # simple operators
  operator: '[-+=<>/*]'
  # positive or negative float value, which must not be followed by [ or =
  # e.g.:
  #  100.0 | 100. | +100.0 | +100. | -100.0 | -100.
  #  0.10 | .10 | +0.10 | +.10 | -0.10 | -.10
  #  1EX2  | 1.EX2 | 0.1EX3 | .1EX3 | -1EX2  | -1.EX2 | -0.1EX3 | -.1EX3
  iso_float: '[-+]?(?:\d+\.?\d*|\.\d+)(EX[-+]?\d{1,2})?(?!\d|\s*[\[{{operator}}])'
  # positive integer value, which must not be followed by [ or =
  iso_uint:  '\d+(?!\d|\s*[\[{{operator}}])'
  # SINUMERIK variables prefixes
  # e.g.: $A_ $AA_ $AC_ ... $MN_ $MNS_ ...
  # !! $PC_... added see CUST_800
  ncvar_prefix: '\${1,2}(?:A[ACN]?|C|MM|[MS][ACN]S?|N[KPT]|O[CN]|P[C]?|TC|VA)_'

###############################################################################
# MAIN CONTEXT
###############################################################################

contexts:

  main:
    # SINUMERIK archive header file
    - match: '^\s*%_N_{{identifier}}'
      scope: constant.language.archive.filename.s840d
    # SINUMERIK archive header path
    - match: '^\s*(;\$PATH=)(/_N_{{identifier}})'
      captures:
        1: constant.language.archive.s840d
        2: constant.language.archive.pathname.s840d
    # SINUMERIK comment
    - match: ';.*$'
      scope: comment.line.s840d
    # block number and label
    - match: '^\s*([Nn]\d+\s*)?(?:({{label}})(:)\s*)?'
      captures:
        1: comment.blockno.s840d
        2: entity.name.type.label.s840d
        3: punctuation.definition.separator.s840d
      push: block-main

###############################################################################
# MAIN NC BLOCK
#   contains all statements, which must start at the beginning of a row
###############################################################################

  block-main:

    # ISO block disable
    - match: '/\d?.*$'
      scope: comment.line.s840d
      pop: true

    # ISO comment block
    # (* Some text *)
    - include: block-comment

    # GOTO, GOTOB, GOTOC, GOTOF
    - include: stmt-goto

    # single word control structures without parameters
    - match: '(GOTOS|LOOP|ELSE|END(IF|FOR|LOOP|WHILE)|gotos|loop|else|end(if|for|loop|while))\b'
      scope: keyword.control.s840d
      set: block-end

    # IF statement
    - match: '(IF|if)\b'
      scope: keyword.control.s840d
      set:
        # assignments are illegal in this context
        - match: '=(?!=)'
          scope: invalid.illegal.s840d
        - include: stmt-goto
        - include: block-expressions

    # CASE <var> OF <val1> GOTO <lbl1> <val2> GOTO <lbl2> ...
    - match: '(CASE|case)\b'
      scope: keyword.control.s840d
      set:
        # assignments are illegal in this context
        - match: '=(?!=)'
          scope: invalid.illegal.s840d
        - match: '\b(OF|DEFAULT|of|default)\b'
          scope: keyword.control.s840d
        - include: stmt-goto
        - include: block-expressions

    # FOR <var>=<startval> TO <endval>
    - match: '(FOR|for)\b'
      scope: keyword.control.s840d
      set:
        - match: '\b(TO|to)\b'
          scope: keyword.control.s840d
        - include: block-expressions

    # UNTIL, WHILE
    - match: '(UNTIL|WHILE|until|while)\b'
      scope: keyword.control.s840d
      set: block-expressions

    # REPEATB <LBL> P=<count>
    - match: '(REPEATB|repeatb)\b'
      scope: keyword.control.s840d
      set:
        - match: '\s+{{label}}'
          scope: entity.name.label.s840d
          set:
            # repeat count
            - match: '\s+([Pp])\s*=\s*(\d+)'
              captures:
                1: support.variable.s840d
                2: constant.language.numeric.s840d
            - include: block-end
        - include: block-end

    # REPEAT <LBL_S> <LBL_E> P=<count>
    - match: '(REPEAT|repeat)\b'
      scope: keyword.control.s840d
      set:
        # begin label and optional end label
        - match: '\s+{{label}}(\s+{{label}})?'
          scope: entity.name.label.s840d
          set:
            # repeat count
            - match: '\s+([Pp])\s*=\s*(\d+)'
              captures:
                1: support.variable.s840d
                2: constant.language.numeric.s840d
            - include: block-end
        - include: block-end

    # CALL <cycle> BLOCK <lbl1> TO <lbl2>
    - match: '(CALL|call)\b'
      scope: keyword.control.call.s840d
      set:
        # call specific keywords
        - match: '\b(BLOCK|TO|block|to)\b'
          scope: keyword.control.call.s840d
        # finalize block
        - include: block-expressions

    # MCALL <cycle>(...)
    - match: '(MCALL|mcall)\b'
      scope: keyword.control.call.s840d
      set:
        - match: '{{identifier}}'
          scope: support.function.s840d
          set:
            - include: parens
            - include: block-end
        - include: block-end

    # RET
    - match: '(RET|ret)\b'
      scope: keyword.control.s840d
      set:
        - include: parens
        - include: block-end

    - include: block-proc
    - include: block-declarations
    - include: block-synact

    # top level function call
    - match: '({{label}}){{eob}}'
      scope: support.function.s840d
      set: block-end

    # TODO
    # SETINT(2) PRIO=1 ABHEB_Z LIFTFAST

    # We must leave this context here in order not to match
    # any of these toplevel statement in a block again.
    - match: '{{eoe}}'
      set: block-gcode

###################################################################
# ISO comment block
#    ( comment text )
###################################################################

  block-comment:
    - match: '\('
      scope: punctuation.definition.comment.begin.s840d
      push:
        # double quoted strings with embedded highlighting
        - meta_scope: comment.block.s840d
        # valid end of double quoted string
        - match: '\)'
          scope: punctuation.definition.comment.end.s840d
          pop: true

###################################################################
# Statement: GOTO
#   stand alone
#   IF ... GOTO ...
#   CASE ... OF ... GOTOF
###################################################################

  stmt-goto:
    # goto, gotob, gotof command
    - match: '(GOTO[BCF]?|goto[bcf]?)\b'
      scope: keyword.control.s840d
      push:
      - include: parens
      # match constant goto targat
      - match: '\s+{{label}}'
        scope: entity.name.label.s840d
        pop: true
      # stop at end of line
      - include: block-end

###################################################################
# Declaration blocks
#  DEFINE var AS ...
#  DEF INT _VAR = 10
###################################################################

  block-declarations:
    # SINUMERIK macro definition block
    - match: '(DEFINE|define)\b'
      scope: keyword.control.define.s840d
      set:
        - match: '{{identifier}}'
          scope: entity.name.type.s840d # for 'Goto Definition'
          set:
          - match: '\b(AS|as)\b'
            scope: keyword.control.as.s840d
            set: block-gcode
          - include: block-end
        - include: block-end
    # SINUMERIK variable (re-) definition block
    - match: '((RE)?DEF|(re)?def)\b'
      scope: keyword.control.def.s840d
      set:
        - include: storage-types
        - match: '\b(NCK|CHAN|AP[RWX][BP]?|LL[IU]|nck|chan|ap[rwx][bp]?|ll[iu])\b'
          scope: storage.modifier.s840d
        # parameter seperator
        - match: ','
          scope: punctuation.definition.parameters.seperator.s840d
        - include: block-expressions

###################################################################
# asynchrone action
###################################################################

  # modal identifier
  block-synact:
    - match: '(ID[S]?|id[s]?)\b'
      scope: keyword.control.async.identifier.s840d
      set:
        - match: '=(?!\s*{{operator}})'
          scope: keyword.operator.assignment.s840d
          set:
            - include: stmt-synact-condition
            - include: block-expressions
        - include: block-end
    - include: stmt-synact-condition

  # condition
  stmt-synact-condition:
    - match: '(EVERY|WHEN|WHENEVER|every|when|whenever)\b'
      scope: keyword.control.async.condition.s840d
      set:
        # assignments are illegal in this context
        - match: '=(?!=)'
          scope: invalid.illegal.s840d
        - include: stmt-synact-operation
        - include: block-expressions
    - include: stmt-synact-operation

  # operation
  stmt-synact-operation:
    - match: '(DO|do)\b'
      scope: keyword.control.async.operation.s840d
      set: block-gcode

###################################################################
# PROC name (...) options
###################################################################

  block-proc:
    - match: '(PROC|proc)\b'
      scope: keyword.control.proc.s840d
      set:
        - meta_scope: meta.definition.function.s840d
        - match: '{{identifier}}'
          scope: entity.name.function.s840d
          push: stmt-proc-parameters
        - include: block-end

  # parameter block (optional)
  stmt-proc-parameters:
    - match: '\('
      scope: punctuation.definition.parameters.begin.s840d
      push:
        - meta_scope: meta.definition.parameters.s840d
        - include: storage-types
        # call by reference modifier
        - match: '\b(VAR|var)\b'
          scope: storage.modifier.s840d
        # parameter identifier
        - match: '\b{{label}}\b'
          scope: variable.parameter.s840d
        # parameter seperator
        - match: ','
          scope: punctuation.definition.parameters.seperator.s840d
        # end of parameters
        - match: '\)'
          scope: punctuation.definition.parameters.end.s840d
          pop: true
        - include: block-end
    - include: stmt-proc-properties

  # procedure properties
  stmt-proc-properties:
    - match: '\b(ACTBLOCNO|DISPLO[NF]|PREPRO|SAVE|SBLO[FN]|actblocno|displo[nf]|prepro|save|sblo[fn])\b'
      scope: storage.modifier.s840d
      set: stmt-proc-properties
    - include: block-end

###################################################################
# ISO G-Code
###################################################################

  block-gcode:
    # begin ISO command mode
    # ISO command: letter followed by digit or =+-
    # TODO: avoid look behind (required for R-Parameter handling)
    - match: '(?=(?<!{{operator}})[A-Za-z]\s*[\d\.\[=+-])'
    # - match: '(?=[A-Za-z]\s*[\d\.\[=+-])'
      push: gcode-body
    - include: block-expressions

  gcode-body:

    # direct ISO parameter (e.g. F100.0 | F-100.0)
    # {{iso_float}}         --> F200.4 | F-200
    #   positions: A,B,C,Q,R,U,V,W,X,Y,Z
    #   spindle:   S
    #   params:    F,I,J,K
    - match: '(?i)([ABCFIJKQRSUVWXYZ])\s*({{iso_float}})'
      captures:
        1: support.variable.iso.s840d
        2: constant.language.numeric.iso.s840d

    # direct ISO functions (e.g. G0 G01 M01 H4 ...)
    # {{iso_uint}}          --> G0 ... G999999...
    #   G-Function
    #   L-Call (subprogram)
    #   M-Function
    #   H-Function
    #   T-Call
    #   D-Call
    - match: '(?i)[GLMHTD]\s*{{iso_uint}}'
      scope: support.function.iso.s840d

    # extended ISO parameter (e.g. F=100.0)
    # \s*(?==)              --> ... = ...
    #   spindle:   S
    #   params:    F,I,J,K
    - match: '(?i)([FIJKS])\s*(?==)'
      scope: support.variable.iso.s840d
      pop: true

    # extended ISO functions (e.g. M=3 | H=14 | T=2020 | D=3)
    # \s*(?==)              --> ... = ...
    #   M-Function
    #   H-Function
    #   T-Call
    #   D-Call
    - match: '(?i)[MHTD]\s*(?==)'
      scope: support.function.iso.s840d
      pop: true

    # extended ISO functions (e.g. M3 | M=3 | M1=3)
    # \d{0,2}\s*(?==)       --> M0= ... M99=
    #   M-Function
    #   H-Function
    - match: '(?i)[MH]\d{0,2}\s*(?==)'
      scope: support.function.iso.s840d
      pop: true

    # extended ISO parameter (e.g. S1=3000)
    # \s*(?==)      --> ... = ...
    #   S-Call
    - match: '(?i)(S[1-3]|[ABCQRUVWXYZ]\d*)\s*(?==)'
      scope: support.variable.iso.s840d
      pop: true

    # indirect ISO functions (e.g. G[1]=2 M[3]=4)
    # (?=\s*\[)             --> G[...] = ...
    #   G-Function
    #   M-Function
    #   H-Function
    - match: '(?i)[GMH]\s*(?=\[)'
      scope: support.function.iso.s840d
      pop: true

    # indirect extended ISO parameter (e.g. S[1]=3000)
    # (?=\s*\[)             --> S[...]=
    #   S-Call
    - match: '(?i)([ABCQRSUVWXYZ])\s*(?=\[)'
      scope: support.variable.iso.s840d
      pop: true

    - match: '{{eoe}}'
      pop: true
    - include: block-end

###################################################################
# STATEMENT block
#  e.g.: assignment, function call
###################################################################

  block-expressions:
    - include: expressions
    - include: block-end

  block-end:
    - match: '{{eob}}'
      pop: true
    # illegal block content
    - match: '\S'
      scope: invalid.illegal.s840d

###################################################################
# collection of all allowed expressions
###################################################################

  expressions:
    - include: string-double-quoted
    - include: constants # must be before operands due to '.50'
    - include: operators-unary
    - include: parens
    - include: brackets-square
    - include: identifiers

###################################################################
# variables, functions, ...
###################################################################

  identifiers:
    # by first looking forward with the help of the prefix,
    # performance is increased massivly
    - match: '(?=\${0,2}{{identifier}})'
      push:
        - include: operators-binary
        - include: functions
        - include: properties
        - include: variables
        # leave context here
        - match: '{{eoe}}'
          pop: true
        - match: '\w+'
          scope: invalid.illegal.s840d
          pop: true

###################################################################
# language operators
###################################################################

  operators-unary:
    # assignment
    - match: =(?!=)
      scope: keyword.operator.assignment.s840d
      push: after-assignment
    # string chaining
    - match: '<<'
      scope: keyword.operator.assignment.s840d
      push: after-relational
    # relational operators
    - match: '[=<>]=|<>|[<>](?!<)'
      scope: keyword.operator.relational.s840d
      push: after-relational
    # aritmetic operators
    - match: '[-+/\*]'
      scope: keyword.operator.arithmetic.s840d
      push: after-operator
    # curly brackets are used for templates
    - match: '{.*}'
      scope: invalid.illegal.s840d

  operators-binary:
    - match: '\b(?:AND|and|OR|or|XOR|xor|NOT|not|B_AND|b_and|B_OR|b_or|B_XOR|b_xor|B_NOT|b_not|MOD|mod|DIV|div)\b'
      scope: keyword.operator.s840d
      push: after-operator
    # special SINUMERIK aritmetic operator
    # found in CST cycles
    - match: '\b_(?:DEC|dec)[1-8]\b'
      scope: keyword.operator.s840d

  after-assignment:
    # string chaining after assignment is allowed
    - match: '<<'
      scope: keyword.operator.assignment.s840d
      push: after-relational
    - include: after-relational

  after-relational:
    # first '-' after assignment is a negative value identifier
    - match: '[-+]'
      scope: constant.language.numeric.sign.s840d
      set: after-operator
    # leave this context as soon as possible
    - match: '{{eoe}}'
      set: after-operator

  after-operator:
    - match: '{{operator}}'
      scope: invalid.illegal.s840d
    # only 'NOT' is allowed after an operator
    - match: '\b(?:AND|and|OR|or|XOR|xor|B_AND|b_and|B_OR|b_or|B_XOR|b_xor|B_NOT|b_not|MOD|mod|DIV|div|_(?:DEC|dec)[1-8])\b'
      scope: invalid.illegal.s840d
    # leave this context as soon as possible
    - match: '{{eoe}}'
      pop: true

###################################################################
# ROUND BRACKETS
# expressions withing ( ... )
###################################################################

  parens:
    - match: '\('
      scope: punctuation.definition.expression.begin.s840d
      push: parens-begin

  parens-begin:
    # first +/- after ( is a negative number indicator
    - match: '[-+]'
      scope: constant.language.numeric.sign
      set: parens-body
    # leave this context as soon as possible
    - match: '{{eoe}}'
      set: parens-body

  parens-body:
    - include: frame-constants
    - include: expressions
    - match: '\)'
      scope: punctuation.definition.expression.end.s840d
      pop: true
    - match: '{{eob}}'
      pop: true

###################################################################
# SQUARE BRACKETS
# everything withing [ ... ]
###################################################################

  brackets-square:
    - match: '\['
      scope: punctuation.arrayindex.begin.s840d
      push: brackets-square-begin

  brackets-square-begin:
    - meta_scope: meta.arrayindex.s840d
    # first +/- after [ is a negative number indicator
    - match: '[-+]'
      scope: constant.language.numeric.sign.s840d
      set: brackets-square-body
    # leave this context as soon as possible
    - match: '{{eoe}}'
      set: brackets-square-body

  brackets-square-body:
    - meta_scope: meta.arrayindex.s840d
    - include: frame-constants
    - include: expressions
    # parameter seperator
    - match: ','
      scope: punctuation.arrayindex.seperator.s840d
    - match: '\]'
      scope: punctuation.arrayindex.end.s840d
      pop: true
    - match: '{{eob}}'
      pop: true

###################################################################
# language constants
###################################################################

  constants:
    # language constants
    - match: '\b(?:FALSE|false|TRUE|true)\b'
      scope: constant.language.boolean.s840d
    # decimal numbers
    - match: '(?:\b\d+\.?\d*|\.\d+)(EX[-+]?\d{1,2})?'
      scope: constant.language.numeric.s840d
    # single quoted binary numbers
    - match: '''[Bb]'
      push:
      - meta_scope: constant.language.numeric.s840d
      - match: '''|$'
        pop: true
      - match: '[^01]'
        scope: invalid.illegal.s840d
    # single quoted hexadecimal numbers
    - match: '''[Hh]'
      push:
      - meta_scope: constant.language.numeric.s840d
      - match: '''|$'
        pop: true
      - match: '(?i)[^\dABCDEF]'
        scope: invalid.illegal.s840d

###################################################################
# SINUMERIK storage types
###################################################################

  storage-types:
    # TODO: allow array only on string
    - include: brackets-square
    # type identifier
    - match: '\b(AXIS|BOOL|FRAME|INT|REAL|CHAR|STRING|axis|bool|frame|int|real|char|string)\b'
      scope: storage.type.s840d

###################################################################
# SINUMERIK parameter constants
#     valid in arrays or function parameter blocks
#     e.g.:  $P_UIFR[X,0,TR]
#            CTRANS(0.40,X,TR)
###################################################################

  frame-constants:
    - match: '\b(TR|FI|RT|SC|MI|tr|fi|rt|sc|mi)\b'
      scope: constant.language.frameindex.s840d

###################################################################
# double quoted strings
#    includes all 'prototype' definitions
###################################################################

  string-double-quoted:
    - match: '"'
      scope: punctuation.definition.string.begin.s840d
      push:
        # double quoted strings with embedded highlighting
        - meta_scope: string.quoted.double.s840d
        # embedded double quotes
        - match: \'"\'
          scope: constant.character.escape.double-quoted.s840d
        # embedded line feed
        - match: '%[Nn]'
          scope: constant.character.escape.double-quoted.s840d
        # embedded sprint format parameter
        - match: '%\d*\.*\d*[DdFfSsXx]?\b'
          scope: constant.character.escape.double-quoted.s840d
        # valid end of double quoted string
        - match: '"'
          scope: punctuation.definition.string.end.s840d
          pop: true
        # invalid end of double quoted string
        - match: '[^"]$'
          scope: invalid.illegal.s840d
          pop: true

###################################################################
# known variables
###################################################################

  variables:
    - include: axes-variables
    # R-Parameters
    # d+(?!\d|\s*\[)      --> R0 ... R999999...
    # (?=\s*\[.+?\]\s*=)  --> R[...]=
    # (?<!\.)             --> R is propably ISO position
    - match: '\$?[Rr](?:\d+(?!\d|\s*\[)|(?=\s*\[))'
      scope: support.variable.r.s840d

    # by first looking forward with the help of the prefix,
    # performance is increased massivly
    - match: '(?={{ncvar_prefix}})'
      push:
        # SINUMERIK machine data
        - match: '\${1,2}(?:M(?:A(?:_(?:A(?:A_OFF_MODE|BS_INC_RATIO|C(?:_FILTER_TIME|CEL_(?:REDUCTION_(?:FACTOR|SPEED_POINT|TYPE)|TYPE_DRIVE)|T_POS_ABS)|UTO_GET_TYPE|X(?:_(?:E(?:MERGENCY_STOP_TIME|SR_DELAY_TIME[12])|INERTIA|JERK_(?:DAMP|ENABLE|FREQ|MODE|TIME|VEL[01])|M(?:ASS|OTION_DIR)|VELO_LIMIT)|CONF_ASSIGN_MASTER_(?:CHAN|NCU)|IS_(?:LANG_SUB_MASK|NUMBER_FOR_MONITORING)))|B(?:A(?:CKLAS(?:H|H_(?:DY(?:N|N_MAX_VELO)|FACTOR|MODE))|SE_FUNCTION_MASK)|ERO_DELAY_TIME_(?:MINUS|PLUS)|RAKE_MODE_CHOICE)|C(?:EC_(?:ENABLE|MAX_(?:SUM|VELO)|SCALING_SYSTEM_METRIC)|LAMP_POS_TO(?:L|L_TIME)|O(?:MP(?:_ADD_VELO_FACTOR|RESS_POS_TOL)|NTOUR_TOL|RR_VELO|UP(?:_SYNC_DELAY_TIME|LE_(?:POS_TOL_(?:COARS(?:E|E_2)|FIN(?:E|E_2))|VELO_TOL_(?:COARSE|FINE))))|TRLOUT_(?:LIMI(?:T|T_TIME)|MODULE_NR|NR|SEGMENT_NR|TYPE))|D(?:ES(?:_VELO_LIMIT|VAL_DELAY_(?:ENABLE|TIME))|ISPLAY_IS_MODULO|RI(?:FT_(?:ENABLE|LIMIT|VALUE)|LL_VELO_LIMIT|VE_(?:AX_RATIO(?:_(?:DENOM|NUMERA)|2_(?:DENOM|NUMERA))|ENC_RATIO_(?:DENOM|NUMERA)|SIGNAL_TRACKING))|YN_(?:LIMIT_RESET_MASK|MATCH_(?:ENABLE|TIME)))|E(?:G_(?:ACC_TOL|VEL_WARNING)|NC_(?:A(?:BS_(?:BUFFERING|TURNS_MODULO|ZEROMON_(?:INITIAL|WARNING))|CTVAL_SMOOTH_TIME)|C(?:HANGE_TOL|OMP_ENABLE)|DIFF_TOL|F(?:EEDBACK_POL|REQ_LIMI(?:T|T_LOW))|GRID_POINT_DIST|I(?:N(?:PUT_NR|VERS)|S_(?:DIREC(?:T|T2)|INDEPENDENT|LINEAR))|M(?:ARKER_INC|EAS_TYPE|ODULE_NR)|P(?:ASSIVE_PARKING|ULSE_MULT)|RE(?:FP_(?:M(?:ARKER_DIST|ODE)|STATE)|SOL)|SE(?:GMENT_NR|RIAL_NUMBER)|TYPE|ZERO(?:_MONITORING|MON_SYSVAR_CTRL))|PS_TLIFT_TANG_STEP|QUIV_(?:C(?:PREC_TIME|URRCTRL_TIME)|SPEEDCTRL_TIME)|SR_REACTION|VERY_ENC_SERIAL_NUMBER)|F(?:FW_(?:ACTIVATION_MODE|MODE)|I(?:PO_TYPE|X(?:_POINT_POS|ED_STOP_(?:A(?:CKN_MASK|LARM_(?:MASK|REACTION)|NA_TORQUE)|BY_SENSOR|CONTROL|MODE|T(?:HRESHOLD|ORQUE_(?:DEF|FACTOR|RAMP_TIME))|WINDOW_DEF)))|OC_(?:ACTIVATION_MODE|STANDSTILL_DELAY_TIME)|R(?:AME_OR_CORRPOS_NOTALLOWED|ICT_(?:ADAPT_(?:T(?:_STEP|ABLE_ACCEL)|V_(?:CONST_(?:MINUS|PLUS)|DECAY_(?:MINUS|PLUS)|STEP_(?:MINUS|PLUS)))|COMP_(?:A(?:CCEL[1-3]|DAPT_ENABLE)|CONST_M(?:AX|IN)|ENABLE|INC_FACTOR|MODE|TIME)|PRETRIGGER_TIME|T(?:_PULSE_(?:DELAY_TIME|SMOOTH_TIME)|ORQUE_STEP)|V(?:_PULSE_(?:CONST_TIME|DE(?:CAY_TIME|LAY_TIME)|SMOOTH_TIME)|ELO_STEP))))|G(?:00_(?:ACCEL_FACTOR|JERK_FACTOR)|A(?:IN_FOR_MONITORING|NTRY_(?:A(?:CT_POS_TOL_ERROR|XIS_TYPE)|BREAK_UP|FUNCTION_MASK|POS_TOL_(?:ERROR|REF|WARNING)))|EAR_STEP_(?:CHANGE_(?:ENABLE|POSITION)|M(?:AX_VEL(?:O|O(?:_LIMIT|2))|IN_VEL(?:O|O(?:_LIMIT|2)))|P(?:C_MAX_VELO_LIMIT|OSCTRL_ACCE(?:L|L2))|SPEEDCTRL_ACCEL|USED_IN_AXISMODE))|H(?:ANDWH_(?:MAX_INCR_(?:SIZE|VELO_SIZE)|STOP_COND|VELO_OVERLAY_FACTOR)|IRTH_IS_ACTIVE)|I(?:NDEX_AX_(?:ASSIGN_POS_TAB|DENOMINATOR|NUMERATOR|OFFSET)|S_(?:CONCURRENT_POS_AX|LOCAL_LINK_AXIS|ROT_AX|UNIPOLAR_OUTPUT|VIRTUAL_AX))|JOG_(?:AND_POS_(?:JERK_ENABLE|MAX_JERK)|INCR_WEIGH(?:T|T_TRAFO)|MAX_(?:ACCEL|JERK)|REV_VEL(?:O|O_RAPID)|VEL(?:O|O_RAPID))|L(?:EAD(?:_FUNCTION_MASK|SCREW_PITCH)|O(?:AD_SMOOTH_FILTER_TIME|OKAH_FREQUENCY)|UBRICATION_DIST)|M(?:A(?:INTENANCE_DATA|PPED_FRAME|X_A(?:CCEL_OVL_FACTOR|X_(?:ACCEL|JER(?:K|K_FACTOR)|VELO)))|ISC_FUNCTION_MASK|M_(?:ENC_COMP_MAX_POINTS|QEC_MAX_POINTS)|ODULO_RANG(?:E|E_START)|S_(?:ASSIGN_MASTER_(?:SPEED_CMD|TORQUE_CTR)|COUPLING_ALWAYS_ACTIVE|FUNCTION_MASK|M(?:AX_CTRL_VELO|OTION_DIR_REVERSE)|SPIND_COUPLING_MODE|T(?:ENSION_TORQ(?:_FILTER_TIME|UE)|ORQUE_(?:CTRL_(?:ACTIVATION|I_TIME|MODE|P_GAIN)|WEIGHT_SLAVE))|VELO_TOL_(?:COARSE|FINE)))|NUM_(?:ENCS|FIX_POINT_POS|GEAR_STEP(?:S|S2))|O(?:EM_AXIS_INFO|FFSETVALUE_FOR_MONITORING)|P(?:A(?:RAMSET_CHANGE_ENABLE|TH_TRANS_(?:JERK_LIM|POS_TOL))|O(?:S(?:_(?:AX_VELO|LIMIT_(?:MINU(?:S|S2)|PLU(?:S|S2)))|CTRL_(?:CONFIG|D(?:AMPING|ESVAL_DELAY_INFO|UAL_FEEDBACK_TIME)|GAIN|INTEGR_(?:ENABLE|TIME)|OUT_FILTER_(?:ENABLE|TIME))|ITIONING_TIME)|WER_SMOOTH_FILTER_TIME)|ROFI(?:BUS_(?:ACTVAL_LEAD_TIME|CTRL_CONFIG|OUTVAL_DELAY_TIME|TORQUE_RED_RESOL)|SAFE_MODULE_NR))|R(?:ATED_(?:OUTVAL|VELO)|EFP_(?:BERO_LOW_ACTIVE|C(?:AM_(?:DIR_IS_MINUS|IS_ACTIVE|MARKER_DIST|SHIFT)|YCLE_NR)|M(?:AX_(?:CAM_DIST|MARKER_DIST)|OVE_DIS(?:T|T_CORR))|PERMITTED_IN_FOLLOWUP|S(?:E(?:ARCH_MARKER_REVERSE|T_POS)|TOP_AT_ABS_MARKER|YNC_ENCS)|VELO_(?:POS|SEARCH_(?:CAM|MARKER)))|OT_IS_MODULO)|S(?:AFE_(?:A(?:C(?:CEPTANCE_TST_TIMEOUT|KN|T_(?:CHECKSUM|STOP_OUTPUT))|DD_FUNCTION_MASK)|BRAKETEST_(?:CONTROL|POS_TOL|TORQU(?:E|E_NORM))|C(?:AM_(?:ENABLE|MINUS_OUTPUT|P(?:LUS_OUTPUT|OS_(?:MINUS|PLUS))|RANGE_(?:BIN_OUTPUT_[1-4]|OUTPUT_[1-4])|T(?:OL|RACK_(?:ASSIGN|OUTPUT)))|ONFIG_CHANGE_DATE|ROSSCHECK_CYCLE|TRLOUT_MODULE_NR)|D(?:ES_(?:CHECKSUM|VELO_LIMIT)|RIVE_PS_ADDRESS)|E(?:NC_(?:CONF|FREQ_LIMIT|G(?:EAR_(?:DENOM|NUMERA|PITCH)|RID_POINT_DIST)|I(?:DENT|NPUT_NR|S_(?:GEAR_REVERSAL|LINEAR))|M(?:EAS_STEPS_(?:POS1|RESOL)|OD(?:_TYPE|ULE_NR))|NUM_BITS|P(?:OLARITY|ULSE_SHIFT)|RESOL|TYPE)|XT_(?:PULSE_ENAB_OUTPUT|STOP_INPUT))|FUNCTION_ENABLE|GEAR_SELECT_INPUT|I(?:NFO_(?:EN(?:ABLE|C_RESOL)|MODULE_NR)|PO_STOP_GROUP|S_ROT_AX)|MOD(?:E_SWITCH_TIME|ULO_RANGE)|OVR_INPUT|P(?:ARK_ALARM_SUPPRESS|OS_(?:LIMIT_(?:MINUS|PLUS)|S(?:ELECT_INPUT|TOP_MODE)|TOL)|REV_CONFIG|ULSE_(?:DIS(?:_CHECK_TIME|ABLE_DELAY)|ENABLE_OUTPUT|STATUS_INPUT))|REFP_(?:POS_TOL|STATUS_OUTPUT)|S(?:INGLE_ENC|LIP_VELO_TOL|S_(?:DISABLE_INPUT|STATUS_OUTPUT)|T(?:ANDSTILL_(?:DELAY|POS|TOL|VELO_(?:LIMIT|TOL))|OP_(?:REQUEST_(?:EXT_INPUT|INPUT)|SWITCH_TIME_[CDEF]|VELO_TOL))|VSS_(?:DISABLE_INPUT|STATUS_OUTPUT))|VELO_(?:LIMIT|OVR_FACTOR|S(?:ELECT_INPUT|T(?:ATUS_OUTPUT|OP_(?:MODE|REACTION))|WITCH_DELAY)|X|X_(?:FILTER_TIME|HYSTERESIS|STATUS_OUTPUT)))|CALING_FACTOR_G70_G71|ERVO_DISABLE_DELAY_TIME|IMU_AX_VDI_OUTPUT|OFT_ACCEL_FACTOR|P(?:IND_(?:A(?:CTIVE_AFTER_RESET|SSIGN_TO_MACHAX)|DE(?:FAULT_(?:ACT_MASK|MODE)|S_VELO_TOL)|EXTERN_VELO_LIMIT|FUNC(?:_RESET_MODE|TION_MASK)|O(?:N_SPEED_AT_IPO_START|SCILL_(?:ACCEL|DES_VELO|START_DIR|TIME_C(?:CW|W)))|POS(?:CTRL_VELO|IT(?:_DELAY_TIME|IONING_DIR))|STOPPED_AT_IPO_START|VELO_LIMIT)|LINES_CONTROL_CONFIG)|T(?:ANDSTILL_(?:DELAY_TIME|POS_TOL|VELO_TOL)|IFFNESS_(?:CONTROL_(?:CONFIG|ENABLE)|DELAY_TIME)|OP_(?:LIMIT_(?:COARSE|F(?:ACTOR|INE))|ON_CLAMPING)))|T(?:ANG_OFFSET|EMP_COMP_TYPE|ORQUE_OFFSET)|VELO_FFW_WEIGHT|W(?:AIT_ENC_VALID|ORKAREA_CHECK_TYPE))|S_(?:AXIS_MCS_POSITION|CLAMPING_TOLERANCE|S(?:IM_START_POSITION|PINDLE_(?:CHUCK_TYPE|PARAMETER))|TAILSTOCK_PARAMETER))|C(?:_(?:A(?:BSBLOCK_FUNCTION_MASK|CCEL_ORI|D(?:APT_PATH_DYNAMIC|D_MOVE_ACCEL_RESERVE)|LLOW_G0_IN_G96|U(?:TO_IPTR_LOCK|XFU_(?:ASS(?:IGN_(?:EXTENSION|GROUP|S(?:IM_TIME|PEC)|TYPE|VALUE)|OC_M(?:0_VALUE|1_VALUE))|D(?:_SYNC_TYPE|L_SYNC_TYPE)|F_SYNC_TYPE|H_(?:SYNC_TYPE|TYPE_INT)|M_SYNC_TYPE|PREDEF_(?:EXTENSION|GROUP|S(?:IM_TIME|PEC)|TYPE|VALUE)|QUICK_BLOCKCHANGE|S_SYNC_TYPE|T_SYNC_TYPE))|X(?:CONF_(?:CHANAX_(?:DEFAULT_NAME|NAME_TAB)|GEOAX_(?:ASSIGN_TAB|NAME_TAB)|MACHAX_USED)|ES_SCALE_ENABLE))|C(?:ART_JOG_SYSTEM|H(?:AN_NAME|BFRAME_(?:POWERON_MASK|RESET_MASK)|FRND_M(?:AXNUM_DUMMY_BLOCKS|ODE_MASK)|SFRAME_(?:POWERON_MASK|RESET_(?:CLEAR_MASK|MASK)))|IRCLE_ERROR_(?:CONST|FACTOR)|O(?:LLECT_TOOL_CHANGE|MPRESS(?:_(?:BLOCK_PATH_LIMIT|S(?:MOOTH_FACTO(?:R|R_2)|PLINE_DEGREE)|VELO_TOL)|OR_(?:MODE|PERFORMANCE))|N(?:ST_VELO_MIN_TIME|TOUR_(?:ASSIGN_FASTOUT|TUNNEL_(?:REACTION|TOL)))|UPL(?:E_(?:AXIS_1|BLOCK_CHANGE_CTRL_1|IS_WRITE_PROT_1|RESET_MODE_1)|ING_MODE_1))|PREC_WITH_FFW|TAB_(?:DEFAULT_MEMORY_TYPE|ENABLE_NO_LEADMOTION)|U(?:BIC_SPLINE_BLOCKS|RV_EFFECT_ON_PATH_(?:ACCEL|JERK)|T(?:COM_(?:C(?:ORNER_LIMIT|U(?:RVE_INSERT_LIMIT|SP_LIMIT))|INTERS_POLY_ENABLE|MAX(?:_DISC|NUM_(?:CHECK_BLOCKS|DUMMY_BLOCKS|SUPPR_BLOCKS))|P(?:ARALLEL_ORI_LIMIT|LANE_(?:ORI_LIMIT|PATH_LIMIT)))|MOD(?:_(?:ERR|INIT)|K_INIT)|TING_EDGE_(?:DEFAULT|RESET_VALUE))))|D(?:I(?:AMETER_AX_DEF|S(?:ABLE_PLC_START|PLAY_AXIS))|YN_ORI_OFF_(?:ANGLE|ON|VEL))|E(?:NABLE_START_MODE_MASK_PRT|SR_DELAY_TIME[12]|X(?:ACT_POS_MOD(?:E|E_G0_TO_G1)|TERN_(?:F(?:IXED_FEEDRATE_F1_ON|UNCTION_MASK)|G(?:0_LINEAR_MODE|CODE_(?:GROUPS_TO_PLC|RESET_(?:MODE|VALUES)))|PARALLEL_GEOAX|RIGID_TAPPING_M_NR)))|F(?:_VALUES_ACTIVE_AFTER_RESET|GROUP_(?:DEFAULT_AXES|PATH_(?:MODE|RATIO))|IFOCTRL_ADAPTION|RAME_(?:A(?:CS_SET|D(?:APT_MODE|D_COMPONENTS))|S(?:AA_MODE|UPPRESS_MODE)))|G(?:0_(?:LINEAR_MODE|TOLERANCE_FACTOR)|CODE_(?:GROUPS_TO_PL(?:C|C_MODE)|RESET_(?:MODE|VALUES))|EOAX_CHANGE_(?:M_CODE|RESET))|HANDWH_(?:CHAN_STOP_COND|GEOAX_MAX_INCR_(?:SIZE|VSIZE)|ORIAX_MAX_INCR_(?:SIZE|VSIZE))|I(?:GN(?:_PROG_STATE_ASUP|ORE_(?:INHIBIT_ASUP|NONCSTART_ASUP|OVL_FACTOR_FOR_ADIS|REFP_LOCK_ASUP|SINGLEBLOCK_ASUP))|NVOLUTE_(?:AUTO_ANGLE_LIMIT|RADIUS_DELTA))|JOG_(?:ACCEL_GEO|JERK_(?:GEO|OR(?:I|I_ENABLE))|VELO_(?:GEO|ORI|RAPID_(?:GEO|ORI)))|L(?:EN_AC_FIFO|I(?:FTFAST_(?:DIST|MODE_MASK|STOP_COND|WITH_MIRROR)|MIT_CHECK_MODE)|OOKAH_(?:F(?:FORM|UNCTION_MASK)|NUM_OVR_POINTS|OVR_POINTS|RELIEVE_BLOCK_CYCLE|S(?:MOOTH_(?:FACTOR|WITH_FEED)|YSTEM_PARAM)|USE_VELO_NEXT_BLOCK))|M(?:AX(?:_(?:LEAD_ANGLE|PATH_JERK|TILT_ANGLE)|NUM_SYNC_DIAG_VAR)|M(?:_(?:A(?:BSBLOC(?:K|K_BUFFER_CONF)|RCLENGTH_SEGMENTS)|BUFFERED_AC_(?:MARKER|PARAM)|EES_TASK_STACK_SIZE|FEED_PROFILE_SEGMENTS|I(?:NT_TASK_STACK_SIZE|PO_BUFFER_SIZE)|L(?:INK_TOA_UNIT|OOKAH_FFORM_UNITS|UD_VALUES_MEM)|MAX(?:_AXISPOLY_PER_BLOCK|NUM_SURF_GROUPS)|NUM_(?:AC_(?:MARKER|PARAM|SYSTEM_(?:MARKER|PARAM)|TIMER)|B(?:ASE_FRAMES|LOCKS_IN_PREP)|CC_(?:BLOCK_(?:ELEMENTS|USER_MEM)|HEAP_MEM)|FCTDEF_ELEMENTS|G_FRAMES|L(?:INKVAR_ELEMENTS|UD_NAMES_TOTAL)|PROTECT_AREA_(?:ACTIVE|C(?:HAN|ONTOUR))|R(?:_PARAM|EORG_LUD_MODULES)|S(?:AFE_SYNC_ELEMENTS|URF_LEVELS|YNC_(?:DIAG_ELEMENTS|ELEMENTS|STRINGS))|USER_FRAMES|VDIVAR_ELEMENTS|WORKAREA_CS_GROUPS)|ORI(?:PATH_CONFIG|SON_BLOCKS)|P(?:ATH_VELO_SEGMENTS|R(?:EP(?:_TASK_STACK_SIZE|DYN_BLOCKS)|OTOC_(?:NUM_ETP_(?:OEM_TYP|STD_TYP)|USER_ACTIVE)))|REORG_LOG_FILE_MEM|S(?:EARCH_RUN_RESTORE_MODE|HAPED_TOOLS_ENABLE|YSTEM_(?:DATAFRAME_MASK|FRAME_MASK))|TOOL_DATA_CHG_BUFF_SIZE)|C_INFO_(?:CUT_SPEE(?:D|D_STATUS)|NO_UNI(?:T|T_STATUS)|POSN_LI(?:N|N_STATUS)|REV_FEE(?:D|D_STATUS)|VELO_LI(?:N|N_STATUS)))|ODE(?:_AC_FIFO|SWITCH_MASK)|ULT(?:FEED_(?:ASSIGN_FASTIN|STORE_MASK)|ITOOLLOC_DEFAULT))|N(?:IBBLE_(?:P(?:RE_START_TIME|UNCH_(?:CODE|INMASK|OUTMASK))|SIGNAL_CHECK)|UM_AC_FIFO)|O(?:EM_CHAN_INFO|FF_ORI_MODE|NLINE_CUTCOM_ENABLE|RI(?:_(?:ANGLE_WITH_G_CODE|D(?:EF_WITH_G_CODE|ISP_(?:IS_MODULO|MODULO_RANG(?:E|E_START)))|IPO_WITH_G_CODE|TRAFO_ONLINE_CHECK_LI(?:M|MR))|AX_TURN_TAB_[12]|ENTATION_IS_EULER|PATH_MODE|S(?:MOOTHING_MODE|ON_(?:BLOCK_PATH_LIMIT|MODE|STEP_LENGTH))))|P(?:A(?:RT_COUNTE(?:R|R_MCODE)|TH_(?:IPO_IS_ON_TCP|MODE_MASK))|FRAME_RESET_MODE|OLE_ORI_MODE|R(?:E(?:PDYN_(?:MAX_FILT_LENGTH_(?:GEO|RD)|SMOOTHING_(?:FACTOR|ON))|VENT_SYNACT_LOCK_CHAN)|O(?:CESSTIMER_MODE|G_(?:EVENT_(?:IGN_(?:INHIBIT|PROG_STATE|REFP_LOCK|S(?:INGLEBLOCK|TOP))|MAS(?:K|K_PROPERTIES))|NET_TIMER_MODE)))|UNCH(?:_PA(?:RTITION_TYPE|TH_SPLITTING)|NIB_A(?:CTIVATION|SSIGN_FAST(?:IN|OUT)|XIS_MASK)))|R(?:E(?:FP_NC_START_LOCK|ORG_LOG_LIMIT|SET_MODE_MASK)|OT_AX_SWL_CHECK_MODE)|S(?:_VALUES_ACTIVE_AFTER_RESET|E(?:RUPRO_SPEED_(?:FACTOR|MODE)|TINT_ASSIGN_FASTIN)|HAPED_TOOL_(?:CHECKSUM|TYPE_NO)|MOOTHING_MODE|P(?:F_END_TO_VDI|IND_(?:ASSIGN_TAB_ENABLE|DEF_MASTER_SPIND|RIGID_TAPPING_M_NR)|LINE_(?:FEED_PRECISION|MODE)|OS_TO_VDI)|T(?:ART_(?:AC_FIFO|MODE_MAS(?:K|K_PRT))|ROKE_CHECK_INSIDE)|U(?:MCORR_(?:DEFAULT|RESET_VALUE)|RF_(?:BLOCK_PATH_LIMIT|VELO_TOL)))|T(?:_M_ADDRESS_EXT_IS_SPINO|ECHNOLOGY_MODE|IME_LIMIT_NETTO_(?:EES_TASK|INT_TASK)|O(?:CARR_(?:BASE_FRAME_NUMBER|CHANGE_M_CODE|FINE_LIM_(?:LIN|ROT)|ROT(?:_(?:ANGLE_(?:INCR|OFFSET)|OFFSET_FROM_FR)|AX_MODE))|FF_(?:ACCEL|MODE|VELO)|OL_(?:C(?:ARRIER_RESET_VALUE|HANGE_(?:ERROR_MODE|M(?:_CODE|ODE))|ORR_M(?:O(?:DE_G43G44|VE_MODE)|ULTIPLE_AXES))|GRIND_AUTO_TMON|MANAGEMENT_(?:MASK|TOOLHOLDER)|P(?:ARAMETER_DEF_MASK|RESEL_RESET_VALUE)|RESET_(?:NAME|VALUE)|T(?:EMP_COMP_(?:LIMIT|ON)|IME_MONITOR_MASK)))|RA(?:ANG_(?:ANGLE_[12]|BASE_TOOL_[12]|PARALLEL_(?:ACCEL_RES_[12]|VELO_RES_[12]))|C(?:LG_(?:C(?:ONTACT_(?:LOWER_LIMIT|UPPER_LIMIT)|TRLSPI_(?:NR|VERT_OFFSET))|G(?:0_IS_SPECIAL|RINDSPI_(?:HOR_OFFSET|NR|VERT_OFFSET))|HOR_DIR_SUPPORTAX_[12]|SUPPORT_(?:HOR_OFFSET|LEAD_ANGLE|VERT_OFFSET)|VERT_DIR_SUPPORTAX_[12])|ON_CHAIN_[1-8]|YL_(?:BASE_TOOL_(?:[12]|COMP_[12])|DEFAULT_MODE_[12]|ROT_(?:AX_(?:FRAME_[12]|OFFSET_[12])|SIGN_IS_PLUS_[12])))|FO(?:_(?:AXES_IN_(?:[1-9]|[1-2][0-9])|CHANGE_M_CODE|GEOAX_ASSIGN_TAB_(?:[1-9]|[1-2][0-9])|INCLUDES_TOOL_(?:[1-9]|[1-2][0-9])|MODE_MASK|RESET_(?:NAME|VALUE)|TYPE_(?:[1-9]|[1-2][0-9]))|5_(?:AXIS(?:1_[1-4]|2_[1-4]|3_[1-4])|BASE_(?:ORIENT_[1-4]|TOOL_[1-4])|JOINT_OFFSET_(?:[1-4]|PART_[1-4])|N(?:ON_POLE_LIMIT_[1-4]|UTATOR_(?:AX_ANGLE_[1-4]|VIRT_ORIAX_[1-4]))|ORIAX_ASSIGN_TAB_[1-4]|P(?:ART_OFFSET_[1-4]|OLE_(?:LIMIT_[1-4]|TOL_[1-4]))|ROT_(?:AX_OFFSET_[1-4]|OFFSET_FROM_FR_[1-4]|SIGN_IS_PLUS_[1-4])|T(?:CARR_NO_[1-4]|OOL_(?:ROT_AX_OFFSET_[1-4]|VECTOR_[1-4])))|6_(?:BASE_ORIENT_NORMAL_[1-4]|JOINT_OFFSET_2_3_[1-4])|7_EXT_(?:AXIS1_[1-4]|ROT_AX_OFFSET_[1-4]))|NSMIT_(?:BASE_TOOL_(?:[12]|COMP_[12])|POLE_SIDE_FIX_[12]|ROT_(?:AX_(?:FRAME_[12]|OFFSET_[12])|SIGN_IS_PLUS_[12]))))|USE(?:KT_RESET_VALUE|R_FRAME_POWERON_MASK)|W(?:AB_(?:CLEARANCE_TOLERANCE|MAXNUM_DUMMY_BLOCKS)|EIGHTING_FACTOR_FOR_SCALE|ORKAREA_WITH_TOOL_RADIUS)|X_AXIS_IN_OLD_X_Z_PLANE|ZERO_CHAIN_(?:ELEM_NAME|NAME))|S_(?:A(?:DJUST_NUM_AXIS_BIG_FONT|XIS_USAG(?:E|E_ATTRIB))|DISP_(?:COORDINATE_SYSTE(?:M|M_2)|NUM_AXIS_BIG_FONT|PLANE_(?:MILL|TURN))|ENABLE_QUICK_M_CODES|FUNCTION_MASK_(?:D(?:IS(?:P|P_ZOA)|RILL)|MILL|T(?:ECH|URN))|GRIND_(?:DIAMETER_LENGTH|FUNCTION_MASK|WIDTH_LENGTH)|ISO_(?:ENABLE_(?:DRYRUN|INTERRUPTS)|M_(?:ENABLE_POLAR_COORD|FUNCTION_MASK)|S(?:CALING_SYSTEM|IMULTAN_AXES_START)|T_(?:DEEPHOLE_DRILL_MODE|FUNCTION_MASK))|J_MEA_(?:FIXPOINT|MAGN_GLAS_POS|T_PROBE_APPR_MODE)|M(?:_CODE_(?:ALL_COOLANTS_OFF|C(?:HUCK_(?:CLOSE|OPE(?:N|N_ROT))|OOLANT_(?:1_(?:AND_2_ON|ON)|2_ON))|TAILSTOCK_(?:BACKWARD|FORWARD))|ACHINE_JOG_INTERRUPT_PRIO|EA_FUNCTION_MASK)|NAME_TOOL_CHANGE_PROG|ORIAXES_EULER_ANGLE_NAME|PROG_COORDINATE_SYS_CHAN|REV_2_BORDER_TOOL_LENGTH|S(?:IM_DISPLAY_CONFIG|TAT_DISPLAY_BASE|UB_SPINDLE_PARK_POS_Y)|T(?:ECHNOLOG(?:Y|Y_EXTENSION)|M_(?:FUNCTION_MASK|MAG_PLACE_DISTANCE|TOOL_(?:LOAD_(?:DEFAULT_MAG|STATION)|MOVE_DEFAULT_MAG))|OOL_(?:CHANGE_POS_Y|MCODE_FUNC_O(?:FF|N))|U(?:_DISPLAY_BASE|RN_TOOL_FIXING))))|M_(?:A(?:C(?:CESS_HMI_EXIT|TI(?:ON_LOG_MODE|VATE_SEL_USER_DATA))|LARM_ROTATION_CYCLE|NIMATION_TIME_DELAY)|C(?:HANGE_LANGUAGE_MODE|MM_(?:DIRECTORY_SOFTKEY_PATH[1-4]|ENABLE_TOOL_MAGAZINE|FIXED_TOOL_PLACE|POS_COORDINATE_SYSTEM|TOOL_(?:DISPLAY_IN_DIAM|L(?:IFE_CONTROL|OAD_STATION)|MANAGEMENT))|TM_(?:MAX_TOOL_WEAR|POS_COORDINATE_SYSTEM))|D(?:ISPLAY_(?:RESOLUTIO(?:N|N_INCH)|SWITCH_OFF_INTERVAL|TYPE)|RV_DIAG_DO_AND_COMP_NAMES)|ENABLE_CHANNEL_MSG_FILTER|HMI_(?:M(?:EM_LIMIT_USER|ONITOR)|WIDE_SCREEN)|KEYBOARD_(?:STATE|TYPE)|L(?:AYOUT_MODE|CD_CONTRAST)|M(?:A_(?:A(?:UXFU_GROUPS|X(?:_DRIVELOAD_FROM_PLC[12]|ES_SHOW_GEO_FIRST))|COORDINATE_SYSTEM|DISPL_INV_DIR_SPIND_M3|MAX_SKP_LEVEL|NUM_DISPLAYED_CHANNELS|ORIAXES_EULER_ANGLE_NAME|PRESET_(?:FRAMEIDX|MODE)|S(?:IMULATION_MODE|PIND_(?:MAX_POWER|POWER_RANGE)|TA(?:ND_SIMULATION_LIMIT|T_DISPLAY_BASE))|TU_DISPLAY_BASE)|D_TEXT_SWITCH)|P(?:LC_SYMBOL_(?:FILTER|HANDLING|SORT)|ROGRAM_SETTINGS)|S(?:ERVE_EXTCALL_PROGRAMS|HOW_(?:CHANNEL_SPANNING_STATE|TOOLTIP)|INUMERIK_INTEGRATE|PIND_DISPLAY_RESOLUTION|TARTUP_LOGO|W_OPTIONS)|T(?:ECHNOLOGY|OOLTIP_TIME_DELAY|RACE)|USE(?:_CHANNEL_DISPLAY_DATA|R_(?:BEGIN_WRITE_RPA_[1-3]|CLASS_(?:BASE_ZERO_OFF_(?:MA|PA)|CLEAR_RPA|DIRECTORY(?:1_[MP]|2_[MP]|3_[MP]|4_[MP])|OVERSTORE_HIGH|PRESET|READ_(?:GUD_LUD|TOA)|S(?:ELECT_PROGRAM|YS_ZERO_OFF)|TEACH_IN|WRITE_(?:FINE|MAG_WGROUP|PRG_CONDIT|RP(?:A|A_[1-3])|SEA|TOA_(?:A(?:DAPT|SSDNO)|EC|GEO|NAME|S(?:C|UPVIS)|TYPE|WEAR)|ZOA))|END_WRITE_RPA_[1-3]|WRITE_(?:CYCFRAME|EXTFRAME|PARTFRAME|T(?:OOLFRAME|RAFRAME)|WPFRAME)))|WRITE_(?:TOA_(?:FINE_LIMIT|LIMIT_MASK)|ZOA_FINE_LIMIT))|N(?:_(?:A(?:CCESS_(?:EXEC_C(?:MA|ST|US)|WRITE_(?:C(?:MA|ST|US)|MACCESS|SACCESS|UACCESS))|LARM_(?:CLR_NCSTART_W_CANCEL|PAR_DISPLAY_TEXT|REACTION_CHAN_NOREADY)|S(?:SIGN_CHAN_TO_MODE_GROUP|UP_(?:EDIT(?:_PROTECTION_LEVEL|ABLE)|START_(?:MASK|PRIO_LEVEL)))|U(?:TOMATIC_MEM_RECONFIG_FILE|XFU_(?:GROUP_SPEC|MAXNUM_GROUP_ASSIGN))|X(?:C(?:HANGE_MASK|ONF_(?:LOGIC_MACHAX_TAB|MACHAX_NAME_TAB)|T_(?:AXCONF_ASSIGN_TAB(?:[1-9]|1[0-6])|FUNCTION_MASK|NAME_TAB))|IS_VAR_SERVER_SENSITIVE))|BAG_MASK|C(?:C(?:_(?:ASSIGN_FASTOUT_MASK|T(?:DA_PARAM_UNIT|OA_PARAM_UNIT)|V(?:DI_(?:IN_DATA|OUT_DATA)|ERSION_INFO))|S_T(?:DA_PARAM_UNIT|OA_PARAM_UNIT))|ENTRAL_LUBRICATION|HAMFER_NAME|O(?:LLISION_(?:CONFIG|INIT|SAFETY_DIST|TOLERANCE)|M(?:_(?:CONFIGURATION|IPO_(?:STRATEGY|TIME_RATIO)|TIMING)|PAR_(?:ASSIGN_ANA_INPUT_[12]|TYPE_[12]))|N(?:T(?:OUR(?:_(?:DEF_ANGLE_NAME|SAMPLING_FACTOR)|HANDWH_IMP_PER_LATCH)|ROL_UNIT_LOGIC_ADDRESS)|VERT_SCALING_SYSTEM)|REFILE_NAME|UPLE_CYCLE_MASK)|TRLOUT_LEAD_TIM(?:E|E_MAX)|YCLES_ONLY_IN_CYCDIR)|D(?:_NO_FCT_CYCLE_NAME|E(?:FAULT_VALUES_MEM_MASK|PTH_OF_LOGFILE_OP(?:T|T_PF))|I(?:R_VECTOR_NAME_TAB|SPLAY_(?:FUNCTION_MASK|MODE_POSITION))|PIO_(?:LOGIC_ADDRESS_(?:IN|OUT)|RANGE_(?:ATTRIBUTE_(?:IN|OUT)|LENGTH_(?:IN|OUT)))|R(?:A(?:M_FILESYST(?:_(?:CONFIG|SAVE_MASK)|EM_MASK)|W_POS_TRIGGER_TIME)|IVE_(?:DIAGNOSIS|FUNCTION_MASK|I(?:NVERTER_CODE|S_ACTIVE)|LOGIC_(?:ADDRESS|NR)|MODULE_TYPE|T(?:ELEGRAM_TYPE|YP(?:E|E_DP)))|YRUN_MASK))|E(?:ES_(?:LOCAL_ENABLE|M(?:AX_MOUNT_TIME|O(?:DE_INFO|UNT_FILE))|NC_NAME|WRITE_SIM_WORKPATH)|N(?:ABLE_(?:ALARM_MASK|CHAN_AX_GAP)|C_HANDWHEEL_(?:INPUT_NR|MODULE_NR|SEGMENT_NR))|ULER_ANGLE_NAME_TAB|XTE(?:NSIONS_OF_BIN_FILES|RN_(?:C(?:HAN_SYNC_M_NO_M(?:AX|IN)|NC_SYSTEM)|D(?:IGITS_(?:OFFSET_NO|TOOL_NO)|OUBLE_TURRET_ON)|FLOATINGPOINT_PROG|G_NO_MAC_CYCL(?:E|E_NAME)|IN(?:CREMENT_SYSTEM|TERRUPT_(?:BITS_M96|NUM_(?:ASUP|RETRAC)))|LANGUAGE|M(?:_NO_(?:DISABLE_INT|MAC_CYCL(?:E|E_NAME)|SET_INT)|EAS_G31_P_SIGNAL)|PRINT_(?:DEVICE|MODE)|TOOLPROG_MODE)))|F(?:ASTIO_(?:ANA_(?:INPUT_WEIGHT|NUM_(?:INPUTS|OUTPUTS)|OUTPUT_WEIGHT)|DIG_(?:NUM_(?:INPUTS|OUTPUTS)|SHORT_CIRCUIT))|ILE_ONLY_WITH_EXTENSION|RAME_(?:ANGLE_INPUT_MODE|GEOAX_CHANGE_MODE|SAVE_MASK))|G(?:53_TOOLCORR|EAR_CHANGE_WAIT_TIME|MMC_INFO_NO_UNI(?:T|T_STATUS)|UD_AREA_SAVE_TAB)|H(?:ANDWH(?:_(?:IMP_PER_LATCH|REVERSE|TRUE_DISTANCE|VDI_REPRESENTATION)|EEL_(?:FILTER_TIME|INPUT|LOGIC_ADDRESS|MODULE|SEGMENT))|W_(?:ASSIGN_(?:ANA_FAST(?:IN|OUT)|DIG_FAST(?:IN|OUT))|CLOCKED_MODULE_MASK|LEAD_TIME_FASTIO|SERIAL_NUMBER|UPDATE_RATE_FASTIO))|I(?:GNORE_SINGLEBLOCK_MASK|N(?:DEX_AX_(?:LENGTH_POS_TAB_[12]|MODE|POS_TAB_[12])|FO_(?:CROSSCHECK_CYCLE_TIME|FREE_MEM_(?:CC_MD|D(?:PR|YNAMIC)|STATIC)|NUM_SAFE_FILE_ACCESS|PROFISAFE_CYCLE_TIME|SAFE(?:_SRDP_CYCLE_TIME|TY_CYCLE_TIME))|I(?:_FILE_MODE|T_MD)|T(?:_INCR_PER_(?:DEG|MM)|ER(?:_VECTOR_NAME_TAB|MEDIATE_POINT_NAME_TAB)))|PO_(?:CYCLE_TIME|MAX_LOAD|PARAM_(?:NAME_TAB|THREAD_NAME_TAB)|SYSCLOCK_TIME_RATIO)|S(?:_(?:AUTOMATIC_MEM_RECONFIG|CONTINOUS_DATA_SAVE_ON)|O_SCALING_SYSTEM))|JOG_(?:INC(?:_MODE_LEVELTRIGGRD|R_SIZE_TAB)|MODE_(?:KEYS_EDGETRIGGRD|MASK))|L(?:ANG_SUB_(?:NAME|PATH)|EN_PROTOCOL_FILE|INK_(?:BAUDRATE_SWITCH|DYNMSG_ALARM_MASK|LIFECYCLE_MAX_LOOP|RETRY_CTR|TERMINATION)|UD_EXTENDED_SCOPE)|M(?:_NO_FCT_(?:CYCL(?:E|E_(?:NAME|PAR))|EOP|STOPRE)|A(?:CH(?:_MODEL_MODE|GEN_DEBUG_MASK)|PPED_FRAME_MASK|X(?:_(?:CUTTING_EDGE_(?:NO|PER_TOOL)|SUMCORR_PER(?:_CUTT(?:EDGE|ING_EDGE)|CUTTING_EDGE)|TOOLS_PER_MULTITOOL)|NUM_(?:REPLACEMENT_TOOLS|USER_DATA_(?:FLOAT|HEX|INT))))|D_(?:FILE_STYLE|MODE_MASK)|EAS_(?:CENTRAL_SOURCE|PROBE_(?:DELAY_TIME|LOW_ACTIVE|OFFSET|SOURCE)|TYPE)|I(?:N_CONTOUR_SAMPLING_TIME|RROR_(?:REF_AX|TOGGLE))|M(?:_(?:ACTFILESYS_LOG_FILE_MEM|C(?:C_(?:MD_MEM_SIZE|STATION_CHAN_MASK)|EC_MAX_POINTS|HAN_HASH_TABLE_SIZE|OM_(?:COMPRESS_METHOD|TASK_STACK_SIZE)|YC_DATA_MEM_SIZE)|D(?:IR_HASH_TABLE_SIZE|R(?:AM_FILE_MEM_SIZE|IVE_TASK_STACK_SIZE))|E(?:_FILE_MEM_SIZE|ES_(?:BUFFER_SIZE|ENABLE|FILE_MEM_SIZE|NUM_BUFFERS)|NABLE_TOOL_ORIENT|PSPARAM_DIMENSION|XT(?:_PROG_(?:BUFFER_SIZE|NUM)|COM_TASK_STACK_SIZE|ERN_(?:CNC_SYSTEM|GCODE_SYSTEM|LANGUAGE|MAXNUM_OEM_GCODES)))|F(?:ILE_HASH_TABLE_SIZE|LASH(?:_FILE_SYSTEM_SIZE|FILESYS_MEM)|RAME_FINE_TRANS)|G(?:FRAME_FINE_TRANS|UD_VALUES_MEM)|I(?:NCOA_MEM_SIZE|PO_TASK_STACK_SIZE)|KIND_OF_SUMCORR|L(?:INK_(?:NUM_OF_MODULES|TOA_UNIT)|UD_HASH_TABLE_SIZE)|M(?:_FILE_MEM_SIZE|A(?:INTENANCE_MON|X(?:_(?:CUTTING_EDGE_(?:NO|PERTOOL)|HIERARCHY_ENTRIES|NUM_OF_HIERARCHIES|S(?:IZE_OF_LUD_VALUE|UMCORR_PER_CUTTEDGE)|TRACE_LINK_POINTS)|NUM_(?:3D_(?:COLL(?:_PAIRS|ISION)|FACET(?:S|S_INTERN)|INT(?:ERFACE_IN|RERFACE_IN)|PROT_(?:AREA(?:_ELEM|S)|GROUPS)|T_PROT_ELEM|WPFX_PROT_ELEM)|ALARM_ACTIONS|KIN_(?:CHAIN(?:_ELEM|S)|SWITCHES))))|EMORY_CONFIG_MASK)|N(?:C(?:K_HASH_TABLE_SIZE|U_LINK_MASK)|UM_(?:A(?:C_TIMER|N_TIMER)|C(?:C(?:_(?:M(?:AG(?:AZINE_PARAM|LOC_PARAM)|ON_PARAM|TLOC_PARAM|ULTITOOL_PARAM)|T(?:DA_PARAM|OA_PARAM))|S_(?:M(?:AG(?:AZINE_PARAM|LOC_PARAM)|ON_PARAM|TLOC_PARAM|ULTITOOL_PARAM)|T(?:DA_PARAM|OA_PARAM)))|P_MODUL(?:_LEAD|ES)|U(?:RVE_(?:POLYNOM(?:S|S_DRAM)|SEG(?:_LI(?:N|N_DRAM)|MENT(?:S|S_DRAM))|TAB(?:S|S_DRAM))|TTING_EDGES_IN_TOA))|D(?:I(?:R_IN_FILESYSTEM|ST_REL_PER_MAGLOC)|RS_GRINDING_PATHS)|FILES_(?:IN_FILESYSTEM|PER_DIR)|G(?:LOBAL_(?:BASE_FRAMES|G_FRAMES|USER_FRAMES)|UD_(?:MODULES|NAMES_(?:CHAN|NCK)))|KIN_TRAFOS|LOCS_WITH_DISTANCE|M(?:A(?:GAZIN(?:E|E_LOCATION)|X_FUNC_(?:NAMES|PARAM))|MC_UNITS|ULTITOO(?:L|L_LOCATIONS))|PROTECT_AREA_NCK|R_PARAM_NCK|S(?:U(?:BDIR_PER_DIR|MCORR)|Y(?:NACT_GUD_(?:AXIS|BOOL|CHAR|INT|REAL|STRING)|STEM_FILES_IN_FS))|T(?:OO(?:L|L(?:_(?:ADAPTER|CARRIER|ENV)|HOLDERS))|RAFO_DATA_SETS)|USER_MACROS))|P(?:LC(?:_TASK_STACK_SIZE|BG_TASK_STACK_SIZE|INT_TASK_STACK_SIZE)|ROTOC_(?:FILE_BUFFER_SIZE|NUM_(?:ETPD_(?:OEM_LIST|STD_LIST)|FILES|SERVO_DATA)|SESS_ENAB_USER))|S(?:_FILE_MEM_SIZE|ERVO_(?:FIFO_SIZE|TASK_STACK_SIZE)|IZEOF_LINKVAR_DATA)|T(?:_FILE_MEM_SIZE|OOL_MANAGEMENT_(?:MASK|TRACE_SZ)|RACE_(?:LINK_DATA_FUNCTION|VDI_SIGNAL)|YPE_(?:CC(?:_(?:M(?:AG(?:AZINE_PARAM|LOC_PARAM)|ON_PARAM|TLOC_PARAM|ULTITOOL_PARAM)|T(?:DA_PARAM|OA_PARAM))|S_(?:M(?:AG(?:AZINE_PARAM|LOC_PARAM)|ON_PARAM|TLOC_PARAM|ULTITOOL_PARAM)|T(?:DA_PARAM|OA_PARAM)))|OF_CUTTING_EDGE))|U(?:_FILE_MEM_SIZE|SER_(?:FILE_MEM_MINIMUM|MEM_(?:BUFFERE(?:D|D_TYPEOF)|D(?:PR|YNAMIC)))))|C_CMD_TIMEOUT|TOOL_MANAGEMENT_MASK)|ONITOR_(?:ADDRESS|DISPLAY_(?:INT|REAL)|INPUT_(?:INT|REAL|STROBE)))|N(?:C(?:_(?:LANGUAGE_CONFIGURATION|SYS_CODE_CONF_NAME_TAB|USER_(?:CODE_CONF_NAME_TAB|EXTERN_GCODES_TAB))|BFRAME_(?:POWERON_MASK|RESET_MASK)|K_(?:EG_FUNCTION_MASK|LEAD_FUNCTION_MASK|PCOS_TIME_RATIO|TRAIL_FUNCTION_MASK)|U_LINK(?:_CONNECTIONS|NO))|ORMAL_VECTOR_NAME_TAB|U(?:M_EG|TATION_ANGLE_NAME))|O(?:EM_GLOBAL_INFO|PERATING_MODE_(?:DEFAULT|EXTENDED)|RI(?:ENTATION_NAME_TAB|PATH_LIFT_(?:FACTOR_NAME|VECTOR_TAB))|SCILL_MODE_MASK|VR_(?:AX_IS_GRAY_CODE|F(?:ACTOR_(?:AX_SPEED|FEEDRATE|LIMIT_BIN|RAPID_TRA|SPIND_SPEED)|EED_IS_GRAY_CODE|UNCTION_MASK)|R(?:APID_IS_GRAY_CODE|EFERENCE_IS_(?:MIN_FEED|PROG_FEED))|SPIND_IS_GRAY_CODE))|P(?:ERM(?:ANENT_(?:FEED|ROT_AX_FEED|SPINDLE_FEED)|ISSIVE_FLASH_TAB)|LC(?:_(?:ANA_(?:IN_(?:LOGIC_ADDRESS|NUM)|OUT_(?:LOGIC_ADDRESS|NUM))|CYCL(?:E_TIM(?:E|E_AVERAGE)|IC_TIMEOUT)|DIG_(?:IN_(?:LOGIC_ADDRESS|NUM)|OUT_(?:LOGIC_ADDRESS|NUM))|IPO_TIME_RATIO|OB(?:1_TRACE_DEPTH|35_TRACE_DEPTH|40_TRACE_DEPTH)|RUNNINGUP_TIMEOUT)|I(?:NTERN_LOGIC_ADDRESS_(?:IN|OUT)|O_(?:IN_UPDATE_TIME|LOGIC_ADDRESS_(?:IN|OUT)|NUM_BYTES_(?:IN|OUT)|TYPE_REPRESENTATION)))|O(?:_WITHOUT_POLY|S(?:_(?:DYN_MODE|TAB_SCALING_SYSTEM)|CTRL_(?:CYCLE_(?:D(?:E(?:LAY|SVAL_DELAY)|IAGNOSIS)|TIME)|DESVAL_DELAY|SYSCLOCK_TIME_RATIO)))|R(?:E(?:P(?:_(?:COM_TASK_CYCLE_RATIO|DRIVE_TASK_CYCLE_RATIO)|ROCESSING_LEVEL)|VENT_SYNACT_LOCK)|O(?:FI(?:BUS_(?:ALARM_ACCESS|SHUTDOWN_TYPE|TRACE_(?:ADDRESS|FILE_SIZE|STAR(?:T|T_EVENT)|TYPE))|SAFE_(?:I(?:N_(?:A(?:DDRESS|SSIGN)|ENABLE_MASK|FILTER|NAME|SUB(?:S|S_ENAB_MASK))|PO_(?:RESERVE|TIME_RATIO))|MASTER_ADDRESS|OUT_(?:A(?:DDRESS|SSIGN)|ENABLE_MASK|FILTER|NAME)))|G_(?:EVENT_(?:NAME|PATH)|FUNCTION_MASK|SD_(?:POWERON_INIT_TAB|RESET_SAVE_TAB)|TEST_MASK)|T(?:_AREA_(?:3D_TYPE_NAME_TAB|TOOL_MASK)|AREA_GEOAX_CHANGE_MODE|OC(?:_(?:FILE_MEM|IPOCYCLE_CONTROL|PREPTIME_CONTROL)|OL_FILE_MODE)))))|R(?:_PARAM_NCK_NAME|ADIUS_NAME|E(?:BOOT_DELAY_TIME|LEASE_PREP_CPU_POWER|POS_MODE_MASK)|O(?:OT_KIN_ELEM_NAME|T_VECTOR_NAME_TAB)|UN_OVERRIDE_0)|S(?:AFE(?:_(?:ALARM_SUPPRESS_LEVEL|D(?:IAGNOSIS_MASK|RIVE_LOGIC_ADDRESS)|GLOB_(?:ACT_CHECKSUM|CFG_CHANGE_DATE|DES_CHECKSUM|PREV_CONFIG)|IN(?:_HW_ASSIGN|FO_(?:DRIVE_LOGIC_ADDR|TELEGRAM_TYPE))|MOD(?:E|E_MASK)|OUT_HW_ASSIGN|P(?:S_DRIVE_LOGIC_ADDR|ULSE_DIS_TIME_BUSFAIL)|RDP_(?:ASSIGN|CONNECTION_NR|E(?:NABLE_MASK|RR_REAC)|FILTER|ID|LADDR|NAME|SUBS|TIMEOUT)|S(?:DP_(?:ASSIGN|CONNECTION_NR|E(?:NABLE_MASK|RR_REAC)|FILTER|ID|LADDR|NAME|TIMEOUT)|PL_(?:ST(?:ART_TIMEOUT|OP_MODE)|USER_DATA)|RDP_IPO_TIME_RATIO))|TY_SYSCLOCK_TIME_RATIO)|CALING_(?:FACTORS_USER_DEF|SYSTEM_IS_METRIC|USER_DEF_MASK|VALUE_INCH)|E(?:ARCH_RUN_MODE|RUPRO_MASK)|I(?:EM_TRACEFILES_CONFIG|M_ENVIRONMENT|NAMICS_(?:ALARM_MASK|MAX_SLAVE_ADDRESS))|LASH_MASK|PRINT_FORMAT_P_(?:CODE|DECIMAL)|T(?:A(?:RT_LOCK_TIMEOUT|T_NAME)|OP_MODE_MASK)|UPPRESS_(?:ALARM_MAS(?:K|K_2)|SCREEN_REFRESH)|W_CAM_(?:ASSIGN_(?:FASTOUT_[1-4]|TAB)|COMP_NCK_JITTER|M(?:INUS_LEAD_TIME|ODE)|PLUS_LEAD_TIME|TIMER_FASTOUT_MASK)|YSCLOCK_(?:CYCLE_TIME|SAMPL_TIME_RATIO))|T(?:_NO_FCT_CYCLE_(?:MODE|NAME)|ASK_(?:SLEEP_TIME|TIME_AVERAGE_CONFIG)|C(?:A_CYCLE_NAME|I_TRACE_ACTIVE)|IME(?:_LIMIT_NETTO_(?:COM_TASK|DRIVE_TASK|PLCBG_TASK)|OUT_LINK_COMMUNICATION)|M_FUNCTION_MASK|OOL(?:_(?:CHANGE_(?:M_CODE|TIME)|D(?:ATA_CHANGE_COUNTER|EFAULT_DATA_MASK)|MANAGEMENT_(?:MASK|TRACE_BUFFER_SZ)|RESETMON_MASK|UNLOAD_MASK)|TYPES_ALLOWED)|RACE_SELECT|U_NAME)|U(?:NLOCK_EDIT_MODESWITCH|PLOAD_(?:CHANGES_ONLY|MD_CHANGES_ONLY)|SER_(?:DATA_(?:FLOAT|HEX|INT|PLC_ALARM)|MEM_BUFFERED_TYPEOF))|V(?:DI_(?:FUNCTION_MASK|UPDATE_IN_ONE_IPO_CYCLE)|ERSION_INFO)|W(?:ALIM_GEOAX_CHANGE_MODE|PD_INI_MODE))|S_(?:A(?:C(?:CESS_(?:ACTIVATE_CTRL_E|C(?:AL_TOOL_PROBE|LEAR_RPA)|EDIT_CTRL_E|RE(?:AD_(?:GUD_LUD|T(?:M|M_ALL_PARAM))|SET_SERV_PLANNER)|S(?:ET_(?:ACT_VALUE|SOFTKEY_ACCESS)|HOW_SBL2)|T(?:EACH_IN|M_(?:MAGAZINE_POS|TOOL(?:_(?:CREATE|DELETE|LOAD|M(?:EASURE|OVE)|REACTIVATE|UNLOAD)|EDGE_(?:CREATE|DELETE))))|WRITE_(?:BASEFRAME|C(?:A_(?:MACH_(?:AUTO|JOG)|TOOL)|YCFRAME)|EXTFRAME|FINE|GUD_LUD|P(?:ARTFRAME|R(?:G_COND|OG(?:LIST|RAM)))|RPA|SE(?:A|TFRAME)|T(?:M_(?:A(?:DAPT|LL_PARAM|SSDNO)|EC|G(?:EO|RIND)|NAME|S(?:C|UPVIS)|TYPE|W(?:EA(?:R|R_DELTA)|GROUP))|OOLFRAME|RAFRAME)|USERFRAME|WPFRAME))|T_VALUE_SPIND_MODE)|XES_SHOW_GEO_FIRST)|BLOCK_SEARCH_MODE_MAS(?:K|K_JS)|DISP_RES_(?:ANGLE|INC(?:H|H_(?:CUT_RATE|FEED_P_(?:REV|T(?:IME|OOTH))))|M(?:M|M_(?:CONST_CUT_RATE|FEED_PER_(?:REV|T(?:IME|OOTH))))|ROT_(?:AX_FEED|WO)|SPINDLE)|ENABLE_(?:COORDINATE_(?:ACS|REL)|GSM_MODEM|HANDWHEEL_WINDOW|PROGLIST_(?:MANUFACT|USER))|F(?:RAMES_ACT_IMMEDIATELY|UNCTION_MASK_(?:SIM|TECH))|GRIND_FUNCTION_MASK|J_MEA_(?:C(?:AL_(?:HEIGHT_FEEDAX|RING_DIAM)|OLL_MONIT_(?:FEED|POS_FEED))|M_DIS(?:T|T_(?:MANUELL|TOOL_(?:LENGTH|RADIUS)))|T_PROBE_(?:APPR_AX_DIR|DIAM_RAD|MEASURE_DIST))|M(?:AX(?:_SKP_LEVEL|NUM_WAITM_USER)|EA_(?:ACCESS_EXEC|C(?:AL_(?:EDGE_NUM|TP(?:_NUM|W_NUM)|WP_NUM)|M_ROT_AX_POS_TOL)|FUNCTION_MASK|PROBE_LENGTH_RELATE|T_PROBE_(?:DIAM_LENGTH|THICKNESS)))|NUM_DISPLAYED_CHANNELS|O(?:NLY_MKS_DIST_TO_GO|RDER_DISPLAYED_CHANNELS)|PROGRAM_CONTROL_MODE_MASK|S(?:ET_ACT_VALUE|PIND_(?:DRIVELOAD_FROM_PLC[12]|MAX_POWER|POWER_RANGE)|TAT_DISPLAY_BASE|WITCH_TO_MACHINE_MASK)|T(?:EACH_MODE|M_WRITE_(?:LIMIT_MASK|WEAR_(?:ABS_LIMIT|DELTA_LIMIT))|U_DISPLAY_BASE)|WRITE_FRAMES_FINE_LIMIT)))|O(?:C_LOOKAH_NUM_CHECKED_BLOCKS|N_(?:A(?:SUP_MASK|X(?:CNT|IS_FUNCTION_MASK))|CO(?:LL(?:CHECK_LEVEL|ISION_MASK)|MP_MASK)|DRIVE_(?:CNT|EXTENSION_MASK|MASK)|E(?:LEC_TRANSFE(?:R|R_CP)|XTERN_LANGUAGE)|FFW_MODE_MASK|H(?:ANDLING|MI_(?:FUNCTION_MASK|MASK))|IPO_FUNCTION_MASK|NUM_(?:A(?:DD_AXES_IN_SYSTEM|XES_IN_SYSTEM)|CHANNELS|DRIVEBASED_SAFE_AXES|IPO_AXES|L(?:EAD_LINK_AXES|INK_AXES)|MODE_GROUPS|PLC_CTRL_AXES|S(?:AFE_AXES|PL_IO))|P(?:L(?:ASTIC|C_(?:C_USER_MEM_SIZE|USER_MEM_SIZE))|RO(?:FIBUS|G_MASK))|S(?:AFE_(?:FUNCTION_MASK|PLC_LOGIC)|I(?:MODRIVE_FUNCTION_MASK|NAMICS_FUNCTION_MASK)|YSTEM_(?:FUNCTION_MASK|INFO))|T(?:ECHNO_(?:EXTENSION_MASK|FUNCTION_MAS(?:K|K_1))|RAFO_TYPE_MASK)|USER_MEM_(?:BUFFERED|DYNAMIC)))|S(?:A_(?:A(?:A_OFF_LIMIT|DISPOSA_VALUE|SSIGN_FEED_PER_REV_SOURCE)|DEFAULT_(?:ROT_FACTOR_R|SCALE_FACTOR_AXIS)|EXTERN_REF_POSITION_G30_1|FIXED_STOP_(?:SWITCH|TORQUE|WINDOW)|IPOBRAKE_BLOCK_EXCHANGE|JOG_POSITION|LEAD_(?:OFFSET_(?:IN_POS|OUT_POS)|SCALE_(?:IN_POS|OUT_POS)|TYPE)|M(?:19_SPO(?:S|SMODE)|D(?:B_WORKAREA_(?:MINUS_ENABLE|PLUS_ENABLE)|D_(?:SPIND_M(?:AX_VELO_(?:G26|LIMS)|IN_VELO_G25)|WORKAREA_LIMIT_(?:MINUS|PLUS))))|OSCILL_(?:CTRL_MASK|DWELL_TIME[12]|END_POS|IS_ACTIVE|NUM_SPARK_CYCLES|REVERSE_POS[12]|START_POS|VELO)|PUNCH_DWELLTIME|SPIND_(?:ASSIGN_TAB|CONSTCUT_S|M(?:AX_VELO_(?:G26|LIMS)|IN_VELO_G25)|S|SPEED_TYPE|USER_VELO_LIMIT)|TEMP_COMP_(?:ABS_VALUE|REF_POSITION|SLOPE)|WORKAREA_(?:LIMIT_(?:MINUS|PLUS)|MINUS_ENABLE|PLUS_ENABLE))|C(?:_(?:A(?:BSBLOCK_ENABLE|CTNUM_SURF_GROUPS|PPROACH_FEED|X_ADJUST_FEED)|C(?:ART_JOG_MODE|O(?:MPRESS_(?:CONTUR_TOL|ORI_(?:ROT_TOL|TOL))|N(?:E_ANGLE|TPREC)|RNER_SLOWDOWN_(?:CRIT|END|OVR|START)|UPLE_RATIO_1)|RIT_SPLINE_ANGLE|UT(?:COM_(?:ACT_DEACT_CTRL|CLSD_CONT|DECEL_LIMIT|G40_STOPRE)|DIRMOD|MOD_PLANE_TOL))|D(?:EFAULT_(?:FEED|ROT_FACTOR_R|SCALE_FACTOR_P)|RY_RUN_FEE(?:D|D_MODE))|EXT(?:_PROG_PATH|ERN_(?:DOUBLE_TURRET_DIS(?:T|TANCE)|FIXED_FEEDRATE_F1_F9))|FRAME_OFFSET_INCR_PROG|IS_SD_MAX_PATH_(?:ACCEL|JERK)|JOG_(?:CIRCLE_(?:CENTRE|END_ANGLE|MODE|RADIUS|START_ANGLE)|FEED_PER_REV_SOURCE|GEOAX_MODE_MASK)|M(?:AX_BLOCKS_IN_IPOBUFFER|DD_(?:DRY_RUN_FEED|THREAD_START_ANGLE)|I(?:N(?:_(?:CURV_RADIUS|SURF_RADIUS)|FEED|TIME_BETWEEN_STROKES)|RROR_TOOL_(?:LENGTH|WEAR)))|NIBPUNCH_PRE_START_TIME|O(?:FF_ORI_LIMIT|RI(?:_(?:JOG_MODE|SMOOTH_(?:DIST|TOL))|PATH_SMOOTH_(?:DIST|TOL)|SO(?:LH_INCLINE_TOL|N_(?:DIST|TOL)))|VR_RAPID_FACTOR)|P(?:A_(?:ACTIV_IMMED|CONT_(?:ABS|NUM|ORD|TYP)|LIM_3DIM|MINUS_LIM|ORI|PLUS_LIM|T_W)|UNCH_DWELLTIME)|S(?:D_MAX_PATH_(?:ACCEL|JERK)|ERUPRO_SYNC_MASK|INGLEBLOCK2_STOPRE|MOOTH_(?:CONTUR_TOL|ORI_TOL)|PIND_ASSIGN_TAB|TOP_CUTCOM_STOPRE|URF_SMOOTHING_LEVEL)|T(?:ARGET_BLOCK_INCR_PROG|HREAD_(?:RAMP_DISP|START_ANGLE)|O(?:CARR_FINE_CORRECTION|F(?:F_LIMI(?:T|T_MINUS)|RAME_MODE)|OL_(?:LENGTH_(?:CONS(?:T|T_T)|TYPE)|O(?:FFSET_INCR_PROG|RI_CONST_[MT])|TEMP_COMP)))|WEAR_(?:SIG(?:N|N_CUTPOS)|TRANSFORM))|S_(?:AST_MMC(?:_NEWCONF_HANDSHAKE|A)|CIRCLE_RAPID_FEED|DRILL_(?:MID_MAX_ECCENT|SPOT_DIST|TAPPING_SET_(?:GG[1-2]?[0-9]|MC))|EASY_(?:D(?:RILL_DEEP_(?:DF|FD1|V[12])|WELL_TIME)|SAFETY_CLEARANCE|THREAD_RETURN_DIST)|F(?:RICT_OPT_(?:ACT_STEP|DIR_MINUS|FEE(?:D|D_ROT)|RADIU(?:S|S_ROT)|STEP)|UNCTION_MASK_(?:DRILL_SET|MILL_(?:SET|TOL_SET)|SWIVEL_SET|T(?:ECH_SET|URN_SET)))|GRIND_(?:CONT_(?:BLANK_OFFSET|RELEASE_(?:ANGLE|DIST))|MEA_KIN_TOL)|ISO_(?:M_(?:DRILLING_(?:AXIS_IS_Z|TYPE)|FUNCTION_MASK|RETRACTION_(?:DIR|FACTOR)|TAPPING_SET_MC)|T_(?:DWELL_TIME_UNIT|FUNCTION_MASK|RETRACTION_FACTOR))|J_MEA_PROTOCOL_FILE|M(?:A(?:JOG_(?:RELEASE_PLANE|SAFETY_CLEARANCE)|X_INP_FEED_PER_(?:REV|T(?:IME|OOTH)))|EA_(?:AVERAGE_VALU(?:E|E_NUM)|E(?:DGE_SAVE_ANG|MPIRIC_VALU(?:E|E_NUM))|F(?:EED_(?:CIRCLE|F(?:AST_MEASURE|EEDAX_VALUE)|MEASUR(?:E|E_DEG)|P(?:LANE_VALUE|OS_DEG)|RAPID_IN_PERCENT)|UNCTION_MASK)|KIN_(?:BALL_VEC|DM_TOL|M(?:IN_ANG_(?:POS|TRIANGLE)|ODE)|VALUE)|PROTOCOL_USER_EXT|RESULT_(?:DISPLAY|MRD)|SIM_(?:ENABLE|MEASURE_DIFF)|TP_FEED_MEASURE)|ILL_(?:CONT_INITIAL_RAD_FIN|ENGRAVE_POINT_RAD|SWIVEL_(?:ALARM_MASK|RESET_(?:MODE|RETRACT|TRACK))|TOL_(?:FACTOR_(?:FINISH|NORM|ROUGH|SEMIFIN)|VALUE_(?:FINISH|NORM|ROUGH|SEMIFIN))))|SUB_SPINDLE_REL_POS|TURN_(?:CONT_(?:BLANK_OFFSET|INTER(?:_RETRACTION|RUPT_TIME)|MIN_REST_MAT_AX[12]|RELEASE_(?:ANGLE|DIST)|T(?:OOL_BEND_RETR|RACE_ANGLE|URN_RETRACTION)|VARIABLE_DEPTH)|FI(?:N_FEED_PERCENT|XED_STOP_(?:DIST|F(?:EED|ORCE)|RETRACTION))|GROOVE_DWELL_TIME|PART_OFF_(?:CTRL_(?:DIST|F(?:EED|ORCE))|RETRACTION)|ROUGH_(?:I_RELEASE_DIST|O_RELEASE_DIST))))|N(?:_(?:AXCT_SWWIDTH|C(?:EC_(?:[01]|BAS_(?:[01]|STORE_[01])|C(?:AL(?:C|C_ADD)|OMP_(?:[01]|STORE_[01]))|TABLE_(?:ENABLE|WEIGHT))|O(?:MPAR_THRESHOLD_[12]|RR_TRAFO_(?:DIR_MAX|LIN_MAX)))|JOG_(?:CONT_MODE_LEVELTRIGGRD|R(?:EV_(?:IS_ACTIVE|SET_VELO)|OT_AX_SET_VELO)|S(?:ET_VELO|PIND_SET_VELO)|VAR_INCR_SIZE)|MD(?:B_JOG_(?:CONT_MODE_LEVELTRIGGRD|REV_IS_ACTIVE)|D_JOG_(?:REV_SET_VELO|S(?:ET_VELO|PIND_SET_VELO)|VAR_INCR_SIZE))|PA_(?:ACTIV_IMMED|C(?:ENT_(?:ABS|ORD)|ONT_(?:ABS|NUM|ORD|TYP))|LIM_3DIM|MINUS_LIM|ORI|PLUS_LIM|T_W)|SW_CAM_(?:MINUS_(?:POS_TAB_[1-4]|TIME_TAB_[1-4])|PLUS_(?:POS_TAB_[1-4]|TIME_TAB_[1-4])))|S_(?:AST_MMC_(?:DEFAULT_IS_PCU|HANDLER_NAME)|J_MEA_FUNCTION_MASK_(?:PIECE|TOOL)|MEA_(?:ALARM_MASK|C(?:AL_EDGE_(?:BASE_AX[12]|MINUS_DIR_AX[12]|PLUS_DIR_AX[12]|UPPER_AX2)|M_(?:FEEDFACTOR_[12]|M(?:AX_(?:FEEDRATE|PERI_SPEED|REVOLUTIONS)|EASURING_ACCURACY|IN_FEEDRATE)|SPIND_ROT_DIR))|FUNCTION_MAS(?:K|K_(?:PIECE|T(?:OOL|URN)))|INPUT_TOOL_PROBE_SUB|RESULT_OFFSET_TAB_(?:LEN[1-6]|RAD[1-6])|T(?:_(?:CIRCULAR_ARC_DIST|MAX_STEPS|PROBE_(?:ALLOW_AX_DIR|MANUFACTURER|OFFSET))|P(?:_(?:AX_DIR_AUTO_CAL|CAL_MEASURE_DEPTH|EDGE_DISK_SIZE|FEED|STATUS_GEN|T(?:RIG_(?:MINUS_DIR_AX[1-3]|PLUS_DIR_AX[1-3])|YPE))|W_(?:AX_DIR_AUTO_CAL|CAL_MEASURE_DEPTH|EDGE_DISK_SIZE|FEED|STATUS_GEN|T(?:RIG_(?:MINUS_DIR_AX[1-3]|PLUS_DIR_AX[1-3])|YPE))))|WP_(?:BALL_DIAM|FEED|POS_DEV_AX[12]|STATUS_(?:GEN|RT)|TRIG_(?:MINUS_DIR_AX[1-3]|PLUS_DIR_AX[1-3])))|TM_FUNCTION_MASK_SET))))\b'
          scope: support.variable.machdata.s840d
          pop: true
        # SINUMERIK nc variables
        - match: '\${1,2}(?i:A(?:_(?:CMDSI|D(?:AY|B(?:[BDRWX]?|S[BW])|EFAULT_SCALE_FACTOR_AXIS|L[BDRWX]|NO|P(?:_(?:IN_(?:CONF|LENGTH|STATE|VALID)|OUT_(?:CONF|LENGTH|STATE|VALI(?:D|D_IN)))|B_(?:IN|OUT)|R_(?:IN|OUT)|S(?:B_(?:IN|OUT)|D_(?:IN|OUT)|W_(?:IN|OUT))|W_(?:IN|OUT)|X_(?:IN|OUT)))|F(?:RDP_(?:ACK_REQ|DIAG|ERR(?:_REAC|OR)|S(?:ENDMODE|UB(?:S|S_ON)))|SDP_(?:DIAG|ERR(?:_REAC|OR)|SUBS_ON))|GG|HOUR|I(?:N|N(?:A|CO|S(?:[EI]?|E(?:[DP]?|PD)|I(?:[DP]?|PD))))|L(?:EVELSID|INK_TRANS_RATE)|M(?:ARKERS(?:I|I(?:[DP]?|PD))|INUTE|ON(?:IFACT|TH)|SECOND|Y(?:LN|M(?:L(?:N|NT)|N|T(?:LN|N))))|OU(?:T|T(?:A|S(?:[EI]?|E(?:[DP]?|PD)|I(?:[DP]?|PD))))|P(?:B(?:B_(?:IN|OUT)|D_(?:IN|OUT)|R_(?:IN|OUT)|W_(?:IN|OUT)|X_(?:IN|OUT))|LCSI(?:IN|OUT)|RO(?:B(?:E|E_LIMITED)|T(?:_LOCK|O|OC)))|S(?:ECOND|T(?:ATSID|OPESI))|T(?:C_LTO|IMERSI|OO(?:L|L(?:_MLN|M(?:LN|N|T(?:LN|N)))))|USED(?:[DT]?|ND)|XFAULTSI|YEAR)|A_(?:A(?:C(?:C|C(?:_PERCENT|LIMA)|S_REL|T_INDEX_AX_POS_NO)|LARM_STAT|TOL|X(?:_DISABL(?:E|E_SRC)|CHANGE_(?:STAT|TYP)))|B(?:CS_OFFSET|RAKE_(?:COND[BM]|STATE))|C(?:HANNO|O(?:LLPOS|UP_(?:ACT|COR(?:R|R_DIST)|OFFS))|P(?:ACT(?:FA|LA)|BC|DEFLA|F(?:AC(?:CT|T)|CMD(?:PT|VT)|M(?:O[FN]|SON)|R(?:EQV|S))|L(?:ACC|C(?:MD[PV]|TID)|DEN|IN(?:SC|TR)|NUM|OUT(?:SC|TR)|RS|S(?:ETVAL|TATE)|TYPE)|M(?:ALARM|RESET|STAR(?:T|TPRT)|VDI)|N(?:ACT(?:FA|LA)|DEFLA)|S(?:ETTYPE|YN(?:CO(?:[PV]?|P2)|FI(?:[PV]?|P2))))|URR)|D(?:E(?:LT|PAXO)|IAM_STAT|T(?:B(?:[BW]?|RE(?:[BM]?|B_(?:C(?:MD|ORR)|DEP)|M_(?:C(?:MD|ORR)|DEP)))|E(?:[BW]?|P[BW])|S[BW]))|E(?:G|G_(?:A(?:CTIVE|X)|DENOM|NUM(?:_LA|ERA)|SY(?:N|NFA)|TYPE)|NC(?:_(?:A(?:CTIVE|MPL)|COM(?:P|P_(?:IS_MODULO|M(?:AX|IN)|STEP)))|1_ACTIVE|2_ACTIVE)|SR_(?:ENABLE|STAT|TRIGGER)|TRANS)|F(?:GR(?:EF|OUP)|IX_(?:ON_POINT|POINT_SELECTED)|OC|XS)|I(?:[BMW]?|B(?:_CORR|[CN]?|N_CORR)|E(?:N|N_CORR)|N(?:_SYNC|POS_STA(?:T|TE))|PO_NC_CHANAX|TR|W_CORR)|J(?:ERK(?:_(?:COUNT|T(?:IME|OT))|LIMA)|OG_POS_(?:ACT|SELECTED))|L(?:EAD_(?:[PV]?|P_TURN|S[PV])|OA(?:D|D_SMOOTH))|M(?:A(?:CHAX|SL_(?:DEF|STAT))|EA(?:ACT|S_(?:CORNER_SETANGLE|DIR_APPROACH|LATCH|P(?:1_VALID|2_VALID|3_VALID|4_VALID|OINT[1-4])|S(?:E(?:MA|T(?:ANGLE|POINT))|P_VALID)|WP_SETANGLE))|[MW]?|M[1-4]|OTEND|W[1-4])|O(?:F(?:F|F_(?:LIMIT|VAL))|N_FIX_POINT|SCILL_(?:BREAK_POS[12]|REVERSE_POS[12])|VR)|P(?:CS_REL|LC_OVR|O(?:LF(?:A|A_VALID)|SRES|WE(?:R|R_SMOOTH))|ROG_INDEX_AX_POS_NO)|QEC_(?:ACCEL_[1-3]|COARSE_STEPS|DIRECTIONAL|FINE_STEPS|LEARNING_RATE|MEAS_TIME_[1-3]|TIME_[12])|RE(?:F|POS_DELAY)|S|S(?:C(?:C_STAT|PAR|TRACE)|NGLAX_STAT|OFTEND[NP]|TAT|YN(?:C|CDIF(?:F|F_STAT)))|T(?:O(?:F(?:F|F_(?:LIMIT|PREP_DIFF|VAL))|RQUE|TAL_OVR)|RAVEL_(?:COUN(?:T|T_HS)|DIS(?:T|T_HS)|TIM(?:E|E_HS))|Y(?:P|PE))|V(?:ACT[BMW]|C|ELOLIMA)|WM[1-4])|C_(?:A(?:CT(?:_(?:PROG_NET_TIME|TOOL_LENGTH_INDEX)|UAL_PARTS)|LARM_STAT|SUP|U(?:TO_JOG_STATE|XFU_(?:EXT|M_(?:EXT|STATE|TICK|VALUE)|PREDEF_INDEX|S(?:PEC|TATE)|T(?:ICK|YPE)|VALUE))|XCTSW[AE])|BLOCK(?:_PROG(?:INFO|STATE)|TYP(?:E|EINFO))|C(?:O(?:LLPOS|N(?:E_ANGLE|STCUT_S))|TOL|UT(?:_INV|MO(?:D|D(?:_ANG|K|KA))|TING_TIME)|YCLE_TIME)|D(?:EL(?:AYFST|T)|RF|T(?:B[BW]|E[BW]))|ESR_TRIGGER|F|F(?:_(?:G0|TYPE)|C(?:T|T(?:[0-3]|1(?:C|LL|UL)|2(?:C|LL|UL)|3(?:C|LL|UL)|LL|UL))|GROUP_MASK|IF(?:O|O(?:1|10|2|3|4|5|6|7|8|9|x))|Z)|G0MODE|I(?:N_KEY_(?:G|G_(?:ISENABLE|RUN_(?:IN|OUT)))|PO_(?:BUF|STATE)|W_(?:STAT|TU))|JOG_C(?:IRCLE_SELECTED|OORD)|LIFTFAST|M(?:_TOOL_LENGTH_INDEX|ARKER|E(?:A|AS(?:_(?:ACT_PLANE|C(?:H(?:BFR|SFR)|ORNER_(?:ANGLE|SETANGLE))|D(?:_NUMBER|I(?:AMETER|R_APPROACH))|F(?:INE_TRANS|RAM(?:E|E_SELECT))|INPUT|LATCH|NCBFR|P(?:1_COORD|2_COORD|3_COORD|4_COORD|FRAME)|RESULTS|S(?:CALEUNIT|E(?:MA|T_COORD))|T(?:_NUMBER|OOL_(?:LENGTH|MASK)|YPE)|UIFR|VALID|WP_(?:ANGLE|SETANGLE))|FRAME))|ONMIN|SNUM|THNU(?:M|M_BEFORE_SEARCH))|O(?:LD_PROG_NET_TIM(?:E|E_COUNT)|PERATING_TIME|TOL|VR)|P(?:A(?:RAM|TH(?:ACC|JERK|N))|L(?:C_OVR|T(?:BB|EB))|R(?:E(?:P_(?:ACT_LOA(?:D|D_GROSS)|M(?:AX_LOA(?:D|D_GROSS)|IN_LOA(?:D|D_GROSS)))|SET)|O(?:G|G_NET_TIME_TRIGGER)|TIME_(?:[ABM]?|A_INC|M_INC)))|R(?:E(?:POS_PATH_MODE|QUIRED_PARTS|TPOINT)|OT_SYS|PVALID)|S(?:_TYPE|AFE_SYNA_MEM|DIR|ERUPRO|GEAR|IM_(?:MODE|TIME_(?:BLOCK|STEP))|M(?:AX(?:AC(?:C|C(?:_INFO|EL_IDX))|V(?:EL(?:O|O_I(?:DX|NFO))|RLO))|INVEL(?:O|O_INFO)|ODE)|P(?:ECIAL_PARTS|IND_STATE|LITBLOCK)|T(?:AT|O(?:LF|P_COND))|VC|Y(?:N(?:A_(?:MEM|STATE)|C_(?:A(?:CT_LOAD|VERAGE_LOAD)|MAX_LOAD))|STE(?:M|M_(?:MARKER|PARAM))))|T(?:_TOOL_LENGTH_INDEX|ANEB|C|C_(?:ACK[CT]|CMD[CT]|DISTANCE|FCT|L(?:F[NO]|MYN|T[NO])|M(?:F[NO]|MYN|T(?:DIST|LTN|[NO]?|NLOC|TN))|STATUS|T(?:HNO|NO|OOLIS))|HREAD_PITC(?:H|H_(?:ACT|INC))|IM(?:E|E(?:[CRS]?|SC))|O(?:F(?:F|F[LR])|OL(?:_(?:O_(?:ACT|COR(?:R|RD)|DIFF|END)|R_(?:ACT|COR(?:R|RD)|DIFF|END))|O_(?:ACT|DIFF|END)|R_(?:ACT|DIFF|END))|TAL_(?:OVR|PARTS))|R(?:A(?:F(?:O|O_(?:C(?:HAIN|ORR_ELEM_[PT])|NAME|ORIAX_(?:DIR_[PT]|LOC)|PA(?:R|RSET)|SECTION_[PT]|TYPE_NAME))|NS_SYS)|IGGER))|V(?:ACT(?:[BW]?|BF|WF)|C)|WORKAREA_CS_(?:COORD_SYSTEM|GROUP|LIMIT_(?:MINUS|PLUS)|MINUS_ENABLE|PLUS_ENABLE))|N_(?:A(?:CTIVATE_COLL_CHECK|UXFU_LIST_(?:CHANNO|ENDINDEX|GROUPINDEX)|XCT(?:AS|SW[AE]))|BUS_FAIL_TRIGGER|C(?:E(?:C|C_(?:DIRECTION|I(?:NPUT_(?:AXIS|NCU)|S_MODULO)|M(?:AX|IN|ULT_BY_TABLE)|OUTPUT_(?:AXIS|NCU)|STEP|TYPE))|OLL_(?:CHECK_OFF|IPO_(?:ACTIVE|LIMIT)|LOAD|MEM_(?:AVAILABLE|USE_(?:ACT|M(?:AX|IN)))|PAIRS_ACT|STAT(?:E|E_COND)))|E(?:SR_TRIGGER|XPORT_RESTRICTED)|FACETS_(?:A(?:CT|VAILABLE)|INTER(?:_MIN|N_(?:A(?:CT|VAILABLE)|MAX))|M(?:AX|IN))|IPO_(?:ACT_LOAD|CHANAX|LOAD_(?:LIMIT|PERCENT)|M(?:AX_LOAD|IN_LOAD))|KIN_CHAIN_ELEM_ACT|L(?:A(?:I_AX_(?:IS_(?:AXCTAX|L(?:EADLINKAX|INKAX))|TO_(?:IPO_NC_CHANAX|MACHAX))|NGUAGE_ON_HMI)|INK_(?:CO(?:MM_STATE|NN_(?:RCV|S(?:DN|IZE_LINKVAR|ND)))|TRANS_RATE_LAS(?:T|T_SUM)))|NCK_VERSION|P(?:ERSDIAG|OWERON_(?:STATE|TIME)|R(?:EP_(?:ACT_LOA(?:D|D_GROSS)|M(?:AX_LOA(?:D|D_GROSS)|IN_LOA(?:D|D_GROSS)))|OT_AREA(?:_ELEM_ACT|S_ACT)))|R(?:EBOOT_DELAY_TIME|OB(?:IN|OUT))|S(?:E(?:RVO_(?:ACT_LOAD|M(?:AX_LOAD|IN_LOAD))|TUP_TIME)|IM_(?:CHAN_MASK|MAX_IPOSTEP)|LTRACE|YNC_(?:ACT_LOAD|MAX_LOAD|TO_IPO))|T(?:_PROT_ELEM_ACT|IMER)|VMODEL_STATUS))|C_(?:[ABCDEFGHIJKLMNOPQRSTUVWXYZ]?|A(?:_PROG|LL_PROG|UX_(?:EXT|IS_QUICK|VALUE))|B_PROG|C_PROG|D(?:_PROG|L|L_PROG|UPL(?:O|O_PROG))|E_PROG|F_PROG|G(?:_PROG|60_PROG)|H(?:_PROG|E|E_PROG)|I(?:_(?:NUM|ORDER|PROG)|N|NC_PROG|SOPRINT)|J_(?:NUM|ORDER|PROG)|K_(?:NUM|ORDER|PROG)|L_PROG|M(?:_PROG|ACPAR|E|E_PROG)|N_PROG|O(?:_PROG|UT)|P(?:_PROG|I|I_PROG)|Q_PROG|R_PROG|S_PROG|T(?:_(?:PROG|VALUE)|CA|[ES]?|E_PROG|HN(?:O|O_PROG)|S_PROG|YP_PROG)|U_PROG|V(?:_PROG|ARIABLEN)|W_PROG|X(?:_PROG|X)|Y_PROG|Z_PROG)|N(?:K_(?:1ST_ELEM|A(?:_OF(?:F|F_FIN(?:E|E_LIM))|XIS)|CHAIN_NAME|N(?:AME|EX(?:T|TP))|OFF_DI(?:R|R_FIN(?:E|E_LIM))|PARALLEL|SWITC(?:H|H_(?:INDEX|POS))|TYPE)|P_(?:1ST_PROT|A(?:DD|NG)|BIT_NO|C(?:HAIN_ELEM|OL(?:L_PAIR|OR))|D(?:_LEVEL|IR)|FILENAME|IN(?:DEX|IT_STAT)|N(?:AME|EX(?:T|TP))|OFF|P(?:ARA|ROT_(?:COLOR|D_LEVEL|NAME|TYPE))|SAFETY_DIST|T(?:_(?:ANG|DIR|FILENAME|NAME|OFF|PARA|TYPE)|YPE)|USAGE)|T_(?:AUX_POS|BASE_ORIEN(?:T|T_NORMAL)|C(?:LOSE_CHAIN_[PT]|NTRL|ORR_ELE(?:M|M_[PT]))|GEO_AX_NAME|HIRT(?:_INC|H_(?:IN(?:C|CR)|OFF))|I(?:DENT|GNORE_TOOL_ORIENT)|NAME|P(?:_CHAIN_(?:LAST_ELEM|NAME)|OLE_(?:LIMIT|SIDE_FIX|TOL))|ROT_(?:AX_(?:CNT|M(?:AX|IN)|NAME|POS)|OFFSET_FROM_FRAME)|T(?:_(?:CHAIN_(?:LAST_ELEM|NAME)|REF_ELEM)|RAFO_(?:IN(?:CLUDES_TOOL|DEDX)|TYPE))|XXX))|P(?:_(?:A(?:C(?:SFRAME|T(?:_TOOL_LENGTH_INDEX|BFRAME|FRAME|GEOAX|ID))|[DP]?|DT|EP|P(?:DV|R)|T(?:DT|PG)|XN[123X])|B(?:FRAME|LOCKNO)|C(?:H(?:ANNO|B|BF(?:R|R(?:(?:[0-9]|1[0-5])|AM(?:E|E(?:[0-9]|1[0-5]))|MASK))|SFRMASK)|O(?:NSTCUT_S|UP_OFFS)|T(?:ABDEF|OL)|UT(?:_INV|MO(?:D|D(?:_(?:ANG|ERR)|K|KA)))|YCF(?:R|R(?:AME|SYSTEMFRAME)))|[DFHS]?|D(?:_BEFORE_SEARCH|ELAYFST|IAM_STAT|L(?:_BEFORE_SEARCH|NO)|RYRUN)|E(?:G_BC|P|PM|XT(?:BUF|F(?:R|R(?:AME|SYSTEMFRAME))|GG|PATH|SFRAME))|F(?:_TYPE|[AZ]?|GROUP_MASK|IX_STAT)|G(?:F(?:R|RNUM)|G|WPS)|I(?:FR(?:AME|NUM)|NCOA(?:P|P_(?:[BCIR]?|S(?:16|160|32|IZE)))|PTRLOCK|S(?:_EES_PATH|O(?:_STACK|1F(?:R|R(?:AME|SYSTEMFRAME))|2(?:_(?:DNO|HNO)|F(?:R|R(?:AME|SYSTEMFRAME)))|3(?:_(?:DNO|NO)|F(?:R|R(?:AME|SYSTEMFRAME)))|4F(?:R|R(?:AME|SYSTEMFRAME)))|TEST))|LI(?:FTFAST|NENO)|M(?:_TOOL_LENGTH_INDEX|A(?:G|G(?:[ANS]?|DIS[LS]|HL(?:T|TN)|N(?:[AHS]?|DI(?:S|SS)|HLT|REL)|REL))|C|MCA|SNUM|T(?:H(?:NUM|SDC)|OOL(?:MT|[NT]?|NT)|P2))|N(?:CBF(?:R|R(?:(?:[0-9]|1[0-5])|AM(?:E|E(?:[0-9]|1[0-5]))|MASK))|UM_SPINDLES)|O(?:FFN|PMODE|RI_(?:ANG|DIFF|POS|S(?:OL|TAT))|TOL)|P(?:A(?:RTF(?:R|R(?:AME|SYSTEMFRAME))|TH)|FRAME|OL(?:F|F_VALID)|RO(?:G|G(?:_(?:EVENT|NAME|SUFFIX)|PATH)))|RE(?:LF(?:R|R(?:AME|SYSTEMFRAME))|PINF)|S(?:_TYPE|AUTOGEAR|CC_STAT|DIR|E(?:ARC(?:H|H(?:_(?:MASL[CD]|S|S(?:DIR|GEAR|MODE|PO(?:S|SMODE)))|[12L]?))|RACH[1L]|TF(?:R|R(?:AME|SYSTEMFRAME)))|GEAR|I(?:M|M(?:_MODE|UL))|MODE|T(?:ACK|OLF)|UB(?:_(?:A(?:UTOGEAR|XFCT)|CA|GEAR|LA|M19|S(?:PO(?:S|S(?:A|IT|MODE))|TAT))|PAR)|VC)|T(?:_TOOL_LENGTH_INDEX|C|C(?:ANG|DIFF|NUM|S(?:OL|TAT))|ECCYCLE|H(?:_OF_D|READ_PITC(?:H|H_INC))|MNOIS|O(?:F(?:F|F[LR])|O(?:L|L(?:_(?:O|O_R)|BIN|[DLOPRT]?|E(?:N(?:V|VN)|XIST)|F(?:R|R(?:AME|SYSTEMFRAME))|N(?:[DGOPT]?|DL)|ROT)))|RAF(?:[OR]?|O_(?:CHAIN|NUM|PA(?:R|RSET))|R(?:AM(?:E|E_[PT])|SYSTEMFRAME)))|U(?:BFR|I|IF(?:NUM|R|R(?:EINSTELLBARE|NUM))|SEKT)|VDITCP|W(?:ORKAREA_C(?:S|S_(?:COORD_SYSTEM|LIMIT_(?:MINUS|PLUS)|MINUS_ENABLE|PLUS_ENABLE))|P(?:_STAT|F(?:R|R(?:AME|SYSTEMFRAME)))))|C_(?:GCC_STATE|TRAFO_ROT_CHA(?:IN_INDEX|N_AX_(?:EX|IN))))|TC_(?:ADP(?:[Tx]?|T[1234IT])|CAR(?:R|R(?:_KIN_(?:CNTRL|PART_(?:END|START)|T(?:OOL_(?:END|START)|RAFO_NAME))|(?:[1-9]|[1-6][0-9])))|D(?:P|P(?:1|10|11|12|13|14|15|16|17|18|19|191|2|20|201|21|22|23|24|25|3|34|35|4|5|6|7|8|9|H|V|x|X|C(?:1|10|2|3|4|5|6|7|8|9|E|I|x|Ex|S(?:1|10|2|3|4|5|6|7|8|9|x))|N[ET]|ROT|V(?:[3-5]|N[3-5])))|E(?:CP(?:13|14|15|16|17|18|19|20|21|23|24|25|26|27|28|29|30|31|33|34|35|36|37|38|39|40|41|43|44|45|46|47|48|49|50|51|53|54|55|56|57|58|59|60|61|63|64|65|66|67|68|69|70|71|x|x3|X[356Y])|PX)|IS(?:O|O_(?:[DHQR]?|DW|HW|L(?:[1-3]|1W|2W|3W)|RW))|M(?:A(?:M(?:P|P[1-3])|P|P(?:(?:[1-9]|10)|C(?:1|10|2|3|4|5|6|7|8|9|x|S(?:1|10|2|3|4|5|6|7|8|9|x))))|DP[12]|LSR|OP(?:1|11|13|15|2|3|4|5|6|x|C(?:1|10|2|3|4|5|6|7|8|9|x|S(?:1|10|2|3|4|5|6|7|8|9|x)))|P(?:AP10|P(?:_S(?:P|P_MAX_ACC)|(?:[1-9]|[1-6][0-9])|C(?:1|10|2|3|4|5|6|7|8|9|x|S(?:1|10|2|3|4|5|6|7|8|9|x)))|TH)|SLR|T(?:P|P(?:_(?:KD|P(?:OS|ROTA))|[2345678CNP]?|C(?:1|10|2|3|4|5|6|7|8|9|x|S(?:1|10|2|3|4|5|6|7|8|9|x))|P(?:[2467ACL]?|C(?:1|10|2|3|4|5|6|7|8|9|N|S|x|S(?:1|10|2|3|4|5|6|7|8|9|x))))|TP3))|S(?:C(?:P|P(?:12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|33|34|35|36|37|38|39|40|41|43|44|45|46|47|48|49|50|51|53|54|55|56|57|58|59|60|61|63|64|65|66|67|68|69|70|71|x|x3|X[3-6]))|PIND_DEF_MASTER_SPIND)|T(?:G1|OOL_MANAGEMENT_(?:MASK|TOOLHOLDER)|P|P(?:_(?:MA(?:X|X_(?:AC(?:C|CEL)|VELO))|PROTA)|(?:[1-9]|1[0-1])|C(?:1|10|2|3|4|5|6|7|8|9|E|x|S(?:1|10|2|3|4|5|6|7|8|9|x))|G(?:_DRSP(?:ATH|ROG)|[1-9])))|VDITCP)|VA_(?:ABSOLUTE_ENC_(?:DELTA_INIT|ERR_CNT|STATE|ZERO_MON_M(?:A|AX))|C(?:C_COMP_VA(?:L|L_TOTAL)|EC_COMP_VAL|OUP_OFFS|PSYNC2|URR)|D(?:IST_TORQUE|P(?:_ACT_TEL|E))|E(?:G|G_SYNCDIF(?:F|F_S)|NC(?:_ZERO_MON_(?:AC(?:CESS_CNT|T)|ERR_CNT|INIT)|1_COMP_VAL|2_COMP_VAL))|F(?:OC|X(?:S|S_INFO))|I(?:[BMSW]?|BC|M[12]|PO_NC_CHANAX|TR)|L(?:AG_ERROR|OAD)|MOT_(?:CLAMPING_STATE|SENSOR_(?:ANA|CONF|DIGI))|P(?:O(?:SCTRL_MODE|WER)|RESSURE_[AB])|S(?:CE|TOPSI|YNCDIF(?:F|F_STAT))|T(?:EMP_COMP_VAL|ORQU(?:E|E_AT_LIMIT))|VA(?:CTM|LVELIFT)|XFAULTSI))\b'
          scope: support.variable.nck.s840d
          pop: true
        # unknown NC-Variable
        - match: \w+\b
          scope: invalid.illegal.s840d
          pop: true

    # SINUMERIK var
    - match: '\$PI\b'
      scope: support.variable.consts.s840d

    # SINUMERIK synchron action guds
    - match: '\$?SYG_[BIR]M\b'
      scope: support.variable.guds.s840d

    # match anything valid inside an expression as GUD, PUD or LUD
    - match: '{{label}}\b(?!\()'
      scope: variable.other.s840d

###################################################################
# SINUMERIK sinumerik axis constants
#    valid in
#    - array block
#    - parameter block
###################################################################

  axes-variables:

    # SINUMERIK AX identifier (valid)
    #  e.g.: AX1...AX31 , AX[...]
    - match: '\b(AX(?:[1-2]?[0-9]\b|3[01]\b|(?=\[)))'
      scope: support.variable.s840d
    # SINUMERIK AX identifier (invalid)
    #  e.g.: AX32...AX99999..
    - match: '\b(AX\d+)'
      scope: invalid.illegal.s840d
    # SINUMERIK channel axis names
    #  e.g.: XC, YC, ZC, A, B, C
    #  must be followed by: \s*(?=[;,=\[\]\)])
    - match: '\b((?:[ABC]|[QUVWXYZ]C))\s*(?=[;,=\[\]\)])'
      scope: support.variable.s840d
    # SINUMERIK machine axis names
    #  direct ident:    X1, Y1, Z1, A1, B1
    #  indirect ident:  X[1], Y[1]
    #  must be followed by: \s*(?=[;,=\[\]\)])
    - match: '\b([ABCQUVWXYZ]\d?)\s*(?=[;,=\[\]\)])'
      scope: support.variable.s840d
    # HECKERT channel and machine axis names
    #  must be followed by: \s*(?=(?:[;,=\[\]\)]|$))
    #  can stand alone in a block
    - match: '\b((?:CSP|CPL|WZB|ZP)\d?)\s*(?=(?:[;,=\[\]\)]|$))'
      scope: support.variable.s840d

###################################################################
# SINUMERIK properties
# language specific properties
#   e.g.: SPOS=10 | SPOS[2]=10
###################################################################

  properties:
    - match: '(?i:A(?:CC|DI(?:S|SPOS)|LF|TOL)|COARSEA|DILF|F(?:[AP]?|INEA)|I(?:P|POENDA)|PO(?:S|S[AP])|S(?:F|PO(?:S|SA)))\b'
      scope: support.variable.iso.s840d
      push:
        # property index
        - match: '\['
          scope: punctuation.definition.parameters.end.s840d
          set: brackets-square-begin
        # begin of value
        - match: '(?==)'
          pop: true
        # property name must not be followed by anything else but a '[' or '='
        # leave context not after end of line
        - match: '\S+(?!;)|$'
          scope: invalid.illegal.s840d
          pop: true

###################################################################
# known functions
###################################################################

  functions:
    # SINUMERIK function : func(...)
    #   e.g.: ABS(...)
    - match: '(?i:A(?:BS|C|C(?:[NP]?|OS)|D(?:DFRAME|ISPOSA)|SIN|TAN2|X(?:NAME|STRING|TOSPI))|BOUND|C(?:A(?:C|C[NP]|LLPATH|NCEL)|DC|H(?:ANDATA|ECKSUM|KD(?:M|NO))|IC|L(?:EARM|RINT)|MIRROR|OS|ROT|SCALE|TRANS)|D(?:AC|C|EL(?:DL|M(?:LRES|T)|OBJ|T|TC)|IC)|EX(?:ECSTRING|P)|FILE(?:DATE|INFO|S(?:IZE|TAT)|TIME)|GET(?:ACT(?:T|TD)|DNO|EXET|FREELOC|SELT|T)|I(?:C|NDEX|PBRKA|S(?:AXIS|FILE|NUMBER|VAR))|LN|M(?:A(?:TCH|XVAL)|IN(?:DEX|VAL)|SG|VTOOL)|N(?:EW(?:MT|T)|UMBER)|PO(?:S(?:M|MT)|T)|R(?:AC|ESETMON|I(?:C|NDEX)|OUN(?:D|DUP))|S(?:ET(?:AL|DNO|INT|M(?:S|TH)|PIECE|T(?:A|IA))|I(?:N|REL(?:AY|IN|OUT|TIME))|PRINT|QRT|TRLEN|UBSTR)|T(?:C[AI]|O(?:LOWER|UPPER)|R(?:A(?:ANG|CYL|NSMIT|ORI)|UNC))|W(?:AITS|RITE))\b'
      scope: support.function.s840d
      push:
        # function parameters
        - match: '\('
          scope: punctuation.definition.parameters.begin.s840d
          set: parens-begin
        # function name must not be followed by anything else but a '('
        # leave context not after end of line
        - match: '\S+(?![\(;])|$'
          scope: invalid.illegal.s840d
          pop: true

    # SINUMERIK command with ISO style parameters
    #   e.g.: TRANS X0 Y0.4
    # TODO: merge with top level cycle call
    - match: '(?i:A(?:C(?:CLIMA|TBLOCNO)|MIRROR|NG|[PR]?|RO(?:T|TS)|S(?:CALE|PLINE)|TRANS|X(?:CTSW(?:E|ED)|TOCHAN))|B(?:AUTO|LSYNC|NAT|RIS(?:K|KA)|SPLINE|TAN)|C(?:AL(?:C(?:DAT|POSI)|L)|DO[FN]|F(?:C|I(?:N|NE)|TCP)|H[FR]|IP|O(?:MP(?:C(?:AD|URV)|LETE|O[FN])|NT(?:DCON|PRON)|RROF|UP(?:DE[FL]|O(?:[FN]?|FS|NC)|RES))|[PT]?|PR(?:ECO[FN]|O(?:T|TDEF))|R(?:OTS|PL)|SPLINE|T(?:A(?:B|B(?:DE[FL]|E(?:ND|XISTS)|F(?:NO|POL|SEG)|I(?:D|NV|SLOCK)|LOCK|M(?:E(?:M|MTYP)|POL|SEG)|N(?:O|OMEM)|P(?:ERIOD|O(?:L|LID))|S(?:E(?:[GV]?|GID)|SV)|T(?:E[PV]|M(?:AX|IN)|S[PV])|UNLOCK))|OL)|UT(?:2(?:D|DF)|3D(?:[CF]?|C(?:C|CD)|F[FS])|CONO[FN]|MOD))|D(?:EL(?:AYFSTO[FN]|DTG|ETE|MLOWNER|TOOLENV)|I(?:A(?:CYCOFA|M(?:90|90A|C(?:HA(?:N|NA)|YCOF)|O(?:[FN]?|FA|NA)))|S(?:ABLE|[CR]?|CL|P(?:LO[FN]|R))|T[ES])|L|R(?:FOF|IV(?:E|EA))|YN(?:FINISH|NORM|POS|ROUGH|SEMIFIN)|ZERO)|E(?:AUTO|G(?:DE[FL]|O(?:F[CS]|N|NSY(?:N|NE)))|NA(?:BLE|T)|TAN|X|X(?:EC(?:TAB|UTE)|T(?:CALL|ERN)))|F(?:AD|[BDLZ]?|C(?:TDEF|UB)|DA|ENDNORM|FWO[FN]|GR(?:EF|OUP)|IFOCTRL|LIN|MA|NORM|OCO[FN]|P(?:[OR]?|RAO[FN])|R(?:C|CM|OM)|TO(?:C|CO[FN])|X(?:S|S[TW]))|G(?:E(?:OAX|T|T(?:D|T(?:COR|ENV)|VAR(?:AP|DFT|LIM|PHU|TYP)))|ORAP|P|WPSO[FN])|HOLES[12]|I(?:CYCO[FN]|N(?:I(?:CF|PO|RE|T|TIAL)|T(?:ERSEC|TOAX)|V(?:C(?:CW|W)|FRAME))|PTR(?:LOCK|UNLOCK)|S(?:D|OCALL))|JERK(?:A|LI(?:M|MA))|KON(?:T|T[CT])|L(?:E(?:A(?:D|DO[FN])|NTOAX)|F(?:O[FN]|POS|TXT|WP)|I(?:FTFAST|MS)|O(?:CK|NGHOLE))|M(?:ASL(?:DE[FL]|O(?:[FN]?|FS))|CALL|E(?:A(?:[CSW]?|FRAME|SA|WA)|SURE)|IRROR|MC|O(?:DAXVAL|V))|N(?:EWCONF|ORM|PRO(?:T|TDEF))|O(?:EMIPO[12]|[FS]?|FFN|MA[1-5]|RI(?:AX(?:ES|POS)|[CDS]?|C(?:ON(?:C(?:CW|W)|IO|TO)|URVE)|EULER|MKS|P(?:AT(?:H|HS)|LANE)|R(?:ESET|OT[ACRT]|P(?:Y|Y2))|SO[FN]|V(?:ECT|IRT[12])|WKS)|S(?:[BCDEPST]?|C(?:ILL|TRL)|NSC|OF|P1|SE|T[12])|TOL|V(?:R|R(?:A|RAP)))|P(?:ARO(?:T|TOF)|CALL|DELAYO[FN]|HU|[LMORW]?|O(?:CKET[34]|L(?:[FY]?|F(?:A|M(?:ASK|LIN))|YPATH)|N|NS|SRANGE)|R(?:E(?:PRO|SETON)|IO)|T(?:P|PG0)|U(?:NCHACC|TFTO(?:C|CF)))|Q(?:ECLRO[FN]|U)|R(?:DISABLE|E(?:AD|LEASE|P|POS(?:[AHLQ]?|QA)|SET)|M[BEIN]|N(?:D|DM)|O(?:T|TS)|P|P(?:L|OSHA)|TLIO[FN])|S(?:AVE|BLO[FN]|C(?:ALE|C|PARA)|[DRT]?|E(?:FORM|T|T(?:M|TCOR))|LOT[12]|O(?:F(?:T|TA)|N|NS)|P(?:ATH|CO[FN]|[INP]?|IF[12]|LINEPATH|OF)|RA|T(?:A|A(?:R(?:T|TFIFO)|T)|O(?:LF|P(?:FIFO|R(?:E|EOF)))|RING(?:FIELD|IS|VAR))|UPA|VC|YN(?:FCT|[RW]?|RW))|T(?:A(?:N|N(?:G|G(?:DEL|O[FN])))|C(?:ARR|O(?:ABS|F(?:R|R[XYZ])))|HETA|ILT|LIFT|MO[FN]|O(?:F(?:F|F(?:O[FN]|R)|RAM(?:E|E[XYZ]))|OL(?:ENV|G(?:NT|T))|RO(?:T|T(?:OF|[XYZ]?))|W(?:BCS|KCS|MCS|STD|TCS|WCS))|RA(?:CON|F(?:O|OOF)|ILO[FN]|NS)|U|URN)|U(?:NLOCK|PATH)|VELOLIM|W(?:A(?:IT(?:[CEMP]?|MC)|L(?:CS(?:[0-9]|10)|IMO[FN]))|ELOLIMA|RTPTR))\b'
      scope: support.function.s840d

    # custom user cycle
    - match: '(\w+)\s*(\()'
      captures:
        1: support.function.s840d
        2: punctuation.definition.parameters.begin.s840d
      push: parens-begin
